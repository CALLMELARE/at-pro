{"version":3,"sources":["assets/twtlogo_tilt.svg","assets/favicon.png","assets/twtlogo_tilt_rev.svg","assets/POST-bg.png","assets/twtlogo_tilt_white.svg","assets/PROJECT-bg.png","assets/twtlogo_tilt_grey.svg","serviceWorker.ts","pages/404.tsx","api/OAuth.ts","api/callApi.ts","debug/debug.ts","settings/settings.ts","pages/Login.tsx","components/public/Sider.tsx","test/discuss.ts","components/Dashboard/Dashboard.tsx","test/userinfo.ts","components/Profile/ResetPassword.tsx","components/public/Noti.tsx","components/Profile/Profile.tsx","api/Profile.ts","test/message.ts","components/Message/MessageBox.tsx","components/Message/Message.tsx","components/public/ActivityDonut.tsx","test/activity.ts","test/activityFinished.ts","components/Work/Work.tsx","test/members.ts","components/public/PicturesWall.tsx","components/public/SendMessage.tsx","components/Members/Members.tsx","components/Members/MemberDetail.tsx","components/MdUnit/MdEditor.tsx","components/Work/WeekReport/WeekReportEdit.tsx","components/MdUnit/MdExample.ts","components/MdUnit/MdGuide.tsx","components/public/AdminPanel.tsx","components/Admin/AuthManage/AuthorityManage.tsx","components/Admin/UserManage/UserManage.tsx","test/sysnotice.ts","components/Admin/SysNotice/SystemNotice.tsx","components/Admin/FuncManage/FunctionHeader.tsx","components/Admin/FuncManage/FunctionManage.tsx","components/Work/Meeting/Sign.tsx","components/Work/Meeting/MeetingRecord.tsx","components/Work/Meeting/MeetingHistory.tsx","components/Work/Meeting/Leave.tsx","components/Work/Meeting/Meeting.tsx","components/Work/WeekReport/WeekReport.tsx","test/weekreport.ts","components/Work/Discuss/Discuss.tsx","test/reportlist.ts","components/Work/WeekReport/WeekReportList.tsx","components/Work/Discuss/WorkSpace.tsx","components/Work/Meeting/GroupAttending.tsx","components/Work/Meeting/NewMeeting.tsx","components/Message/MessageDetail.tsx","test/messagedetail.ts","test/sysnoticehistory.ts","components/Admin/SysNotice/SystemNoticeHistory.tsx","components/Admin/FuncManage/Meeting.tsx","components/Admin/FuncManage/MeetingDetail.tsx","test/meetingdetail.ts","components/Admin/FuncManage/Discuss.tsx","components/Admin/FuncManage/DiscussDetail.tsx","components/Admin/FuncManage/Account.tsx","components/Admin/FuncManage/AccountDetail.tsx","components/Admin/UserManage/AddUser.tsx","test/deleteduser.ts","components/Admin/UserManage/DeletedUser.tsx","routes/routeConfig.ts","test/notification.ts","components/public/Notification.tsx","components/public/Header.tsx","App.tsx","pages/NoAuth.tsx","pages/Logout.tsx","Router.tsx","index.tsx","assets/usericon.png"],"names":["module","exports","Boolean","window","location","hostname","match","NotFound","numberList","i","push","className","this","numberRender","src","logo","width","height","href","Component","resetPassword","newpwd1","newpwd2","formdata","FormData","append","apiPath","request","method","mode","headers","body","credentials","API_ROOT","config","ROOT","fetchApi","fullUrl","customRequest","toUpperCase","contentType","auth","Authentication","sessionStorage","getItem","localStorage","fetch","debug","settings","debugSettings","lack","Content","Footer","type","AdminMode","loginBypass","BypassLogin","Login","props","onFinish","values","setItem","setState","loading","username","password","error","user","psw","getLogin","then","res","json","data","console","log","loginData","message","name","token","state","title","twtlogo","content","okText","style","textAlign","dashed","initialValues","remember","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","orgInShort","htmlType","revtwtlogo","Sider","SiderCustom","visible","pathname","split","theme","trigger","collapsible","collapsed","selectedKeys","menuRender","key","to","HomeOutlined","MessageOutlined","ProjectOutlined","TeamOutlined","Countdown","Dashboard","statusPoint","status","withText","text","handleDDLClick","e","preventDefault","DDLMouseOver","calcProgress","startTime","endTime","start","Date","end","now","getTime","Math","ceil","renderMissionList","list","mission","map","item","deadline","CalendarOutlined","onClick","bind","value","format","percent","showInfo","joinTime","hour","getHours","greeting","panelCtrl","gutter","xs","sm","md","lg","span","AppstoreAddOutlined","fontSize","UserSwitchOutlined","PartitionOutlined","NotificationOutlined","MailOutlined","color","org","layout","labelCol","wrapperCol","tailLayout","offset","validateMessages","ResetPwd","formRef","React","createRef","newpw1","newpw2","warning","label","allowClear","Noti","switchPosition","pos","switchIcon","CheckCircleOutlined","InfoCircleOutlined","ExclamationCircleOutlined","CloseCircleOutlined","QuestionCircleOutlined","DeleteOutlined","openNotification","notification","open","description","duration","during","placement","position","icon","btn","Profile","handleImgMouseOver","imgMouseOver","handleImgMouseLeave","handleTextMouseOver","textMouseOver","handleTextMouseLeave","faviconContainer","info","onMouseOver","onMouseLeave","userIcon","textList","studentid","team","getAuthName","email","componentDidMount","authType","time","substr","testUserInfo","MessageBox","handleClickSelect","onselect","renderMesItem","id","from","substring","updated_at","renderMesList","msg","success","filter","selected","target","checkedValues","Group","onChange","onFilterChange","defaultValue","Button","danger","onSelectChange","Message","Panel","Global","G2","animate","colors","DataView","DataSet","Html","Guide","cols","formatter","val","Donut","dv","source","transform","field","dimension","as","scale","padding","forceFit","radius","innerRadius","showTitle","itemTpl","html","calc","alignX","alignY","tooltip","lineWidth","stroke","point","actData","activityData","finData","activityFinishedData","TabPane","studioAttend","count","teamAttend","donutData","calcAll","result","renderAct","host","renderFin","EditOutlined","CommentOutlined","defaultActiveKey","tab","display","toString","action","PictureWall","UploadOutlined","maskStyle","backgroundColor","backgroundImage","maskImg","backgroundSize","backgroundRepeat","backgroundPosition","Option","TextArea","SendMessage","onSearch","_","showModal","handleCancel","post","handleOk","modalHeader","renderReceiver","receiveList","member","memId","btncls","onOk","onCancel","footer","rows","autoFocus","Members","memLeader","memMember","memsData","length","_item","renderMems","PureComponent","MemberDetail","alt","userinfo","mdParser","MarkdownIt","highlight","str","lang","hljs","getLanguage","__","MdEditor","defaltValue","renderHTML","render","valueChange","defaltVal","join","WeekReportEdit","renderMemberList","renderTagList","handleEditorChange","SaveOutlined","RocketOutlined","expression","columns","dataIndex","dangerouslySetInnerHTML","__html","MdGuide","dataSource","pagination","hideOnSinglePage","defaultPageSize","AdminPanel","handleOnOpen","AuthorityManage","campusSwitch","campus","isChecked","checked","event","checkedChildren","unCheckedChildren","defaultChecked","UserManage","handleDelete","PlusOutlined","SystemNotice","hisPostRender","sysnotice","post_time","auther","describe","onRadioChange","FuncHeader","bgStyle","FunctionManage","Sign","renderContent","Password","backToSign","signState","MeetingRecord","onFinishFailed","errorInfo","Search","MeetingHistory","renderStatus","fontWeight","Leave","handelReasonChange","handelExplainChange","Meeting","WeekReport","renderMention","mention","names","nameList","renderTags","tags","tag","tagList","Discuss","renderItem","discussData","lastEditor","lastEditTime","date","selectWeek","handleMenuClick","WeekReportList","teamFilter","reportlist","finish","weekMenu","overlay","getFullYear","date2","day1","getDay","day2","d","round","getWeek","DownOutlined","picker","header","WorkSpace","isEditing","GroupAttending","NewMeeting","randomSerectKey","pasArr","pasArrLen","floor","random","randomKey","resetSerectKey","dateString","timeString","option","startDateOnChange","startTimeOnChange","defaultOpenValue","moment","disabled","memberOnChange","onSelect","memberOnSelect","MessageDetail","SystemNoticeHistory","sysnoticehistory","MeetingDetail","address","sponsor","desc","attend","supposed","record","DiscussDetail","Account","SettingOutlined","AccountDetail","handleEdit","edit","handleReset","phone","idcard","FormOutlined","AddUser","handlePhoneChange","test","valiPhone","handleEmailChange","valiEmail","handleIdCardChange","isNaN","valiIdCard","handleIdChange","valiId","undefined","hasFeedback","validateStatus","help","AndroidOutlined","AppleOutlined","BulbOutlined","CodeOutlined","ChromeOutlined","FormatPainterOutlined","path","component","Work","AdminFunctionManage","FuncMeeting","FuncMeetingDetail","FuncDiscuss","FuncDiscussDetail","FuncAccount","FuncAccountDetail","AdminAuthorityManage","AdminSystemNotice","AdminUserManage","handleRecovery","deluser","RollbackOutlined","renderNoti","notiData","topic","closable","onClose","HeaderComponent","showDrawer","notiCount","createElement","MenuUnfoldOutlined","MenuFoldOutlined","toggle","marginRight","LogoutOutlined","BellOutlined","Notification","Header","App","routeList","routes","forEach","rt","r","exact","getRoute","NoAccess","Logout","clear","extra","isLogged","NoAuth","Root","basename","locale","zhCN","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3cca587b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twtlogo_tilt.9f1eb11e.svg\";","module.exports = __webpack_public_path__ + \"static/media/favicon.cb425f4d.png\";","module.exports = __webpack_public_path__ + \"static/media/twtlogo_tilt_rev.273bfeda.svg\";","module.exports = __webpack_public_path__ + \"static/media/POST-bg.59957022.png\";","module.exports = __webpack_public_path__ + \"static/media/twtlogo_tilt_white.273bfeda.svg\";","module.exports = __webpack_public_path__ + \"static/media/PROJECT-bg.4f96c61d.png\";","module.exports = __webpack_public_path__ + \"static/media/twtlogo_tilt_grey.51acd193.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../styles/404.scss';\r\nimport logo from '../assets/favicon.png';\r\n\r\nclass NotFound extends Component {\r\n\r\n  numberRender() {\r\n    const numberList: JSX.Element[] = [];\r\n    for (let i = 0; i < 25; i++) {\r\n      numberList.push(<span className=\"particle\">4</span>)\r\n      numberList.push(<span className=\"particle\">0</span>)\r\n      numberList.push(<span className=\"particle\">4</span>)\r\n    }\r\n    return numberList\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"container\">\r\n        {this.numberRender()}\r\n        <article className=\"content\">\r\n          <img src={logo} width=\"100\" height=\"100\"></img>\r\n          <h1><strong>404</strong></h1>\r\n          <p>你要找的页面走丢了</p>\r\n          <p>\r\n            <a href=\"/\"><button>返回首页</button></a>\r\n          </p>\r\n        </article>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;","const getLogin = (user: string, psw: string) => {\r\n    let formdata = new FormData();\r\n    formdata.append(\"username\", user);\r\n    formdata.append(\"password\", psw);\r\n    return {\r\n        apiPath: `login`,\r\n        request: {\r\n            method: \"POST\",\r\n            mode: 'no-cors',\r\n            headers: {\r\n                \"Authorization\": \"token\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: formdata,\r\n        }\r\n    }\r\n}\r\n\r\nconst getLogout = () => {\r\n    return {\r\n        apiPath: `logout`,\r\n        request: {\r\n            method: \"GET\",\r\n            mode: 'no-cors',\r\n            credentials: 'include'\r\n        }\r\n    }\r\n}\r\n\r\nconst resetPassword = (newpwd1: string, newpwd2: string) => {\r\n    let formdata = new FormData();\r\n    formdata.append(\"newpassword\", newpwd1);\r\n    formdata.append(\"newpasswordagain\", newpwd2);\r\n    return {\r\n        apiPath: `resetpa`,\r\n        request: {\r\n            method: \"POST\",\r\n            mode: 'no-cors',\r\n            headers: {\r\n                \"Authorization\": \"token\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: formdata,\r\n            credentials: 'include'\r\n        }\r\n    }\r\n}\r\n\r\nexport { getLogin, getLogout, resetPassword }","import config from '../site-config.json'\r\n\r\nconst API_ROOT = config.ROOT;\r\n\r\ninterface req {\r\n  headers?: any,\r\n  body?: any,\r\n  method?: string,\r\n}\r\n\r\nconst fetchApi = (apiPath: string, request: req = {}) => {\r\n  const fullUrl = `${API_ROOT}/${apiPath}`;\r\n  const { headers, body, method } = request;\r\n  const customRequest: req = {};\r\n\r\n  if (method) {\r\n    customRequest.method = method.toUpperCase();\r\n  }\r\n  if (body) {\r\n    customRequest.body = body;\r\n  }\r\n  if (headers) {\r\n    const { contentType, auth } = headers;\r\n    customRequest.headers = {};\r\n\r\n    if (contentType) {\r\n      customRequest.headers['Content-Type'] = contentType;\r\n    }\r\n    if (auth) {\r\n      customRequest.headers.Authentication = auth;\r\n    }\r\n    if (sessionStorage.getItem(\"isLogin\") === \"1\") {\r\n      customRequest.headers['token'] = localStorage.getItem(\"token\");\r\n    }\r\n  }\r\n  return fetch(fullUrl, customRequest);\r\n};\r\n\r\nexport default fetchApi;\r\n","import config from '../site-config.json';\r\n\r\nconst debug = config.debug;\r\nconst settings = config.debugSettings\r\n\r\nconst panelCtrl = () => {\r\n    // 用户端/后台布局切换\r\n    if (debug === \"true\") {\r\n        if (settings.AdminMode === \"true\") {\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nconst bypassLogin = () => {\r\n    // 跳过登录界面\r\n    if (debug === \"true\") {\r\n        if (settings.BypassLogin === \"true\") {\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nexport { panelCtrl, bypassLogin }","import config from '../site-config.json';\r\n\r\nconst lack = \"错误：site-config.json中缺少\";\r\nconst lackTip = \"未知\";\r\n\r\nexport const org = () => {\r\n    if (config.org) {\r\n        return config.org\r\n    } else {\r\n        console.log(lack + \"org<string>字段\");\r\n        return lackTip\r\n    }\r\n}\r\n\r\nexport const orgInShort = () => {\r\n    if (config.orgInShort) {\r\n        return config.orgInShort\r\n    } else {\r\n        console.log(lack + \"orgInShort<string>字段\");\r\n        return lackTip\r\n    }\r\n}\r\n\r\nexport const siteTitle = () => {\r\n    if (config.title) {\r\n        return config.title\r\n    } else {\r\n        console.log(lack + \"title<string>字段\");\r\n        return lackTip\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Input, Button, Card, Modal } from 'antd';\r\nimport { Layout, Alert, Divider } from 'antd';\r\nimport twtlogo from '../assets/twtlogo_tilt.svg';\r\nimport revtwtlogo from '../assets/twtlogo_tilt_rev.svg';\r\nimport { UserOutlined, LockOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport '../styles/login.scss';\r\nimport { getLogin } from '../api/OAuth';\r\nimport fetchApi from '../api/callApi';\r\nimport { panelCtrl, bypassLogin } from '../debug/debug';\r\nimport { org, orgInShort } from '../settings/settings';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nconst type = panelCtrl();\r\nconst loginBypass = bypassLogin();\r\n// 是否为超级管理员\r\n\r\ninterface Props {\r\n}\r\n\r\nclass Login extends Component<any, any> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    error() {\r\n        Modal.error({\r\n            title: <p><img src={twtlogo} height=\"30\" width=\"30\" />At</p>,\r\n            content: '请检查IPA账号及密码是否正确',\r\n            okText: \"Ok\",\r\n        });\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        // console.log('Received values of form: ', values);\r\n        if (loginBypass === true) {\r\n            sessionStorage.setItem(\"isLogin\", \"1\");\r\n            sessionStorage.setItem(\"username\", \"开发者\");\r\n            this.setState({ loading: false, })\r\n            if (values.username === \"admin\" && values.password === \"twtstudio\") {\r\n                sessionStorage.setItem(\"admin-panel\", \"true\");\r\n                window.location.href = \"/at-pro\";\r\n            } else if (values.username === \"user\" && values.password === \"twtstudio\") {\r\n                sessionStorage.setItem(\"admin-panel\", \"false\");\r\n                sessionStorage.setItem(\"auth\", \"1\")\r\n                window.location.href = \"/at-pro\";\r\n            } else if (values.username === \"leader\" && values.password === \"twtstudio\") {\r\n                sessionStorage.setItem(\"admin-panel\", \"false\");\r\n                sessionStorage.setItem(\"auth\", \"2\")\r\n                window.location.href = \"/at-pro\";\r\n            } else {\r\n                this.error()\r\n            }\r\n        }\r\n        this.setState({ loading: true, });\r\n        const { apiPath, request } = getLogin(values.username, values.password);\r\n        fetchApi(apiPath, request)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                let loginData = data.data;\r\n                if (data.message === \"登录成功\") {\r\n                    sessionStorage.setItem(\"isLogin\", \"1\");\r\n                    sessionStorage.setItem(\"username\", loginData.name);\r\n                    localStorage.setItem(\"token\", loginData.token);\r\n                    sessionStorage.setItem(\"auth\", loginData.auth)\r\n                    this.setState({ loading: false, })\r\n                    if (type) {\r\n                        sessionStorage.setItem(\"admin-panel\", \"true\");\r\n                        window.location.href = \"/at-pro\";\r\n                    } else {\r\n                        sessionStorage.setItem(\"admin-panel\", \"false\");\r\n                        window.location.href = \"/at-pro\";\r\n                    }\r\n                } else {\r\n                    this.error()\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Layout className=\"App\">\r\n                <Content className=\"login-page\">\r\n                    <Card className=\"login-card\">\r\n                        <h2>登录</h2>\r\n                        {loginBypass ? <div style={{ textAlign: \"center\" }}>开发者模式已启用</div> : null}\r\n                        <Divider dashed className=\"divider-dashed\" />\r\n                        <Form\r\n                            name=\"normal_login\"\r\n                            className=\"login-form\"\r\n                            initialValues={{ remember: true }}\r\n                            onFinish={this.onFinish}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"username\"\r\n                                rules={[{ required: true, message: 'IPA账号不能为空!' }]}\r\n                            >\r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"IPA账号\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: '密码不能为空!' }]}\r\n                            >\r\n                                <Input\r\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"密码\"\r\n                                />\r\n                            </Form.Item>\r\n                            <div className=\"login-buttons\">\r\n                                <div>\r\n                                    <p>使用{orgInShort()}账号登录</p>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">登录</Button>\r\n                                </div>\r\n                                <Button type=\"primary\" className=\"login-with-twt-button\"><img src={revtwtlogo} height=\"43\" width=\"43\" /></Button>\r\n                            </div>\r\n                        </Form>\r\n                    </Card>\r\n\r\n                </Content>\r\n                <Footer>\r\n                    <img src={twtlogo} height=\"50\" width=\"50\" />\r\n                </Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react';\r\nimport config from '../../site-config.json';\r\nimport { Layout, Menu, Drawer, Button } from 'antd';\r\nimport {\r\n    HomeOutlined, UserOutlined, LogoutOutlined, MessageOutlined, TeamOutlined, ProjectOutlined\r\n} from '@ant-design/icons';\r\nimport twtlogo from '../../assets/twtlogo_tilt.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Sider } = Layout;\r\n\r\ninterface Props {\r\n    collapsed: boolean,\r\n}\r\n\r\nclass SiderCustom extends Component<any, any> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    menuRender() {\r\n        let pathname: string = window.location.pathname;\r\n        switch (pathname.split(\"/\")[2]) {\r\n            case \"\":\r\n                return ['1']\r\n                break;\r\n            case \"Message\":\r\n                return ['2']\r\n                break;\r\n            case \"Work\":\r\n                return ['3']\r\n                break;\r\n            case \"Members\":\r\n                return ['4']\r\n                break;\r\n            case \"Profile\":\r\n                return ['5']\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Sider theme=\"light\" trigger={null} collapsible collapsed={this.props.collapsed}>\r\n                <div className=\"logo\" >\r\n                    <img src={twtlogo} height=\"40\" width=\"40\" />\r\n                    {this.props.collapsed ? null : config.title}\r\n                </div>\r\n                <Menu theme=\"light\" mode=\"inline\" selectedKeys={this.menuRender()}>\r\n                    <Menu.Item key=\"1\" title=\"首页\">\r\n                        <Link to=\"/\">\r\n                            <HomeOutlined />\r\n                            {this.props.collapsed ? null : \"首页\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" title=\"消息\">\r\n                        <Link to=\"/Message\">\r\n                            <MessageOutlined />\r\n                            {this.props.collapsed ? null : \"消息\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\" title=\"工作\">\r\n                        <Link to=\"/Work\">\r\n                            <ProjectOutlined />\r\n                            {this.props.collapsed ? null : \"工作\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"4\" title=\"成员\">\r\n                        <Link to=\"/Members\">\r\n                            <TeamOutlined />\r\n                            {this.props.collapsed ? null : \"成员\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"5\" title=\"个人\">\r\n                        <Link to=\"/Profile\" >\r\n                            <UserOutlined />\r\n                            {this.props.collapsed ? null : \"个人\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n\r\n            </Sider >\r\n        )\r\n    }\r\n}\r\n\r\nexport default SiderCustom","export default {\r\n    \"data\": [{\r\n        \"title\": \"天外天at Pro系统运营\",\r\n        \"status\": 1,\r\n        \"team\": \"舍我其谁\",\r\n        \"host\": \"彭某某\",\r\n        \"lastEditor\": \"王某\",\r\n        \"lastEditTime\": \"2020-05-02 17:32\",\r\n        \"startTime\": \"2020-04-08 11:05\",\r\n        \"endTime\": \"2020-06-20 11:05\"\r\n    }, {\r\n        \"title\": \"工作室二十周年庆典筹备\",\r\n        \"status\": 4,\r\n        \"team\": \"\",\r\n        \"host\": \"王某某\",\r\n        \"lastEditor\": \"\",\r\n        \"lastEditTime\": \"\",\r\n        \"startTime\": \"2020-05-05 11:05\",\r\n        \"endTime\": \"2020-08-10 11:05\"\r\n    }, {\r\n        \"title\": \"关于微北洋的百种修复方法\",\r\n        \"status\": 3,\r\n        \"team\": \"一马当先\",\r\n        \"host\": \"李某某\",\r\n        \"lastEditor\": \"李某某\",\r\n        \"lastEditTime\": \"2020-05-01 00:14\",\r\n        \"startTime\": \"2020-04-01 11:05\",\r\n        \"endTime\": \"2020-09-20 11:05\"\r\n    }, {\r\n        \"title\": \"关于新型算法结构的探究\",\r\n        \"status\": 2,\r\n        \"team\": \"迷惑行为\",\r\n        \"host\": \"温某某\",\r\n        \"lastEditor\": \"温某某\",\r\n        \"lastEditTime\": \"2019-02-03 00:00\",\r\n        \"startTime\": \"2020-04-20 11:05\",\r\n        \"endTime\": \"2020-11-20 11:05\"\r\n    }]\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, Card, Badge, Progress, Statistic, Button } from 'antd';\r\nimport {\r\n    MailOutlined,\r\n    PartitionOutlined,\r\n    NotificationOutlined,\r\n    UserSwitchOutlined,\r\n    CalendarOutlined,\r\n    UserOutlined,\r\n    AppstoreAddOutlined\r\n} from '@ant-design/icons';\r\nimport '../../styles/dashboard.scss';\r\nimport { org } from '../../settings/settings'\r\nimport Heatmap from './Heatmap';\r\n// import { userName } from '../../actions'\r\nimport mission from '../../test/discuss';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst message = false;\r\nconst { Countdown } = Statistic;\r\n\r\n\r\ninterface Props {\r\n    collapsed: boolean,\r\n}\r\n\r\nclass Dashboard extends Component<any, any> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            joinTime: 33,\r\n            DDLMouseOver: false\r\n        }\r\n    }\r\n\r\n    greeting() {\r\n        var hour = new Date().getHours()\r\n        var greeting = ''\r\n        if (hour < 6) {\r\n            greeting = '夜深了'\r\n        } else if (hour < 10) {\r\n            greeting = '早上好'\r\n        } else if (hour < 12) {\r\n            greeting = '上午好'\r\n        } else if (hour < 14) {\r\n            greeting = '中午好'\r\n        } else if (hour < 18) {\r\n            greeting = '下午好'\r\n        } else if (hour < 23) {\r\n            greeting = '晚上好'\r\n        } else {\r\n            greeting = '夜深了'\r\n        }\r\n        return greeting\r\n    }\r\n\r\n    statusPoint = (status: number, withText: boolean) => {\r\n        switch (status) {\r\n            case 1:\r\n                return <Badge status=\"success\" text={withText ? \"进行中\" : null} />\r\n            case 2:\r\n                return <Badge status=\"warning\" text={withText ? \"状态不明\" : null} />\r\n            case 3:\r\n                return <Badge status=\"error\" text={withText ? \"已完结\" : null} />\r\n            case 4:\r\n                return <Badge status=\"default\" text={withText ? \"未开始\" : null} />\r\n        }\r\n    }\r\n\r\n    handleDDLClick = (e: any) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            DDLMouseOver: !this.state.DDLMouseOver\r\n        })\r\n    }\r\n\r\n    calcProgress = (startTime: string, endTime: string) => {\r\n        let start = new Date(startTime);\r\n        let end = new Date(endTime);\r\n        let now = new Date();\r\n        if (now.getTime() - end.getTime() < 0) {\r\n            return Math.ceil((now.getTime() - start.getTime()) / (end.getTime() - start.getTime()) * 100)\r\n        } else {\r\n            return 100\r\n        }\r\n    }\r\n\r\n    renderMissionList = () => {\r\n        let list: JSX.Element[] = [];\r\n        let data = mission.data;\r\n        data.map((item) => {\r\n            let deadline = new Date(item.endTime);\r\n            list.push(\r\n                <div className=\"dashboard-mission-card card-shadow\" key={0}>\r\n                    <p className=\"dashboard-mission-title\">\r\n                        <span>{item.title}</span>\r\n                        <span className=\"dashboard-mission-status\">{this.statusPoint(item.status, true)}</span>\r\n                    </p>\r\n                    <div className=\"dashboard-mission-right\">\r\n                        <div className=\"dashboard-mission-btns\">\r\n                            <Link to={`/Work/WorkSpace?id=${0}`}><CalendarOutlined /></Link>\r\n                        </div>\r\n                        <div className=\"dashboard-mission-progress\" onClick={this.handleDDLClick.bind(this)}>\r\n                            <p>时间进程</p>\r\n                            {this.state.DDLMouseOver ?\r\n                                <Countdown value={deadline.getTime()} format=\"D 天 H 时 m 分 s 秒\" />\r\n                                :\r\n                                <Progress status=\"active\" percent={this.calcProgress(item.startTime, item.endTime)} showInfo={false} />}\r\n                        </div>\r\n                    </div >\r\n                </div >\r\n            )\r\n        })\r\n        return list\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const panelCtrl = sessionStorage.getItem(\"admin-panel\");\r\n        return (\r\n            <div>\r\n                {panelCtrl === \"true\" ?\r\n                    <div className=\"admin-home\">\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={6}>\r\n                                <Link to=\"/Admin/FunctionManage\">\r\n                                    <div className=\"admin-home-card card-shadow\">\r\n                                        <AppstoreAddOutlined style={{ fontSize: \"5rem\" }} />\r\n                                        <span>功能管理</span>\r\n                                    </div>\r\n                                </Link>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Link to=\"/Admin/UserManage\">\r\n                                    <div className=\"admin-home-card card-shadow\">\r\n                                        <UserSwitchOutlined style={{ fontSize: \"5rem\" }} />\r\n                                        <span>成员管理</span>\r\n                                    </div>\r\n                                </Link>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Link to=\"/Admin/AuthorityManage\">\r\n                                    <div className=\"admin-home-card card-shadow\">\r\n                                        <PartitionOutlined style={{ fontSize: \"5rem\" }} />\r\n                                        <span>权限管理</span>\r\n                                    </div>\r\n                                </Link>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Link to=\"/Admin/SystemNotice\">\r\n                                    <div className=\"admin-home-card card-shadow\">\r\n                                        <NotificationOutlined style={{ fontSize: \"5rem\" }} />\r\n                                        <span>系统公告</span>\r\n                                    </div>\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </div> :\r\n                    <div>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={12}>\r\n                                <div className=\"dashboard-title\">\r\n                                    {this.greeting() + \"，\" + sessionStorage.getItem(\"username\")}\r\n                                    <a href=\"/\" className=\"dashboard-title-message\">\r\n                                        {message ? <MailOutlined style={{ fontSize: '1.25rem', color: '#00A1E9' }} /> : <MailOutlined style={{ fontSize: '1.25rem', color: '#DDDDDD' }} />}\r\n                                    </a>\r\n                                </div>\r\n                                <Card className=\"card-shadow\">\r\n                                    <p>今天是你加入{org()}的第<span className=\"join-time\">{this.state.joinTime}</span>天</p>\r\n                                    <p><span className=\"dashboard-bold\">账号：</span>testAccount</p>\r\n                                    <p><span className=\"dashboard-bold\">组别：</span>北洋园-随便什么组（成员）</p>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <div className=\"dashboard-title\">周报</div>\r\n                                <Card className=\"card-shadow\">\r\n                                    <p className=\"dashboard-bold\">第{202015}期周报：<span className=\"dashboard-commit-status-not\">未提交</span></p>\r\n                                    <p className=\"dashboard-explain\">起止时间：2020/04/07 ~ 2020/04/13</p>\r\n                                    <p className=\"dashboard-explain\">周报截止日期为周一，在时间范围内可以进行编辑。超过编辑时间的周报不能进行编辑。<a href=\"/at-pro/Work/EditReport\" className=\"dashboard-to-report\">去编辑周报 >></a></p>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24}>\r\n                                <div className=\"dashboard-title\">近期任务</div>\r\n                                <p className=\"dashboard-badges\">\r\n                                    {this.statusPoint(1, true)}\r\n                                    {this.statusPoint(2, true)}\r\n                                    {this.statusPoint(3, true)}\r\n                                    {this.statusPoint(4, true)}\r\n                                </p>\r\n                                {this.renderMissionList()}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard","export default {\r\n    \"id\": 1,\r\n    \"username\": \"Dragon Proud Sky\",\r\n    \"password\": \"whosyourdaddy\",\r\n    \"name\": \"龙傲天\",\r\n    \"studentid\": \"3020202387\",\r\n    \"phone\": \"15535956103\",\r\n    \"email\": \"admin@twt.edu.cn\",\r\n    \"team\": \"不知道什么组\",\r\n    \"auth\": 1,\r\n    \"created_at\": \"2020-04-08 20:41:00\",\r\n    \"updated_at\": \"2020-04-08 21:15:55\"\r\n}","import { Form, Input, Button, message, Popconfirm } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport fetchApi from '../../api/callApi';\r\nimport { resetPassword } from '../../api/OAuth';\r\n\r\ninterface formType {\r\n    current: string\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 4, span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: \"此处不能为空\",\r\n};\r\n\r\nclass ResetPwd extends Component<any, any> {\r\n    formRef = React.createRef();\r\n\r\n    onFinish = (values: any) => {\r\n        // console.log(values.newpw1);\r\n        // console.log(values.newpw2);\r\n        if (values.newpw1 === values.newpw2) {\r\n            // 在这里发出修改请求\r\n            message.warning(\"正在保存…\")\r\n            const { apiPath, request } = resetPassword(values.newpw1, values.newpw2);\r\n            fetchApi(apiPath, request)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        } else {\r\n            message.error(\"两次密码输入不一致\")\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"reset-pwd\">\r\n                <Form {...layout} className=\"reset-pwd-form card-shadow\" name=\"control-ref\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n                    <Form.Item name=\"newpw1\" label=\"新密码\" rules={[{ required: true }]}>\r\n                        <Input allowClear />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"newpw2\" label=\"确认密码\" rules={[{ required: true }]}>\r\n                        <Input allowClear />\r\n                    </Form.Item>\r\n                    <p className=\"reset-pwd-tip\">为确保信息安全，请养成良好的密码使用习惯，不得使用弱密码，尽量避免同一密码多处使用。 请设置最少 8 位的密码，建议包含大、小写字母、数字符号中的至少三种</p>\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">修改</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPwd","import React, { Component, ReactNode } from 'react';\r\nimport { Button, notification } from 'antd';\r\nimport {\r\n    CheckCircleOutlined,\r\n    QuestionCircleOutlined,\r\n    CloseCircleOutlined,\r\n    ExclamationCircleOutlined,\r\n    InfoCircleOutlined,\r\n    DeleteOutlined,\r\n    NotificationOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface propType {\r\n    type?: string,\r\n    title: string | ReactNode,\r\n    during?: number,\r\n    content: string | ReactNode,\r\n    position?: string,\r\n    btn: string | ReactNode\r\n}\r\n\r\nclass Noti extends Component<any, any>{\r\n    constructor(props: propType) {\r\n        super(props)\r\n    }\r\n\r\n    switchPosition = (pos: string) => {\r\n        if (pos) {\r\n            switch (pos) {\r\n                case \"TL\":\r\n                    return \"topLeft\";\r\n                    break;\r\n                case \"TR\":\r\n                    return \"topRight\";\r\n                    break;\r\n                case \"BL\":\r\n                    return \"bottomLeft\";\r\n                    break;\r\n                case \"BR\":\r\n                    return \"bottomRight\";\r\n                    break;\r\n            }\r\n        } else {\r\n            return \"topRight\"\r\n        }\r\n    }\r\n\r\n    switchIcon = (type: string) => {\r\n        if (type) {\r\n            switch (type) {\r\n                case \"success\":\r\n                    return <CheckCircleOutlined style={{ color: \"#52c41a\" }} />\r\n                    break;\r\n                case \"info\":\r\n                    return <InfoCircleOutlined style={{ color: \"#1890ff\" }} />\r\n                    break;\r\n                case \"warning\":\r\n                    return <ExclamationCircleOutlined style={{ color: \"#faad14\" }} />\r\n                    break;\r\n                case \"error\":\r\n                    return <CloseCircleOutlined style={{ color: \"#ff4d4f\" }} />\r\n                    break;\r\n                case \"help\":\r\n                    return <QuestionCircleOutlined style={{ color: \"#FF7F00\" }} />\r\n                    break;\r\n                case \"del\":\r\n                    return <DeleteOutlined />\r\n                    break;\r\n                case \"noti\":\r\n                    return <NotificationOutlined />\r\n                    break;\r\n            }\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    openNotification = () => {\r\n        notification.open({\r\n            message: this.props.title,\r\n            description: this.props.content,\r\n            duration: this.props.during,\r\n            placement: this.switchPosition(this.props.position),\r\n            icon: this.switchIcon(this.props.type),\r\n            onClick: () => {\r\n                console.log('Notification Clicked!');\r\n            },\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Button className=\"noti-btn\" onClick={this.openNotification}>\r\n                {this.props.btn}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Noti","import React, { Component } from 'react';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport testUserInfo from '../../test/userinfo';\r\nimport ResetPwd from './ResetPassword';\r\nimport userIcon from '../../assets/usericon.png';\r\nimport fetchApi from '../../api/callApi';\r\nimport { userinfo } from '../../api/Profile';\r\nimport '../../styles/profile.scss';\r\nimport Noti from '../public/Noti';\r\nimport { Button, Input, Form } from 'antd';\r\n\r\ninterface profileType {\r\n    id: number,\r\n    username: string,\r\n    password: string,\r\n    name: string,\r\n    studentid: string,\r\n    phone: string,\r\n    email: string,\r\n    team: string,\r\n    auth: number\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 8 },\r\n};\r\n\r\nclass Profile extends Component<any, any> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            imgMouseOver: false,\r\n            textMouseOver: false\r\n        }\r\n    }\r\n\r\n    getAuthName(authType: number) {\r\n        if (authType === 0 || authType === 1 || authType === 2) {\r\n            switch (authType) {\r\n                case 0:\r\n                    return \"组员\";\r\n                    break;\r\n                case 1:\r\n                    return \"组长\";\r\n                    break;\r\n                case 2:\r\n                    return \"管理员\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDate(time: string) {\r\n        if (time) {\r\n            return time.substr(0, 10);\r\n        }\r\n    }\r\n\r\n    handleImgMouseOver = (e: any) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            imgMouseOver: true\r\n        })\r\n    }\r\n\r\n    handleImgMouseLeave = (e: any) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            imgMouseOver: false\r\n        })\r\n    }\r\n\r\n    handleTextMouseOver = (e: any) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            textMouseOver: true\r\n        })\r\n    }\r\n\r\n    handleTextMouseLeave = (e: any) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            textMouseOver: false\r\n        })\r\n    }\r\n\r\n    faviconContainer = (info: profileType) => {\r\n        return (\r\n            <div className=\"profile-card-left\" onMouseOver={this.handleImgMouseOver.bind(this)} onMouseLeave={this.handleImgMouseLeave.bind(this)}>\r\n                <div className=\"profile-card-img\">\r\n                    <img className=\"user-icon-upper\" src={userIcon} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    textList = (info: profileType) => {\r\n        return (\r\n            this.state.imgMouseOver ?\r\n                <div className=\"profile-card-right\">\r\n                    <span className=\"profile-card-info\">账号：<span>{info.username}</span></span>\r\n                    <span className=\"profile-card-info\">姓名：<span>{info.name + \"  \" + info.studentid}</span></span>\r\n                    <span className=\"profile-card-info\">组别：<span>{info.team + \"  \" + this.getAuthName(info.auth)}</span></span>\r\n                    <span className=\"profile-card-info\">邮箱：<span>{info.email}</span></span>\r\n                </div> :\r\n                <div className=\"profile-card-right-text\" onMouseOver={this.handleTextMouseOver.bind(this)} onMouseLeave={this.handleTextMouseLeave.bind(this)}>\r\n                    {this.state.textMouseOver ?\r\n                        <div>\r\n                            <Form {...layout}>\r\n                                <Form.Item label=\"选择头像\">\r\n                                    <Button>+</Button>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"更改签名\">\r\n                                    <Input></Input>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                        : \"有些人生命里出现一次就够了，遇到是我的幸运。\"}\r\n                </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { apiPath, request } = userinfo();\r\n        fetchApi(apiPath, request)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let userInfo = testUserInfo;\r\n        return (\r\n            <div>\r\n                <div className=\"ant-descriptions-title\">个人信息</div>\r\n                <div className=\"profile-card card-shadow\">\r\n                    {this.faviconContainer(testUserInfo)}\r\n                    {this.textList(testUserInfo)}\r\n                    <div className=\"profile-help\">\r\n                        <Noti\r\n                            title=\"帮助\"\r\n                            type=\"help\"\r\n                            content=\"如果信息有误或者有需改变的信息，请及时联系组长或者站内管理员\"\r\n                            btn={<QuestionCircleOutlined />}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"ant-descriptions-title\">修改密码</div>\r\n                <ResetPwd />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","export const userinfo = () => {\r\n    // 用户基本信息\r\n    return {\r\n        apiPath: `user/myinfo`,\r\n        request: {\r\n            method: \"GET\",\r\n            mode: 'no-cors',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": `${localStorage.token}`,\r\n            },\r\n            credentials: 'include'\r\n        }\r\n    }\r\n}","export default {\r\n    \"data\": [{\r\n        \"from\": \"管理员\",\r\n        \"topic\": \"测试\",\r\n        \"updated_at\": \"2020-05-16 17:24:24\",\r\n        \"id\": 1,\r\n        \"message\": \"开会啦\"\r\n    }, {\r\n        \"from\": \"管理员\",\r\n        \"topic\": \"测试\",\r\n        \"updated_at\": \"2020-05-16 17:24:24\",\r\n        \"id\": 2,\r\n        \"message\": \"会议结束啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦\"\r\n    }]\r\n}","import React, { Component } from \"react\";\r\nimport { Radio, Button, Row, Col, Checkbox, Form, message } from \"antd\";\r\nimport msg from '../../test/message';\r\nimport messages from \"../../test/message\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface item {\r\n    from: string,\r\n    topic: string,\r\n    updated_at: string,\r\n    id: number,\r\n    message: string\r\n}\r\n\r\nexport interface Props {\r\n    title: string,\r\n}\r\n\r\nexport interface State {\r\n    onselect: boolean,\r\n    filter: any,\r\n    selected: []\r\n}\r\n\r\nclass MessageBox extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            onselect: false,\r\n            filter: \"\",\r\n            selected: []\r\n        };\r\n    }\r\n\r\n    onFilterChange(e: any) {\r\n        console.log(`radio checked:${e.target.value}`);\r\n    }\r\n\r\n    onSelectChange(checkedValues: any) {\r\n        console.log('checked = ', checkedValues);\r\n\r\n    }\r\n\r\n    handleClickSelect = (e: any) => {\r\n        e.preventDefault();\r\n        let status = this.state.onselect\r\n        this.setState({\r\n            onselect: !status\r\n        })\r\n        console.log(this.state.onselect)\r\n    }\r\n\r\n    renderMesItem = (status: string, data: item) => {\r\n        return (\r\n            <Row className=\"mesbox-item\">\r\n                <Col span={1}>{status === \"read\" ? null : <div className=\"pot\"></div>}</Col>\r\n                <Col span={this.state.onselect ? 16 : 17}>\r\n                    <Link to={`/Message/Detail?id=${data.id}`}>\r\n                        <span className=\"mesbox-item-from\">{data.from}:</span>{data.message.substring(0, 10)}\r\n                    </Link>\r\n                </Col>\r\n                <Col span={4}>{data.updated_at}</Col>\r\n                <Col span={2}>{\"工作室\"}</Col>\r\n                {\r\n                    this.state.onselect ?\r\n                        <Col span={1}>\r\n                            <Checkbox value={data.id}></Checkbox>\r\n                        </Col>\r\n                        : null\r\n                }\r\n            </Row >\r\n        )\r\n    }\r\n\r\n    renderMesList = () => {\r\n        let data = msg.data;\r\n        let list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(\r\n                this.renderMesItem(\"notread\", item)\r\n            )\r\n        })\r\n        return list\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        console.log('Received values of form: ', values);\r\n        message.success('删除成功');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mesbox card-shadow\">\r\n                <Form\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <div className=\"mesbox-header\">\r\n                        <span className=\"mesbox-header-title\">{this.props.title}</span>\r\n                        <span className=\"mesbox-header-filter\">\r\n                            <Radio.Group className=\"mesbox-header-filterl\" onChange={this.onFilterChange} defaultValue=\"all\">\r\n                                <Radio.Button value=\"all\">全部</Radio.Button>\r\n                                <Radio.Button value=\"notread\">未读</Radio.Button>\r\n                                <Radio.Button value=\"read\">已读</Radio.Button>\r\n                            </Radio.Group>\r\n                            <Button className=\"mesbox-header-filterr\" onClick={this.handleClickSelect.bind(this)}>{this.state.onselect ? \"退出多选\" : \"多选\"}</Button>\r\n                            {this.state.onselect ? <Button htmlType=\"submit\" danger>删除</Button> : null}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"mesbox-list\">\r\n                        <Form.Item\r\n                            name=\"selected\"\r\n                        >\r\n                            <Checkbox.Group style={{ width: '100%' }} onChange={this.onSelectChange}>\r\n                                {this.renderMesList()}\r\n                            </Checkbox.Group>\r\n                        </Form.Item>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageBox;","import React, { Component } from 'react';\r\nimport { Descriptions, Card, Collapse, Table } from 'antd';\r\nimport MessageBox from './MessageBox';\r\nimport '../../styles/message.scss';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass Message extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"mes-title\">消息中心</p>\r\n                <div className=\"mes-card\">\r\n                    <MessageBox title=\"成员信息\" />\r\n                </div>\r\n                <div className=\"mes-card\">\r\n                    <MessageBox title=\"系统消息\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\";\r\nimport {\r\n    Chart,\r\n    Geom,\r\n    Axis,\r\n    Tooltip,\r\n    Coord,\r\n    Label,\r\n    Legend,\r\n    Guide,\r\n    G2\r\n} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\n\r\ninterface Props {\r\n    data: { item: string; count: number; }[]\r\n    style?: React.CSSProperties | undefined,\r\n    title?: string,\r\n    calc?: string,\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nconst { Global } = G2; // 获取 Global 全局对象\r\nGlobal.animate = true; // 关闭默认动画\r\nGlobal.colors = ['red', 'blue', 'yellow']; // 更改默认的颜色\r\n\r\nconst { DataView } = DataSet;\r\nconst { Html } = Guide;\r\n\r\nconst cols = {\r\n    percent: {\r\n        formatter: (val: any) => {\r\n            val = val * 100 + \"%\";\r\n            return val;\r\n        }\r\n    }\r\n};\r\n\r\nclass Donut extends React.Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const dv = new DataView();\r\n        let data = this.props.data\r\n        dv.source(data).transform({\r\n            type: \"percent\",\r\n            field: \"count\",\r\n            dimension: \"item\",\r\n            as: \"percent\"\r\n        });\r\n        return (\r\n            <div style={this.props.style}>\r\n                <Chart\r\n                    height={250}\r\n                    data={dv}\r\n                    scale={cols}\r\n                    padding={[10, 10, 10, 10]}\r\n                    forceFit\r\n                >\r\n                    <Coord type={\"theta\"} radius={0.75} innerRadius={0.6} />\r\n                    <Axis name=\"percent\" />\r\n                    <Legend\r\n                        position=\"bottom\"\r\n                    />\r\n                    <Tooltip\r\n                        showTitle={false}\r\n                        itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\r\n                    />\r\n                    <Guide>\r\n                        <Html\r\n                            position={[\"50%\", \"50%\"]}\r\n                            html={`<div style=&quot;color:#8c8c8c;font-size:1.16em;text-align: center;width: 10em;&quot;><span style=&quot;color:#262626;font-size:2.5em&quot;>${this.props.calc}</span></div>`}\r\n                            alignX=\"middle\"\r\n                            alignY=\"middle\"\r\n                        />\r\n                    </Guide>\r\n                    <Geom\r\n                        type=\"intervalStack\"\r\n                        position=\"percent\"\r\n                        color=\"item\"\r\n                        tooltip={[\r\n                            \"item*percent\",\r\n                            (item, percent) => {\r\n                                percent = percent * 100 + \"%\";\r\n                                return {\r\n                                    name: item,\r\n                                    value: percent\r\n                                };\r\n                            }\r\n                        ]}\r\n                        style={{\r\n                            lineWidth: 1,\r\n                            stroke: \"#fff\"\r\n                        }}\r\n                    >\r\n                        <Label\r\n                            content=\"percent\"\r\n                            formatter={(val, item) => {\r\n                                return item.point.item;\r\n                            }}\r\n                        />\r\n                    </Geom>\r\n                    <span className='donut-title'>{this.props.title}</span>\r\n                </Chart>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Donut","export default {\r\n    \"data\": [{\r\n        \"title\": \"天外天2020破冰大会\",\r\n        \"time\": \"2020-07-06 下午2点\",\r\n        \"host\": \"友人A\",\r\n    }, {\r\n        \"title\": \"天外天2021破冰大会\",\r\n        \"time\": \"2021-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2022破冰大会\",\r\n        \"time\": \"2022-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2023破冰大会\",\r\n        \"time\": \"2023-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2024破冰大会\",\r\n        \"time\": \"2024-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }]\r\n}","export default {\r\n    \"data\": [{\r\n        \"title\": \"天外天2020破冰大会\",\r\n        \"time\": \"2020-07-06 下午2点\",\r\n        \"host\": \"友人A\",\r\n    }, {\r\n        \"title\": \"天外天2021破冰大会\",\r\n        \"time\": \"2021-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2022破冰大会\",\r\n        \"time\": \"2022-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2023破冰大会\",\r\n        \"time\": \"2023-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2024破冰大会\",\r\n        \"time\": \"2024-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }]\r\n}","import React, { Component } from 'react';\r\nimport { EditOutlined, CommentOutlined } from '@ant-design/icons';\r\nimport { Row, Col, Tabs, Table } from 'antd';\r\nimport Donut from '../public/ActivityDonut';\r\nimport '../../styles/work.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport activityData from '../../test/activity';\r\nimport activityFinishedData from '../../test/activityFinished';\r\n\r\nconst actData = activityData.data;\r\nconst finData = activityFinishedData.data;\r\nconst auth = sessionStorage.getItem(\"auth\")\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nconst studioAttend = [\r\n    {\r\n        item: \"出勤\",\r\n        count: 35\r\n    },\r\n    {\r\n        item: \"未出勤\",\r\n        count: 5\r\n    }\r\n];\r\n\r\nconst teamAttend = [\r\n    {\r\n        item: \"出勤\",\r\n        count: 19\r\n    },\r\n    {\r\n        item: \"未出勤\",\r\n        count: 3\r\n    }\r\n];\r\n\r\nconst donutData = [\r\n    {\r\n        item: \"工作室大会\",\r\n        count: 40\r\n    },\r\n    {\r\n        item: \"组会\",\r\n        count: 21\r\n    }\r\n];\r\n\r\nclass Message extends Component<any, any> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    calcAll = (data: any) => {\r\n        let result = 0;\r\n        data.map((item: any) => {\r\n            result += item.count\r\n        })\r\n        return result\r\n    }\r\n\r\n    renderAct = () => {\r\n        // 未完成的活动单项\r\n        const data = actData;\r\n        const list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(<Row className=\"work-tab-item\">\r\n                <Col span={10}><Link to={`/Work/Meeting?id=${0}`}>{item.title}</Link></Col>\r\n                <Col span={10}>{item.time}</Col>\r\n                <Col span={4}>{item.host}</Col>\r\n            </Row>)\r\n        })\r\n        return list\r\n    }\r\n\r\n    renderFin = () => {\r\n        // 已完成的活动单项\r\n        const data = finData;\r\n        const list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(<Row className=\"work-tab-item\">\r\n                <Col span={10}><Link to={`/Work/HistoryMeeting?id=${0}`}>{item.title}</Link></Col>\r\n                <Col span={10}>{item.time}</Col>\r\n                <Col span={4}>{item.host}</Col>\r\n            </Row>)\r\n        })\r\n        return list\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">工作区</div>\r\n                <Row className=\"work-space\" gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12} >\r\n                        <Link to=\"/Work/Report\">\r\n                            <div className=\"work-space-card card-shadow\">\r\n                                <EditOutlined style={{ fontSize: \"5rem\", color: \"#CFCFCF\" }} />\r\n                                <span>周报</span>\r\n                            </div>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col span={12} >\r\n                        <Link to=\"/Work/Discuss\">\r\n                            <div className=\"work-space-card card-shadow\">\r\n                                <CommentOutlined style={{ fontSize: \"5rem\", color: \"#CFCFCF\" }} />\r\n                                <span>讨论区</span>\r\n                            </div>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"work-title\">会议记录</div>\r\n                <Tabs defaultActiveKey=\"1\" className=\"work-tabs\">\r\n                    <TabPane tab=\"未完成\" key=\"1\" className=\"work-tab\">\r\n                        <Row className=\"work-tab-titles\">\r\n                            <Col className=\"work-tab-title\" span={10}>会议名称</Col>\r\n                            <Col className=\"work-tab-title\" span={10}>会议时间</Col>\r\n                            <Col className=\"work-tab-title\" span={4}>发起人</Col>\r\n                        </Row>\r\n                        <div className=\"work-tab-list\">\r\n                            {this.renderAct()}\r\n                        </div>\r\n                        <p className=\"no-more\">没有更多了鸭 _(:з」∠)_</p>\r\n                    </TabPane>\r\n                    <TabPane tab=\"已完成\" key=\"2\" className=\"work-tab\">\r\n                        <Row className=\"work-tab-titles\">\r\n                            <Col className=\"work-tab-title\" span={10}>会议名称</Col>\r\n                            <Col className=\"work-tab-title\" span={10}>会议时间</Col>\r\n                            <Col className=\"work-tab-title\" span={4}>发起人</Col>\r\n                        </Row>\r\n                        <div className=\"work-tab-list\">\r\n                            {this.renderFin()}\r\n                        </div>\r\n                        <p className=\"no-more\">没有更多了鸭 _(:з」∠)_</p>\r\n                        <p className=\"work-title\">参与程度</p>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <Donut data={donutData}\r\n                                style={{ width: \"33.333%\" }}\r\n                                title=\"出勤次数\"\r\n                                calc={\"总计\" + this.calcAll(donutData) + \"次\"}\r\n                            />\r\n                            <Donut\r\n                                data={teamAttend}\r\n                                style={{ width: \"33.333%\" }}\r\n                                title=\"组会出勤\"\r\n                                calc={\"出勤率\" + (teamAttend[0].count / this.calcAll(teamAttend) * 100).toString().substr(0, 4) + \"%\"}\r\n                            />\r\n                            <Donut\r\n                                data={studioAttend}\r\n                                style={{ width: \"33.333%\" }}\r\n                                title=\"工作室大会出勤次数\"\r\n                                calc={\"出勤率\" + (studioAttend[0].count / this.calcAll(studioAttend) * 100).toString().substr(0, 4) + \"%\"}\r\n                            />\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n                {auth === \"2\" ?\r\n                    <Link to={`/Work/NewMeeting`} className=\"work-newmeeting card-shadow\">\r\n                        发起会议\r\n                    </Link>\r\n                    : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n","export default {\r\n    \"data\": [{\r\n        \"type\": \"组长\",\r\n        \"memId\": 2,\r\n        \"name\": \"路人甲\",\r\n        \"campus\": 1,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 3,\r\n        \"name\": \"路人乙\",\r\n        \"campus\": 0,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 4,\r\n        \"name\": \"路人丙\",\r\n        \"campus\": 1,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 5,\r\n        \"name\": \"路人丁\",\r\n        \"campus\": 0,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 6,\r\n        \"name\": \"路人戊\",\r\n        \"campus\": 1,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 7,\r\n        \"name\": \"路人己\",\r\n        \"campus\": 0,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 8,\r\n        \"name\": \"路人庚\",\r\n        \"campus\": 0,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 9,\r\n        \"name\": \"路人辛\",\r\n        \"campus\": 1,\r\n    }]\r\n}","import { Upload, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Component } from 'react';\r\nimport React from 'react';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nconst props = {\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    className: 'upload-list-inline',\r\n};\r\n\r\nclass PictureWall extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Upload {...props}>\r\n                    <Button><UploadOutlined />上传附件</Button>\r\n                </Upload>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PictureWall;","import React, { Component } from 'react';\r\nimport { Tabs, Tooltip, Modal, Button, Mentions, Input, Form, Select } from 'antd';\r\nimport {\r\n    RocketOutlined,\r\n    MailOutlined,\r\n    CloseOutlined\r\n} from '@ant-design/icons';\r\nimport maskImg from '../../assets/POST-bg.png';\r\nimport member from '../../test/members';\r\nimport '../../styles/message.scss';\r\nimport PictureWall from './PicturesWall';\r\n\r\ninterface Props {\r\n    btncls: string,\r\n    content: JSX.Element | string,\r\n    target?: number[]\r\n}\r\n\r\ninterface State {\r\n    visible: boolean,\r\n    post: boolean,\r\n    prefix: string\r\n}\r\n\r\nconst maskStyle = {\r\n    backgroundColor: \"#f9f9f9\",\r\n    backgroundImage: `url(${maskImg})`,\r\n    backgroundSize: \"90%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\"\r\n}\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass SendMessage extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            post: false,\r\n            visible: false,\r\n            prefix: '@',\r\n        }\r\n    }\r\n\r\n    onChange = (e: any) => {\r\n        console.log(e)\r\n    };\r\n\r\n    onSearch = (_: any, prefix: string) => {\r\n        this.setState({ prefix });\r\n    };\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            post: false,\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({\r\n            post: true,\r\n        })\r\n    };\r\n\r\n    modalHeader = (text: string) => (\r\n        <div>\r\n            <div className=\"send-message-title\">{text}</div>\r\n        </div>\r\n    )\r\n\r\n    renderReceiver = () => {\r\n        let receiveList: JSX.Element[] = [];\r\n        let data = member.data;\r\n        data.map((item) => {\r\n            receiveList.push(\r\n                <Option value={item.memId}>{item.name}</Option>\r\n            )\r\n        })\r\n        return receiveList\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <Tooltip placement=\"bottom\" title={\"私信\"}>\r\n                    <button onClick={this.showModal} className={this.props.btncls}>{this.props.content}</button>\r\n                </Tooltip>\r\n                <Modal\r\n                    className=\"send-message-modal\"\r\n                    maskStyle={maskStyle}\r\n                    title={this.modalHeader(\"发送私信\")}\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    footer={[\r\n                        null,\r\n                        <Button className=\"send-message-btn\" key=\"submit\" type=\"primary\" onClick={this.handleOk}>发送</Button>,\r\n                    ]}\r\n                >\r\n                    <Form>\r\n                        <Form.Item>\r\n                            <Select mode=\"multiple\" placeholder=\"选择私信接收者\" allowClear={true}>\r\n                                {this.renderReceiver()}\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <TextArea rows={12} onChange={this.onChange} autoFocus={false} />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <PictureWall></PictureWall>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </span >\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessage","import React from 'react';\r\nimport { Tabs, Tooltip } from 'antd';\r\nimport {\r\n    UserOutlined,\r\n    MailOutlined\r\n} from '@ant-design/icons';\r\nimport '../../styles/members.scss';\r\nimport memsData from '../../test/members';\r\nimport SendMessage from '../public/SendMessage';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface Member {\r\n    type: string,\r\n    memId: number,\r\n    name: string,\r\n    campus: number\r\n}\r\n\r\nclass Members extends React.PureComponent {\r\n    renderMems() {\r\n        let memLeader: JSX.Element[] = [], memMember: JSX.Element[] = [];\r\n        let data = memsData.data;\r\n        if (data && data.length) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let _item: Member = data[i]\r\n                if (_item.type === \"组长\") {\r\n                    memLeader.push(\r\n                        <div className=\"mem-card card-shadow\" key={_item.memId}>\r\n                            <span>{_item.name}</span>\r\n                            <div>\r\n                                <SendMessage btncls=\"mem-mail-icon\" content={<MailOutlined />} target={[_item.memId]} />\r\n                                <Tooltip placement=\"bottom\" title={\"个人信息\"}>\r\n                                    <span className=\"mem-user-icon\">\r\n                                        <Link to={`/Members/Detail?id=${_item.memId}`}>\r\n                                            <UserOutlined />\r\n                                        </Link>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                } else if (_item.type === \"组员\") {\r\n                    memMember.push(\r\n                        <div className=\"mem-card card-shadow\" key={_item.memId}>\r\n                            <span>{_item.name}</span>\r\n                            <div>\r\n                                <SendMessage btncls=\"mem-mail-icon\" content={<MailOutlined />} />\r\n                                <Tooltip placement=\"bottom\" title={\"个人信息\"}>\r\n                                    <span className=\"mem-user-icon\">\r\n                                        <Link to={`/Members/Detail?id=${_item.memId}`}>\r\n                                            <UserOutlined />\r\n                                        </Link>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"mem-content-by-group\">\r\n                <p className=\"mem-title\">组长</p>\r\n                <div className=\"mem-cards\">\r\n                    {memLeader}\r\n                </div>\r\n                <p className=\"mem-title\">组员</p>\r\n                <div className=\"mem-cards\">\r\n                    {memMember}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"mem-title\">成员概况</span>\r\n                <Tabs defaultActiveKey=\"1\" className=\"mem-container\">\r\n                    <TabPane tab=\"产品组\" key=\"1\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"程序组\" key=\"2\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"前端组\" key=\"3\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"设计组\" key=\"4\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"Android组\" key=\"5\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"iOS组\" key=\"6\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Members\r\n","import React from 'react';\r\nimport icon from '../../assets/usericon.png';\r\nimport userinfo from '../../test/userinfo';\r\nimport { Col } from 'antd';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass MemberDetail extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getAuthName(authType: number) {\r\n        if (authType === 0 || authType === 1 || authType === 2) {\r\n            switch (authType) {\r\n                case 0:\r\n                    return \"组员\";\r\n                    break;\r\n                case 1:\r\n                    return \"组长\";\r\n                    break;\r\n                case 2:\r\n                    return \"管理员\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col offset={6} span={12} className=\"mem-detail card-shadow\">\r\n                <div className=\"mem-detail-icon\">\r\n                    <img width={150} height={150} src={icon} alt=\"\" />\r\n                </div>\r\n                <div className=\"mem-detail-content\">\r\n                    <p className=\"mem-detail-name\">{userinfo.name}</p>\r\n                    <p className=\"mem-detail-id\">{userinfo.studentid}</p>\r\n                    <p className=\"mem-detail-str\">有些人生命里出现一次就够了，遇到是我的幸运。</p>\r\n                    <p className=\"mem-detail-contact\">\r\n                        <span>北洋园校区</span>\r\n                        <span>{userinfo.team}</span>\r\n                        <span>{this.getAuthName(userinfo.auth)}</span>\r\n                    </p>\r\n                    <p className=\"mem-detail-contact\">{userinfo.email}</p>\r\n                </div>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MemberDetail;","import React, { Component } from 'react';\r\nimport MarkdownIt from 'markdown-it';\r\nimport Editor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport hljs from 'highlight.js';\r\nimport 'highlight.js/styles/atom-one-light.css';\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */\r\n    {\r\n        highlight: function (str, lang) {\r\n            if (lang && hljs.getLanguage(lang)) {\r\n                try {\r\n                    return hljs.highlight(lang, str).value\r\n                } catch (__) { }\r\n            }\r\n            return '' // use external default escaping\r\n        }\r\n    }\r\n);\r\n\r\nclass MdEditor extends Component<any, any> {\r\n\r\n    render() {\r\n        return (\r\n            <Editor\r\n                value={this.props.defaltValue}\r\n                renderHTML={(text: string) => mdParser.render(text)}\r\n                onChange={this.props.valueChange}\r\n            />)\r\n    }\r\n}\r\n\r\nexport default MdEditor","import React, { Component } from 'react';\r\nimport MdEditor from '../../MdUnit/MdEditor';\r\nimport {\r\n    QuestionCircleOutlined,\r\n    SaveOutlined,\r\n    RocketOutlined\r\n} from '@ant-design/icons';\r\nimport { Button, Form, Mentions } from 'antd';\r\nconst { Option } = Mentions;\r\n\r\ninterface editorType {\r\n    html: any,\r\n    text: string\r\n}\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nvar arr = [\"## 做了什么\", \"## 遇到的问题\", \"## 下周的计划\", \"## 需要的支持\"];\r\nconst defaltVal = arr.join(\"\\n\");\r\n\r\nconst layout = {\r\n    labelCol: { span: 2 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 16 },\r\n};\r\n\r\nclass WeekReportEdit extends Component<Props, State> {\r\n\r\n    handleEditorChange({ html, text }: editorType) {\r\n        console.log(html, text);\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    renderMemberList = () => {\r\n        let list: JSX.Element[] = [];\r\n        for (let i = 1; i < 8; i++) {\r\n            list.push(\r\n                <Option key={i} value={\"友人\" + i.toString()}>\r\n                    友人{i}\r\n                </Option>\r\n            )\r\n        }\r\n        return list;\r\n    }\r\n\r\n    renderTagList = () => {\r\n        let list: JSX.Element[] = [];\r\n        for (let i = 1; i < 8; i++) {\r\n            list.push(\r\n                <Option key={i} value={\"话题\" + i.toString()}>\r\n                    话题{i}\r\n                </Option>\r\n            )\r\n        }\r\n        return list;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"editreport-title\">编辑周报<a href=\"/Work/MdGuide\" className=\"md-rule\" target=\"_blank\"><QuestionCircleOutlined /> 语法指南</a></span>\r\n                <p className=\"editreport-tips\">支持代码语法高亮</p>\r\n                <div className=\"weekreport-md-container\">\r\n                    <MdEditor valueChange={this.handleEditorChange} defaltValue={defaltVal} />\r\n                </div>\r\n\r\n                <Form {...layout} className=\"mention-form\" onFinish={this.onFinish}>\r\n                    <Form.Item\r\n                        label=\"@\"\r\n                        name=\"member\"\r\n                    >\r\n                        <Mentions\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"( 输入你想 @ 的伙伴 )\"\r\n                            prefix=\"@\"\r\n                        >\r\n                            {this.renderMemberList()}\r\n                        </Mentions>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"#\"\r\n                        name=\"tag\"\r\n                    >\r\n                        <Mentions\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"( 输入 # 相关主题 )\"\r\n                            prefix=\"#\"\r\n                        >\r\n                            {this.renderTagList()}\r\n                        </Mentions>\r\n                    </Form.Item>\r\n                    <div className=\"editreport-btn-group\">\r\n                        <Form.Item>\r\n                            <Button htmlType=\"submit\" className=\"editreport-btn\"><SaveOutlined />保存</Button>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button htmlType=\"submit\" className=\"editreport-btn\"><RocketOutlined />提交</Button>\r\n                        </Form.Item>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeekReportEdit;\r\n","export default [\r\n    {\r\n        key: '1',\r\n        name: '加粗',\r\n        lang: '**bold**',\r\n        expression: '**bold**',\r\n    },\r\n    {\r\n        key: '2',\r\n        name: '斜体',\r\n        lang: '*italics*',\r\n        expression: '*italics*',\r\n    },\r\n    {\r\n        key: '3',\r\n        name: '删除线',\r\n        lang: '~~strikethrough~~',\r\n        expression: '~~strikethrough~~',\r\n    },\r\n    {\r\n        key: '4',\r\n        name: '大标题',\r\n        lang: '# Big header',\r\n        expression: '# Big header',\r\n    },\r\n    {\r\n        key: '5',\r\n        name: '中标题',\r\n        lang: '## Medium header',\r\n        expression: '## Medium header',\r\n    },\r\n    {\r\n        key: '6',\r\n        name: '小标题',\r\n        lang: '### Small header',\r\n        expression: '### Small header',\r\n    },\r\n    {\r\n        key: '7',\r\n        name: '更小标题',\r\n        lang: '#### Tiny header',\r\n        expression: '#### Tiny header',\r\n    },\r\n    {\r\n        key: '8',\r\n        name: '无序号列表',\r\n        lang: '* Generic list item',\r\n        expression: '* Generic list item',\r\n    },\r\n    {\r\n        key: '9',\r\n        name: '有序号列表',\r\n        lang: '1. Numbered list item',\r\n        expression: '1. Numbered list item',\r\n    },\r\n    {\r\n        key: '10',\r\n        name: '链接',\r\n        lang: '[TwT](http://www.twt.edu.cn)',\r\n        expression: '[TwT](http://www.twt.edu.cn)',\r\n    },\r\n    {\r\n        key: '11',\r\n        name: '引用',\r\n        lang: '> This is a quote.',\r\n        expression: '> This is a quote.',\r\n    },\r\n    {\r\n        key: '12',\r\n        name: '图片',\r\n        lang: '![](http://www.example.com/image.jpg)',\r\n        expression: '![](http://www.example.com/image.jpg)',\r\n    }\r\n];","import React from 'react';\r\nimport MarkdownIt from 'markdown-it';\r\nimport { Table } from 'antd';\r\nimport hljs from 'highlight.js';\r\nimport data from './MdExample';\r\nimport 'highlight.js/styles/atom-one-light.css';\r\n\r\nconst columns = [\r\n    {\r\n        title: '含义',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: '语法',\r\n        dataIndex: 'lang',\r\n        key: 'lang',\r\n    },\r\n    {\r\n        title: '效果',\r\n        dataIndex: 'expression',\r\n        key: 'expression',\r\n        render: (str: string) => (\r\n            <span dangerouslySetInnerHTML={{ __html: md(str) }}></span>\r\n        )\r\n    },\r\n];\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */\r\n    {\r\n        highlight: function (str, lang) {\r\n            if (lang && hljs.getLanguage(lang)) {\r\n                try {\r\n                    return hljs.highlight(lang, str).value\r\n                } catch (__) { }\r\n            }\r\n            return '' // use external default escaping\r\n        }\r\n    }\r\n);\r\n\r\nfunction md(str: string): string {\r\n    return mdParser.render(str);\r\n}\r\n\r\nclass MdGuide extends React.PureComponent {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"editreport-title\">Markdown 语法指南</span>\r\n                <Table columns={columns} dataSource={data} pagination={{ hideOnSinglePage: true,defaultPageSize:50 }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MdGuide\r\n","import React, { Component } from 'react';\r\nimport { RightCircleOutlined } from '@ant-design/icons';\r\nimport logo from '../../assets/twtlogo_tilt_white.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    MailOutlined,\r\n    PartitionOutlined,\r\n    NotificationOutlined,\r\n    UserSwitchOutlined,\r\n    CalendarOutlined,\r\n    UserOutlined,\r\n    AppstoreAddOutlined\r\n} from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    open: boolean\r\n}\r\n\r\nclass AdminPanel extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    handleOnOpen = (e: any) => {\r\n        e.preventDefault();\r\n        let status = this.state.open;\r\n        this.setState({\r\n            open: !status\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.state.open ? \"admin-panel-trans\" : \"admin-panel\"}>\r\n                <span className=\"admin-panel-icon\" onClick={this.handleOnOpen.bind(this)}>\r\n                    <img src={logo} alt=\"icon\" height={40} width={40} />\r\n                </span>\r\n                <div id=\"admin-panel-menu\">\r\n                    <a href=\"#\"><span className=\"a\">\r\n                        <Link to=\"/Admin/FunctionManage\">\r\n                            <AppstoreAddOutlined />\r\n                        </Link>\r\n                    </span></a>\r\n                    <a href=\"#\"><span className=\"b\">\r\n                        <Link to=\"/Admin/UserManage\">\r\n                            <UserSwitchOutlined />\r\n                        </Link>\r\n                    </span></a>\r\n                    <a href=\"#\"><span className=\"c\">\r\n                        <Link to=\"/Admin/AuthorityManage\">\r\n                            <PartitionOutlined />\r\n                        </Link>\r\n                    </span></a>\r\n                    <a href=\"#\"><span className=\"d\">\r\n                        <Link to=\"/Admin/SystemNotice\">\r\n                            <NotificationOutlined />\r\n                        </Link>\r\n                    </span></a>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminPanel;","import React, { Component } from \"react\";\r\nimport Panel from \"../../public/AdminPanel\"\r\nimport { Tabs, Row, Col, Switch, Form } from \"antd\";\r\nimport memsData from '../../../test/members';\r\nconst { TabPane } = Tabs;\r\n\r\ninterface Member {\r\n    type: string,\r\n    memId: number,\r\n    name: string,\r\n    campus: number\r\n}\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass AuthorityManage extends Component<Props, State>{\r\n\r\n    campusSwitch = (campus: number) => {\r\n        if (campus === 0) {\r\n            return \"卫津路\"\r\n        } else if (campus === 1) {\r\n            return \"北洋园\"\r\n        }\r\n    }\r\n\r\n    isChecked = (auth: string) => {\r\n        if (auth === \"组长\") {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    onChange(checked: any, event: any) {\r\n        console.log(`switch to ${checked}`);\r\n    }\r\n\r\n    renderMems() {\r\n        let memLeader: JSX.Element[] = [], memMember: JSX.Element[] = [];\r\n        let data = memsData.data;\r\n        if (data && data.length) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let _item: Member = data[i]\r\n                memLeader.push(\r\n                    <Row className=\"mem-card card-shadow\" key={_item.memId}>\r\n                        <Col span={4}>{_item.name}</Col>\r\n                        <Col span={16}>{this.campusSwitch(_item.campus) + \"校区\"}</Col>\r\n                        <Col span={4}>\r\n                            <Form.Item name={`switch${_item.memId}`}>\r\n                                <Switch\r\n                                    checkedChildren=\"组长\"\r\n                                    unCheckedChildren=\"组员\"\r\n                                    onClick={this.onChange}\r\n                                    defaultChecked={this.isChecked(_item.type)}\r\n                                />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"mem-content-by-group\">\r\n                <div className=\"mem-cards\">\r\n                    <Form>\r\n                        {memLeader}\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"auth-manage\">\r\n                <Panel />\r\n                <div className=\"admin-title\">权限管理</div>\r\n                <Tabs defaultActiveKey=\"1\" className=\"mem-container\">\r\n                    <TabPane tab=\"产品组\" key=\"1\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"程序组\" key=\"2\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"前端组\" key=\"3\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"设计组\" key=\"4\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"Android组\" key=\"5\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"iOS组\" key=\"6\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthorityManage","import React, { Component } from \"react\";\r\nimport Panel from '../../public/AdminPanel';\r\nimport { Tabs, Row, Col, message } from \"antd\";\r\nimport memsData from '../../../test/members';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    CloseCircleOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nconst { TabPane } = Tabs;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\ninterface Member {\r\n    type: string,\r\n    memId: number,\r\n    name: string,\r\n    campus: number\r\n}\r\n\r\nclass UserManage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handleDelete = (name: string) => {\r\n        message.error(`用户 ${name} 删除失败，请检查网络`);\r\n    }\r\n\r\n    campusSwitch = (campus: number) => {\r\n        if (campus === 0) {\r\n            return \"卫津路\"\r\n        } else if (campus === 1) {\r\n            return \"北洋园\"\r\n        }\r\n    }\r\n\r\n    renderMems() {\r\n        let memLeader: JSX.Element[] = [], memMember: JSX.Element[] = [];\r\n        let data = memsData.data;\r\n        if (data && data.length) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let _item: Member = data[i]\r\n                if (_item.type === \"组长\") {\r\n                    memLeader.push(\r\n                        <Row className=\"account-card card-shadow\" key={_item.memId}>\r\n                            <Col span={4}>{_item.name}</Col>\r\n                            <Col span={16}>{this.campusSwitch(_item.campus) + \"校区\"}</Col>\r\n                            <Col span={4}>\r\n                                <CloseCircleOutlined onClick={this.handleDelete.bind(this, _item.name)} className=\"del-btn\" />\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                } else if (_item.type === \"组员\") {\r\n                    memMember.push(\r\n                        <Row className=\"account-card card-shadow\" key={_item.memId}>\r\n                            <Col span={4}>{_item.name}</Col>\r\n                            <Col span={16}>{this.campusSwitch(_item.campus) + \"校区\"}</Col>\r\n                            <Col span={4}>\r\n                                <CloseCircleOutlined onClick={this.handleDelete.bind(this, _item.name)} className=\"del-btn\" />\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"mem-content-by-group\">\r\n                <p className=\"mem-title\">组长</p>\r\n                <div className=\"mem-cards\">\r\n                    {memLeader}\r\n                </div>\r\n                <p className=\"mem-title\">组员</p>\r\n                <div className=\"mem-cards\">\r\n                    {memMember}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Panel />\r\n                <div className=\"admin-title\">成员管理</div>\r\n                <div className=\"usermanage-btns\">\r\n                    <Link className=\"add card-shadow\" to=\"/Admin/UserManage/AddUser\">\r\n                        <div><PlusOutlined /> 添加成员</div>\r\n                    </Link>\r\n                    <Link className=\"delete card-shadow\" to=\"/Admin/UserManage/DeletedUser\">\r\n                        <div><DeleteOutlined /> OOPS！</div>\r\n                    </Link>\r\n                </div>\r\n                <Tabs defaultActiveKey=\"1\" className=\"mem-container\">\r\n                    <TabPane tab=\"产品组\" key=\"1\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"程序组\" key=\"2\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"前端组\" key=\"3\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"设计组\" key=\"4\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"Android组\" key=\"5\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"iOS组\" key=\"6\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserManage;","export default {\r\n    \"data\": [\r\n        {\r\n            \"id\": 1,\r\n            \"post_time\": \"2020-05-22 17:00\",\r\n            \"auther\": \"超级管理员\",\r\n            \"target\": \"全体成员\",\r\n            \"describe\": \"blablabla\"\r\n        }, {\r\n            \"id\": 2,\r\n            \"post_time\": \"2020-05-04 12:02\",\r\n            \"auther\": \"超级管理员\",\r\n            \"target\": \"全体组长\",\r\n            \"describe\": \"blablabla\"\r\n        }, {\r\n            \"id\": 3,\r\n            \"post_time\": \"2020-04-26 11:52\",\r\n            \"auther\": \"超级管理员\",\r\n            \"target\": \"全体成员\",\r\n            \"describe\": \"blablabla\"\r\n        }\r\n    ]\r\n}","import React, { Component } from \"react\";\r\nimport Panel from '../../public/AdminPanel';\r\nimport '../../../styles/admin.scss';\r\nimport { Row, Col, Form, Input, Radio, Button } from \"antd\";\r\nimport sysnotice from '../../../test/sysnotice';\r\nimport { Link } from \"react-router-dom\";\r\nconst { TextArea } = Input;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    value: number\r\n}\r\n\r\nclass SystemNotice extends Component<Props, State>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 1\r\n        };\r\n    }\r\n    hisPostRender = () => {\r\n        let list: JSX.Element[] = [];\r\n        sysnotice.data.map((item) => {\r\n            list.push(\r\n                <Link to={`/Admin/SystemNoticeHistory?id=${item.id}`}>\r\n                    <Row className=\"his-post-cotents\" key={item.id}>\r\n                        <Col className=\"his-post-cotent\" span={2}>{item.id}</Col>\r\n                        <Col className=\"his-post-cotent\" span={6}>{item.post_time}</Col>\r\n                        <Col className=\"his-post-cotent\" span={4}>{item.auther}</Col>\r\n                        <Col className=\"his-post-cotent\" span={6}>{item.target}</Col>\r\n                        <Col className=\"his-post-cotent\" span={6}>{item.describe}</Col>\r\n                    </Row>\r\n                </Link>\r\n            )\r\n        })\r\n        return list\r\n    }\r\n\r\n    onRadioChange = (e: any) => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"system-notice\">\r\n                <Panel />\r\n                <div className=\"admin-title\">历史发布</div>\r\n                <div className=\"his-post card-shadow\">\r\n                    <Row className=\"his-post-titles\">\r\n                        <Col className=\"his-post-title\" span={2}></Col>\r\n                        <Col className=\"his-post-title\" span={6}>发布时间</Col>\r\n                        <Col className=\"his-post-title\" span={4}>发布人</Col>\r\n                        <Col className=\"his-post-title\" span={6}>发布对象</Col>\r\n                        <Col className=\"his-post-title\" span={6}>主要内容</Col>\r\n                    </Row>\r\n                    <div className=\"his-post-list\">\r\n                        {this.hisPostRender()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"admin-title\">新建公告</div>\r\n                <div className=\"new-post card-shadow\">\r\n                    <Form>\r\n                        <Row>\r\n                            <Col span={16}>\r\n                                <Form.Item name=\"content\">\r\n                                    <TextArea rows={6} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item className=\"switch-target\" name=\"target\">\r\n                                    <Radio.Group onChange={this.onRadioChange} value={this.state.value}>\r\n                                        <Radio value={1}>全体成员</Radio>\r\n                                        <Radio value={2}>全体组长</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                <Form.Item className=\"post\">\r\n                                    <Button htmlType=\"submit\">发布</Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SystemNotice","import React, { Component } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass FuncHeader extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"admin-title\">功能管理</div>\r\n                <Row className=\"func-header\">\r\n                    <Col span={5} className=\"card\">\r\n                        <Link to=\"/Admin/FunctionManage/Meeting\" className=\"btn card-shadow\">\r\n                            会议管理\r\n                        </Link>\r\n                    </Col>\r\n                    <Col span={5} className=\"card\">\r\n                        <Link to=\"/Admin/FunctionManage/Discuss\" className=\"btn card-shadow\">\r\n                            讨论区管理\r\n                        </Link>\r\n                    </Col>\r\n                    <Col span={5} className=\"card\">\r\n                        <Link to=\"/Admin/FunctionManage/Account\" className=\"btn card-shadow\">\r\n                            账户管理\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FuncHeader;","import React, { Component } from \"react\";\r\nimport Panel from '../../public/AdminPanel';\r\nimport Header from './FunctionHeader';\r\nimport maskImg from '../../../assets/twtlogo_tilt_rev.svg';\r\n\r\n\r\nconst bgStyle = {\r\n    backgroundImage: `url(${maskImg})`,\r\n    backgroundSize: \"30%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\"\r\n}\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass FunctionManage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"func-manage\" style={bgStyle}>\r\n                <Panel />\r\n                <Header />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FunctionManage;","import React, { Component } from 'react';\r\nimport { Col, Input, Button, Form } from 'antd';\r\nimport { CloseCircleOutlined, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nclass Sign extends Component<any, any> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            signState: \"notSigned\"\r\n        }\r\n    }\r\n    renderContent = (state: string) => {\r\n        switch (state) {\r\n            case \"notSigned\":\r\n                return (<div className=\"sign-card card-shadow\">\r\n                    <Col span={12} offset={6}>\r\n                        <p className=\"sign-card-t1\">休想蒙混过关，快快交出密码</p>\r\n                        <Form>\r\n                            <Input.Password className=\"sign-card-psw\" placeholder=\"在此输入秘钥……\" />\r\n                            <div className=\"sign-card-btns\">\r\n                                <Button className=\"sign-card-btn card-shadow\">确定</Button>\r\n                            </div>\r\n                        </Form>\r\n                        <p className=\"sign-card-t2\">按Enter键结束输入哦</p>\r\n                    </Col>\r\n                </div>)\r\n                break;\r\n            case \"signFailed\":\r\n                return (\r\n                    <Col span={24}>\r\n                        <div className=\"sign-card-failed card-shadow\">\r\n                            <Col span={12} offset={6}>\r\n                                <CloseCircleOutlined className=\"sign-card-icon\" style={{ fontSize: \"7rem\", color: \"#ffffff\" }} />\r\n                                <p>ERROR</p>\r\n                                <p>互联网并非法外之地！请君自重</p>\r\n                                <div onClick={this.backToSign.bind(this)} className=\"sign-card-back\">返回</div>\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                );\r\n                break;\r\n            case \"signSucceed\":\r\n                return (\r\n                    <Col span={24}>\r\n                        <div className=\"sign-card-succeed card-shadow\">\r\n                            <Col span={12} offset={6}>\r\n                                <CheckCircleOutlined className=\"sign-card-icon\" style={{ fontSize: \"7rem\", color: \"#ffffff\" }} />\r\n                                <p>BINGO</p>\r\n                                <p>签到成功</p>\r\n                                <h4>签到时间：2020-05-02 20:32</h4>\r\n                                <div onClick={this.backToSign.bind(this)} className=\"sign-card-back\">返回</div>\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                );\r\n                break;\r\n        }\r\n    }\r\n\r\n    backToSign = () => {\r\n        this.setState({\r\n            signState: \"notSigned\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">签到</div>\r\n                {this.renderContent(this.state.signState)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sign\r\n","import React, { Component } from 'react';\r\nimport { Input, Form, Button } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 16 },\r\n};\r\n\r\nclass MeetingRecord extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"meeting-record\">\r\n                <div className=\"work-title\">会议记录</div>\r\n                <div className=\"hismetting-card card-shadow\">\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"NewMeeting\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"会议记录\"\r\n                            name=\"record\"\r\n                            rules={[{ required: true, message: '会议记录无法为空' }]}\r\n                        >\r\n                            <TextArea rows={6} />\r\n                        </Form.Item>\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MeetingRecord;","import React, { Component } from 'react';\r\nimport { Input, Form } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport MeetingRecord from './MeetingRecord';\r\nconst auth = sessionStorage.getItem(\"auth\");\r\nconst { Search } = Input;\r\n\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    status: number\r\n}\r\n\r\nclass MeetingHistory extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            status: 1\r\n        };\r\n    }\r\n\r\n    renderStatus = (status: number) => {\r\n        switch (status) {\r\n            case 1:\r\n                return <span>\r\n                    <span style={{ color: \"#89C997\", fontWeight: \"bold\" }}>已签到</span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>已请假</span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>未出勤</span>\r\n                </span>\r\n                break;\r\n            case 2:\r\n                return <span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>已签到</span>\r\n                    <span style={{ color: \"#F8B551\", fontWeight: \"bold\" }}>已请假</span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>未出勤</span>\r\n                </span>\r\n                break;\r\n            case 3:\r\n                return <span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>已签到</span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>已请假</span>\r\n                    <span style={{ color: \"#EC6941\", fontWeight: \"bold\" }}>未出勤</span>\r\n                </span>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">历史会议</div>\r\n                <div className=\"hismetting-card card-shadow\">\r\n                    <div className=\"hismetting-search\">\r\n                        <Search\r\n                            style={{ display: \"none\" }}\r\n                            // 感觉没什么用，隐藏了\r\n                            prefix={\"会议名称 ：\"}\r\n                            placeholder=\"input search text\"\r\n                            onSearch={(value: any) => console.log(value)}\r\n                        />\r\n                    </div>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">会议名称：</span>XXX组2020年第N周组会</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">会议时间：</span>2020.05.09 18:30——2020.05.09 19:00</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">会议地点：</span>天外天工作室（北洋园校区）</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">发起人：</span>张某某（3017005243）</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">主持人：</span>张某某（3017005243）</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">主要内容：</span>讨论有关工作室网址迁移的通知及注意事项</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">出勤比例：</span>39 / 50\r\n                    {auth === \"2\" ?\r\n                            <Link to={`/Work/GroupAttending?id=${0}`} className=\"mygroup\">\r\n                                我组成员情况\r\n                            </Link>\r\n                            : null}\r\n                    </p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">您的状态：</span>{this.renderStatus(this.state.status)}</p>\r\n                </div>\r\n                <MeetingRecord />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MeetingHistory;\r\n","import React, { Component } from 'react';\r\nimport { Checkbox, Row, Col, Form, Button } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass Leave extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handelReasonChange(e: any) {\r\n        console.log('checked = ', e);\r\n    }\r\n\r\n    handelExplainChange(e: any) {\r\n        console.log('explain = ', e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">请假</div>\r\n                <div className=\"leave-card card-shadow\">\r\n                    <Form>\r\n                        <p>请假理由</p>\r\n                        <Form.Item>\r\n                            <Checkbox.Group className=\"leave-card-reason\" onChange={this.handelReasonChange}>\r\n                                <Row>\r\n                                    <Col span={6}>\r\n                                        <Checkbox value=\"A\">身体原因</Checkbox>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Checkbox value=\"B\">学业原因</Checkbox>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Checkbox value=\"C\">时间冲突</Checkbox>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Checkbox value=\"D\">其他</Checkbox>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Checkbox.Group>\r\n                        </Form.Item>\r\n                        <p>具体说明</p>\r\n                        <Form.Item>\r\n                            <TextArea className=\"leave-card-explain\" rows={8} onChange={this.handelExplainChange} />\r\n                        </Form.Item>\r\n                        <div className=\"leave-card-btns\">\r\n                            <Link to={`/Work/Meeting?id=${0}`}>\r\n                                <Button className=\"leave-card-back\">返回</Button>\r\n                            </Link>\r\n                            <Button className=\"leave-card-commit\">提交</Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Leave;","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass Meeting extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">待办会议</div>\r\n                <div className=\"meeting-card card-shadow\">\r\n                    <p className=\"meeting-card-title\">天外天2020破冰大会</p>\r\n                    <p className=\"meeting-card-time\">会议时间：2020-07-08 下午14:20</p>\r\n                    <div className=\"meeting-card-detail\">\r\n                        <p>发起人：于谋华</p>\r\n                        <p>参与人员： 全体工作室成员</p>\r\n                        <p>主要内容： 如会议名所示</p>\r\n                        <p>地点： 天外天工作室</p>\r\n                    </div>\r\n                    <p className=\"meeting-card-desc\">会议要求：无</p>\r\n                    <div className=\"meeting-card-btns\">\r\n                        <Link to={`/Work/Sign?id=${0}`}>\r\n                            <Button className=\"meeting-card-btn-sign card-shadow\">签到</Button>\r\n                        </Link>\r\n                        <Link to={`/Work/Leave?id=${0}`}>\r\n                            <Button className=\"meeting-card-btn-leave card-shadow\">请假</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Meeting;","import React, { Component } from 'react';\r\nimport { Divider, Row, Col, Button, Tag } from 'antd';\r\nimport icon from '../../../assets/usericon.png';\r\nimport { Link } from 'react-router-dom';\r\nimport report from '../../../test/weekreport';\r\n\r\nconst data = report.data;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass WeekReport extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    renderMention = (mention: string) => {\r\n        let names = mention.split(\"@\");\r\n        console.log(names)\r\n        let nameList: JSX.Element[] = [];\r\n        names.map((item) => {\r\n            if(item){\r\n                nameList.push(\r\n                    <Tag color=\"blue\">@ {item}</Tag>\r\n                )\r\n            }\r\n        })\r\n        return nameList\r\n    }\r\n\r\n    renderTags = (tags: string) => {\r\n        let tag = tags.split(\"#\");\r\n        let tagList: JSX.Element[] = [];\r\n        tag.map((item) => {\r\n            if(item){\r\n                tagList.push(\r\n                    <Tag color=\"volcano\"># {item}</Tag>\r\n                )\r\n            }\r\n        })\r\n        return tagList\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">周报</div>\r\n                <div className=\"report-card\">\r\n                    <Row className=\"report-header\">\r\n                        <Col span={4} className=\"report-icon\">\r\n                            <img src={icon} alt=\"Icon\" />\r\n                        </Col>\r\n                        <Col span={10} className=\"report-basic\">\r\n                            <span className=\"report-basic-title\">第20200202期周报</span>\r\n                            <span className=\"report-basic-last\">最近编辑于{4}天前</span>\r\n                        </Col>\r\n                        <Col span={10} className=\"report-btns\">\r\n                            <Row >\r\n                                <Link to={`/Work/EditReport?id=${0}`}>\r\n                                    <Button className=\"report-btn-edit\">去编辑</Button>\r\n                                </Link>\r\n                                <Link to={`/Work/ReportList`}>\r\n                                    <Button className=\"report-btn-other\">随便看看</Button>\r\n                                </Link>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Divider dashed className=\"divider-dashed\" />\r\n                    <div className=\"report-content\">\r\n                        <div dangerouslySetInnerHTML={{ __html: data.content }}></div>\r\n                        <div className=\"mention\">\r\n                            {this.renderMention(data.mention)}\r\n                            {this.renderTags(data.tags)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekReport;","export default {\r\n    \"data\": {\r\n        \"content\": \"<h2>做了什么</h2><p>这一周吃的很多，然后有去图书馆学习</p><h2>遇到的问题</h2><p>懒惰是最大的问题</p><h2>下周的计划</h2><p>继续去做At系统</p><h2>需要的支持</h2><p>给我一杯芋泥波波奶茶，不要芋泥，也不要啵啵！</p>\",\r\n        \"mention\": \"@友人1 @友人4\",\r\n        \"tags\": \"#话题1 #话题3\"\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Badge, Col, Row, Progress } from 'antd';\r\nimport discussData from '../../../test/discuss';\r\nimport maskImg from '../../../assets/PROJECT-bg.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nconst bgStyle = {\r\n    backgroundImage: `url(${maskImg})`,\r\n    backgroundSize: \"70%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\"\r\n}\r\n\r\nclass Discuss extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    statusPoint = (status: number, withText: boolean) => {\r\n        switch (status) {\r\n            case 1:\r\n                return <Badge status=\"success\" text={withText ? \"进行中\" : null} />\r\n            case 2:\r\n                return <Badge status=\"warning\" text={withText ? \"状态不明\" : null} />\r\n            case 3:\r\n                return <Badge status=\"error\" text={withText ? \"已完结\" : null} />\r\n            case 4:\r\n                return <Badge status=\"default\" text={withText ? \"未开始\" : null} />\r\n\r\n        }\r\n    }\r\n\r\n    calcProgress = (startTime: string, endTime: string) => {\r\n        let start = new Date(startTime);\r\n        let end = new Date(endTime);\r\n        let now = new Date();\r\n        if (now.getTime() - end.getTime() < 0) {\r\n            return Math.ceil((now.getTime() - start.getTime()) / (end.getTime() - start.getTime()) * 100)\r\n        } else {\r\n            return 100\r\n        }\r\n\r\n    }\r\n\r\n    renderItem = () => {\r\n        const data = discussData.data;\r\n        const list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(\r\n                <Col span={12} key={0}>\r\n                    <Link to={`/Work/WorkSpace?id=${0}`}>\r\n                        <div className=\"discuss-item card-shadow\">\r\n                            <div>\r\n                                <span className=\"discuss-item-title\">{this.statusPoint(item.status, false)}{item.title}</span>\r\n                                <div className=\"discuss-item-content\">\r\n                                    <div>\r\n                                        {item.status === 4 ? null : <span className=\"discuss-item-text1\">团队：{item.team}</span>}\r\n                                        <span className=\"discuss-item-text1\">组建人：{item.host}</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        {item.status === 4 ? <span className=\"discuss-item-text2\">项目开始时间：{item.startTime}</span> : null}\r\n                                        {item.status === 4 ? null : <span className=\"discuss-item-text2\">最近编辑者：{item.lastEditor}</span>}\r\n                                        {item.status === 4 ? null : <span className=\"discuss-item-text2\">最近编辑于：{item.lastEditTime}</span>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Progress type=\"dashboard\" percent={this.calcProgress(item.startTime, item.endTime)} />\r\n                        </div>\r\n                    </Link>\r\n                </Col>\r\n            )\r\n        })\r\n        return list;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"discuss\" style={bgStyle}>\r\n                <div className=\"work-title\">工作讨论区</div>\r\n                <p className=\"discuss-badges\">\r\n                    {this.statusPoint(1, true)}\r\n                    {this.statusPoint(2, true)}\r\n                    {this.statusPoint(3, true)}\r\n                    {this.statusPoint(4, true)}\r\n                </p>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }} className=\"discuss-items\">\r\n                    {this.renderItem()}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Discuss;","export default {\r\n    \"data\": [{\r\n        \"id\": 1,\r\n        \"team\": 1,\r\n        \"name\": \"路人甲\",\r\n        \"finish\": 0\r\n    }, {\r\n        \"id\": 2,\r\n        \"team\": 1,\r\n        \"name\": \"路人乙\",\r\n        \"finish\": 1\r\n    }, {\r\n        \"id\": 3,\r\n        \"team\": 2,\r\n        \"name\": \"路人丙\",\r\n        \"finish\": 0\r\n    }, {\r\n        \"id\": 4,\r\n        \"team\": 3,\r\n        \"name\": \"路人丁\",\r\n        \"finish\": 0\r\n    }, {\r\n        \"id\": 5,\r\n        \"team\": 5,\r\n        \"name\": \"路人戊\",\r\n        \"finish\": 0\r\n    }, {\r\n        \"id\": 6,\r\n        \"team\": 4,\r\n        \"name\": \"路人己\",\r\n        \"finish\": 0\r\n    }, {\r\n        \"id\": 7,\r\n        \"team\": 3,\r\n        \"name\": \"路人庚\",\r\n        \"finish\": 0\r\n    }]\r\n}","import React, { Component } from 'react';\r\nimport { Collapse, Dropdown, Button, Menu, DatePicker } from 'antd';\r\nimport { DownOutlined, ClockCircleOutlined } from '@ant-design/icons';\r\nimport reportlist from '../../../test/reportlist';\r\nimport { Link } from 'react-router-dom';\r\nconst { Panel } = Collapse;\r\n\r\nfunction getWeek(date: { getFullYear: () => number; getDay: () => any; getTime: () => number; }) {\r\n    var date2 = new Date(date.getFullYear(), 0, 1);\r\n    var day1 = date.getDay();\r\n    if (day1 == 0) day1 = 7;\r\n    var day2 = date2.getDay();\r\n    if (day2 == 0) day2 = 7;\r\n    const d = Math.round((date.getTime() - date2.getTime() + (day2 - day1) * (24 * 60 * 60 * 1000)) / 86400000);\r\n    return Math.ceil(d / 7) + 1;\r\n}\r\n\r\nfunction getYear(date: Date) {\r\n    return date.getFullYear();\r\n}\r\n\r\n\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nfunction onChange(date: any) {\r\n    let selectWeek = date.format(\"w\")\r\n    console.log(selectWeek);\r\n}\r\n\r\nfunction handleMenuClick(e: any) {\r\n    console.log('click', e);\r\n}\r\n\r\nclass WeekReportList extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    teamFilter = (team: number) => {\r\n        let data = reportlist.data;\r\n        let list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            if (item.team === team) {\r\n                list.push(\r\n                    <Link to={`/`}>\r\n                        <div className=\"reportlist-item\" key={item.id}>\r\n                            <span className=\"reportlist-item-name\">{item.name}</span>\r\n                            <span className=\"reportlist-item-status\">{item.finish ? <span className=\"yes\">已提交</span> : <span className=\"no\">未提交</span>}</span>\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            }\r\n        })\r\n        return list;\r\n    }\r\n\r\n    weekMenu = () => {\r\n        let i = 1;\r\n        let list: JSX.Element[] = [];\r\n        return (\r\n            <Menu onClick={handleMenuClick}>\r\n                <Menu.Item key={`${i}`} >{i}</Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let now = new Date();\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">相关周报</div>\r\n                <div className=\"reportlist-card\">\r\n                    <div className=\"reportlist-select-header\">\r\n                        <Dropdown overlay={this.weekMenu()}>\r\n                            <Button>\r\n                                第{getYear(now)}{getWeek(now)}期周报 <DownOutlined />\r\n                            </Button>\r\n                        </Dropdown>\r\n                        <DatePicker onChange={onChange} picker=\"week\" />\r\n                    </div>\r\n                    <Collapse>\r\n                        <Panel header=\"前端组\" key=\"1\">\r\n                            {this.teamFilter(1)}\r\n                        </Panel>\r\n                        <Panel header=\"程序组\" key=\"2\">\r\n                            {this.teamFilter(2)}\r\n                        </Panel>\r\n                        <Panel header=\"产品组\" key=\"3\">\r\n                            {this.teamFilter(3)}\r\n                        </Panel>\r\n                        <Panel header=\"设计组\" key=\"4\">\r\n                            {this.teamFilter(4)}\r\n                        </Panel>\r\n                        <Panel header=\"移动组\" key=\"5\">\r\n                            {this.teamFilter(5)}\r\n                        </Panel>\r\n                    </Collapse>\r\n                    <Link to=\"/Work/Report\" className=\"reportlist-back\">\r\n                        <Button>返回</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekReportList;","import React, { Component } from 'react';\r\nimport { Badge, Tabs } from 'antd';\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    isEditing: boolean\r\n}\r\n\r\nclass WorkSpace extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditing: false\r\n        };\r\n    }\r\n\r\n    statusPoint = (status: number, withText: boolean) => {\r\n        switch (status) {\r\n            case 1:\r\n                return <Badge status=\"success\" text={withText ? \"进行中\" : null} />\r\n            case 2:\r\n                return <Badge status=\"warning\" text={withText ? \"状态不明\" : null} />\r\n            case 3:\r\n                return <Badge status=\"error\" text={withText ? \"已完结\" : null} />\r\n            case 4:\r\n                return <Badge status=\"default\" text={withText ? \"未开始\" : null} />\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">工作讨论区</div>\r\n                <p className=\"discuss-badges\">\r\n                    {this.statusPoint(1, true)}\r\n                </p>\r\n                <Tabs defaultActiveKey=\"1\" className=\"workspace-container\">\r\n                    <TabPane tab=\"公共区\" key=\"1\" className=\"workspace-public\">\r\n\r\n                    </TabPane>\r\n                    <TabPane tab=\"我的历史提交\" key=\"2\" className=\"workspace-hiscommit\">\r\n\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorkSpace;","import React, { Component } from 'react';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass GroupAttending extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">组员出勤情况</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupAttending;","import React, { Component } from 'react';\r\nimport { Form, Input, Button, DatePicker, TimePicker } from 'antd';\r\nimport moment from 'moment';\r\nimport { Mentions } from 'antd';\r\nimport maskImg from '../../../assets/twtlogo_tilt_grey.svg';\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Mentions;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    randomKey: string,\r\n    random: boolean\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 12 },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 16 },\r\n};\r\n\r\nconst maskStyle = {\r\n    backgroundImage: `url(${maskImg})`,\r\n    backgroundSize: \"40%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"top right\"\r\n}\r\n\r\nclass NewMeeting extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            randomKey: \"\",\r\n            random: false\r\n        };\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    startDateOnChange(date: any, dateString: any) {\r\n        console.log(date, dateString);\r\n    }\r\n\r\n    startTimeOnChange(time: any, timeString: any) {\r\n        console.log(time, timeString);\r\n    }\r\n\r\n    memberOnChange(value: any) {\r\n        console.log('Change:', value);\r\n    }\r\n\r\n    memberOnSelect(option: any) {\r\n        console.log('select', option);\r\n    }\r\n\r\n    renderMemberList = () => {\r\n        let list: JSX.Element[] = [];\r\n        for (let i = 1; i < 10; i++) {\r\n            list.push(<Option value={`${1}`}>友人{i}</Option>)\r\n        }\r\n        return list;\r\n    }\r\n\r\n    randomSerectKey = () => {\r\n        var pasArr = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n        var password = '';\r\n        var pasArrLen = pasArr.length;\r\n        for (var i = 0; i < 8; i++) {\r\n            var x = Math.floor(Math.random() * pasArrLen);\r\n            password += pasArr[x];\r\n        }\r\n        this.setState({\r\n            randomKey: password,\r\n            random: true\r\n        })\r\n    }\r\n\r\n    resetSerectKey = () => {\r\n        this.setState({\r\n            random: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">发起会议</div>\r\n                <div className=\"newmeeting-form\" style={maskStyle}>\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"NewMeeting\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"会议名称\"\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: '请输入会议名称' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议开始日期\"\r\n                            name=\"startdate\"\r\n                            rules={[{ required: true, message: '请输入会议开始日期' }]}\r\n                        >\r\n                            <DatePicker onChange={this.startDateOnChange} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议开始时间\"\r\n                            name=\"starttime\"\r\n                            rules={[{ required: true, message: '请输入会议开始时间' }]}\r\n                        >\r\n                            <TimePicker onChange={this.startTimeOnChange} defaultOpenValue={moment('00:00:00', 'HH:mm:ss')} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议结束日期\"\r\n                            name=\"enddate\"\r\n                            rules={[{ required: true, message: '请输入会议结束日期' }]}\r\n                        >\r\n                            <DatePicker onChange={this.startDateOnChange} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议结束时间\"\r\n                            name=\"endtime\"\r\n                            rules={[{ required: true, message: '请输入会议结束时间' }]}\r\n                        >\r\n                            <TimePicker onChange={this.startTimeOnChange} defaultOpenValue={moment('00:00:00', 'HH:mm:ss')} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议秘钥\"\r\n                            name=\"mettingMember\"\r\n                            rules={[{ required: true, message: '请输入8位会议秘钥' }]}\r\n                        >\r\n                            {this.state.random ?\r\n                                <Input\r\n                                    placeholder=\"8位字符串(区分大小写)\"\r\n                                    value={`${this.state.randomKey}`}\r\n                                    disabled={true}\r\n                                /> :\r\n                                <Input\r\n                                    placeholder=\"8位字符串（区分大小写）\"\r\n                                />\r\n                            }\r\n                            <Button className=\"random-key\" onClick={this.randomSerectKey.bind(this)}>随机生成</Button>\r\n                            <Button className=\"random-key\" onClick={this.resetSerectKey.bind(this)}>重置秘钥</Button>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"添加成员\"\r\n                            name=\"mettingMember\"\r\n                            rules={[{ required: true, message: '请添加与会成员' }]}\r\n                        >\r\n                            <Mentions\r\n                                onChange={this.memberOnChange}\r\n                                onSelect={this.memberOnSelect}\r\n                                placeholder=\"使用 @ 快速选择成员\"\r\n                            >\r\n                                {this.renderMemberList()}\r\n                            </Mentions>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议内容\"\r\n                            name=\"content\"\r\n                        >\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">发布</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewMeeting;","import React, { } from 'react';\r\nimport detail from '../../test/messagedetail';\r\nimport { Col, Row } from 'antd';\r\nconst data = detail.data;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass MessageDetail extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <p className=\"mes-title\">消息详情</p>\r\n                <div className=\"mes-detail-card\">\r\n                    <Row className=\"mes-detail-header\">\r\n                        <Col offset={4} span={8} className=\"mes-detail-item\">From:<span>{data[0].from}</span></Col>\r\n                        <Col span={8} >{data[0].updated_at}</Col>\r\n                    </Row>\r\n                    <p className=\"mes-detail-item\">内容:<span>{data[0].message}</span></p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageDetail;","export default {\r\n    \"error_code\": 0,\r\n    \"data\": [\r\n        {\r\n            \"from\": \"友人A\",\r\n            \"topic\": \"测试\",\r\n            \"updated_at\": \"2020-05-16 17:24:24\",\r\n            \"message\": \"急急急！这位组员已失联！请速回！工作室的王某某！我找你有事嗷！请你喝奶茶！快回来！你上周组会是不是也没来（阴森）？\",\r\n            \"file\": \"\"\r\n        }\r\n    ],\r\n    \"message\": \"获取成功\"\r\n}","export default {\r\n    \"data\": {\r\n        \"id\": 1,\r\n        \"to\": \"0\",\r\n        \"message\": \"一场由 测试 主持的会议 “ 测试 ” 将于 2020-5-20 21:00:00 在 测试 举行，请准时参加。本会议的验证码为：123\",\r\n        \"created_at\": \"2020-05-17 21:56:11\",\r\n        \"updated_at\": \"2020-05-17 21:56:11\",\r\n        \"status\": \"0\"\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Panel from '../../public/AdminPanel';\r\nimport sysnoticehistory from '../../../test/sysnoticehistory';\r\nimport { Row, Col, Form, Radio, Button } from 'antd';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    value: number\r\n}\r\n\r\nclass SystemNoticeHistory extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 1\r\n        };\r\n    }\r\n\r\n\r\n    onRadioChange = (e: any) => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let data = sysnoticehistory.data;\r\n        return (\r\n            <div className=\"system-notice-history\">\r\n                <Panel />\r\n                <div className=\"admin-title\">历史发布</div>\r\n                <div className=\"system-notice-history-card card-shadow\">\r\n                    <Row>\r\n                        <Col span={16}>\r\n                            <p className=\"system-notice-history-content\">\r\n                                {data.message}\r\n                            </p>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Form>\r\n                                <Form.Item className=\"switch-target\" name=\"target\">\r\n                                    <Radio.Group onChange={this.onRadioChange} value={this.state.value}>\r\n                                        <Radio value={1}>全体成员</Radio>\r\n                                        <Radio value={2}>全体组长</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                <Form.Item className=\"post\">\r\n                                    <Button htmlType=\"submit\">发布</Button>\r\n                                    <Button danger>删除</Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SystemNoticeHistory;","import React from 'react';\r\nimport Panel from '../../public/AdminPanel';\r\nimport Header from './FunctionHeader';\r\nimport { Tabs, Row, Col } from 'antd';\r\nimport activityData from '../../../test/activity';\r\nimport activityFinishedData from '../../../test/activityFinished';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst actData = activityData.data;\r\nconst finData = activityFinishedData.data;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass Meeting extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    renderAct = () => {\r\n        // 未完成的活动单项\r\n        const data = actData;\r\n        const list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(\r\n                <Row className=\"work-tab-item\">\r\n                    <Col span={10}>{item.title}</Col>\r\n                    <Col span={10}>{item.time}</Col>\r\n                    <Col span={4}>{item.host}</Col>\r\n                </Row>\r\n            )\r\n        })\r\n        return list\r\n    }\r\n\r\n    renderFin = () => {\r\n        // 已完成的活动单项\r\n        const data = finData;\r\n        const list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(\r\n                <Row className=\"work-tab-item\">\r\n                    <Col span={10}><Link to={`/Admin/FunctionManage/MeetingDetail?id=${0}`}>{item.title}</Link></Col>\r\n                    <Col span={10}>{item.time}</Col>\r\n                    <Col span={4}>{item.host}</Col>\r\n                </Row>\r\n            )\r\n        })\r\n        return list\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"func-meeting\">\r\n                <Panel />\r\n                <Header />\r\n                <div className=\"admin-title\">会议记录</div>\r\n                <Tabs defaultActiveKey=\"1\" className=\"work-tabs\">\r\n                    <TabPane tab=\"未完成\" key=\"1\" className=\"work-tab\">\r\n                        <Row className=\"work-tab-titles\">\r\n                            <Col className=\"work-tab-title\" span={10}>会议名称</Col>\r\n                            <Col className=\"work-tab-title\" span={10}>会议时间</Col>\r\n                            <Col className=\"work-tab-title\" span={4}>发起人</Col>\r\n                        </Row>\r\n                        <div className=\"work-tab-list\">\r\n                            {this.renderAct()}\r\n                        </div>\r\n                        <p className=\"no-more\">没有更多了鸭 _(:з」∠)_</p>\r\n                    </TabPane>\r\n                    <TabPane tab=\"已完成\" key=\"2\" className=\"work-tab\">\r\n                        <Row className=\"work-tab-titles\">\r\n                            <Col className=\"work-tab-title\" span={10}>会议名称</Col>\r\n                            <Col className=\"work-tab-title\" span={10}>会议时间</Col>\r\n                            <Col className=\"work-tab-title\" span={4}>发起人</Col>\r\n                        </Row>\r\n                        <div className=\"work-tab-list\">\r\n                            {this.renderFin()}\r\n                        </div>\r\n                        <p className=\"no-more\">没有更多了鸭 _(:з」∠)_</p>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Meeting;","import React from 'react';\r\nimport Panel from '../../public/AdminPanel';\r\nimport detail from '../../../test/meetingdetail';\r\nimport Donut from '../../public/ActivityDonut';\r\n\r\nconst data = detail.data;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nconst donutData = [\r\n    {\r\n        item: \"程序组\",\r\n        count: 8\r\n    },\r\n    {\r\n        item: \"前端组\",\r\n        count: 7\r\n    }, {\r\n        item: \"产品组\",\r\n        count: 7\r\n    }, {\r\n        item: \"移动组\",\r\n        count: 8\r\n    }, {\r\n        item: \"设计组\",\r\n        count: 9\r\n    }\r\n];\r\n\r\nclass MeetingDetail extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"func-mettingd\">\r\n                <Panel />\r\n                <div className=\"admin-title\">会议详情</div>\r\n                <div className=\"func-mettingdetail card-shadow\">\r\n                    <p className=\"mettingdetail-list\"><span className=\"mettingdetail-list-title\">会议名称：</span>{data.title}</p>\r\n                    <p className=\"mettingdetail-list\"><span className=\"mettingdetail-list-title\">会议时间：</span>{data.date}</p>\r\n                    <p className=\"mettingdetail-list\"><span className=\"mettingdetail-list-title\">会议地点：</span>{data.address}</p>\r\n                    <p className=\"mettingdetail-list\"><span className=\"mettingdetail-list-title\">发起人：</span>{data.sponsor}</p>\r\n                    <p className=\"mettingdetail-list\"><span className=\"mettingdetail-list-title\">主持人：</span>{data.host}</p>\r\n                    <p className=\"mettingdetail-list\"><span className=\"mettingdetail-list-title\">主要内容：</span>{data.desc}</p>\r\n                    <p className=\"mettingdetail-list\"><span className=\"mettingdetail-list-title\">出勤比例：</span>{data.attend} / {data.supposed}</p>\r\n                    <p className=\"mettingdetail-list\"><span className=\"mettingdetail-list-title\">会议记录：</span>{data.record}</p>\r\n                    <p className=\"mettingdetail-list\"><span className=\"mettingdetail-list-title\">出勤情况：</span>\r\n                        <Donut data={donutData} />\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MeetingDetail;","export default {\r\n    \"data\": {\r\n        \"title\": \"关于工作室网址迁移工作室第5次会议\",\r\n        \"date\": \"2020年05月02号\",\r\n        \"address\": \"天外天工作室（北洋园校区）\",\r\n        \"sponsor\": \" 张某某（3017005243）\",\r\n        \"host\": \"张某某（3017005243）\",\r\n        \"desc\": \"讨论有关工作室网址迁移的通知及注意事项\",\r\n        \"attend\": 39,\r\n        \"supposed\": 50,\r\n        \"record\": \"本次会议中共公布网址迁移位置，并进行工作室通知；同时进行换届通知，老校区联动问题\",\r\n    }\r\n}","import React from 'react';\r\nimport Panel from '../../public/AdminPanel';\r\nimport Header from './FunctionHeader';\r\nimport { Badge, Row, Col, Progress } from 'antd';\r\nimport discussData from '../../../test/discuss';\r\nimport { Link } from 'react-router-dom';\r\nconst data = discussData.data;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass Discuss extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    statusPoint = (status: number, withText: boolean) => {\r\n        switch (status) {\r\n            case 1:\r\n                return <Badge status=\"success\" text={withText ? \"进行中\" : null} />\r\n            case 2:\r\n                return <Badge status=\"warning\" text={withText ? \"状态不明\" : null} />\r\n            case 3:\r\n                return <Badge status=\"error\" text={withText ? \"已完结\" : null} />\r\n            case 4:\r\n                return <Badge status=\"default\" text={withText ? \"未开始\" : null} />\r\n\r\n        }\r\n    }\r\n\r\n    calcProgress = (startTime: string, endTime: string) => {\r\n        let start = new Date(startTime);\r\n        let end = new Date(endTime);\r\n        let now = new Date();\r\n        if (now.getTime() - end.getTime() < 0) {\r\n            return Math.ceil((now.getTime() - start.getTime()) / (end.getTime() - start.getTime()) * 100)\r\n        } else {\r\n            return 100\r\n        }\r\n\r\n    }\r\n\r\n    renderItem = () => {\r\n        const list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(\r\n                <Col span={12} key={0}>\r\n                    <Link to={`/Admin/FunctionManage/DiscussDetail?id=${0}`}>\r\n                        <div className=\"discuss-item card-shadow\">\r\n                            <div>\r\n                                <span className=\"discuss-item-title\">{this.statusPoint(item.status, false)}{item.title}</span>\r\n                                <div className=\"discuss-item-content\">\r\n                                    <div>\r\n                                        {item.status === 4 ? null : <span className=\"discuss-item-text1\">团队：{item.team}</span>}\r\n                                        <span className=\"discuss-item-text1\">组建人：{item.host}</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        {item.status === 4 ? <span className=\"discuss-item-text2\">项目开始时间：{item.startTime}</span> : null}\r\n                                        {item.status === 4 ? null : <span className=\"discuss-item-text2\">最近编辑者：{item.lastEditor}</span>}\r\n                                        {item.status === 4 ? null : <span className=\"discuss-item-text2\">最近编辑于：{item.lastEditTime}</span>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Progress type=\"dashboard\" percent={this.calcProgress(item.startTime, item.endTime)} />\r\n                        </div>\r\n                    </Link>\r\n                </Col>\r\n            )\r\n        })\r\n        return list;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"discuss\">\r\n                <Panel />\r\n                <Header />\r\n                <div className=\"admin-title\">讨论区管理</div>\r\n                <p className=\"discuss-badges\">\r\n                    {this.statusPoint(1, true)}\r\n                    {this.statusPoint(2, true)}\r\n                    {this.statusPoint(3, true)}\r\n                    {this.statusPoint(4, true)}\r\n                </p>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }} className=\"discuss-items\">\r\n                    {this.renderItem()}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Discuss;","import React from 'react';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass DiscussDetail extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DiscussDetail;","import React from 'react';\r\nimport Panel from '../../public/AdminPanel';\r\nimport Header from './FunctionHeader';\r\nimport { Tabs, Tooltip, Row, Col } from 'antd';\r\nimport memsData from '../../../test/members';\r\nimport {\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface Member {\r\n    type: string,\r\n    memId: number,\r\n    name: string,\r\n    campus: number\r\n}\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass Account extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    campusSwitch = (campus: number) => {\r\n        if (campus === 0) {\r\n            return \"卫津路\"\r\n        } else if (campus === 1) {\r\n            return \"北洋园\"\r\n        }\r\n    }\r\n\r\n    renderMems() {\r\n        let memLeader: JSX.Element[] = [], memMember: JSX.Element[] = [];\r\n        let data = memsData.data;\r\n        if (data && data.length) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let _item: Member = data[i]\r\n                if (_item.type === \"组长\") {\r\n                    memLeader.push(\r\n                        <Row className=\"account-card card-shadow\" key={_item.memId}>\r\n                            <Col span={4}>{_item.name}</Col>\r\n                            <Col span={16}>{this.campusSwitch(_item.campus) + \"校区\"}</Col>\r\n                            <Col span={4}>\r\n                                <Link to={`/Admin/FunctionManage/AccountDetail?id=${_item.memId}`}>\r\n                                    <SettingOutlined />\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                } else if (_item.type === \"组员\") {\r\n                    memMember.push(\r\n                        <Row className=\"account-card card-shadow\" key={_item.memId}>\r\n                            <Col span={4}>{_item.name}</Col>\r\n                            <Col span={16}>{this.campusSwitch(_item.campus) + \"校区\"}</Col>\r\n                            <Col span={4}>\r\n                                <Link to={`/Admin/FunctionManage/AccountDetail?id=${_item.memId}`}>\r\n                                    <SettingOutlined />\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"mem-content-by-group\">\r\n                <p className=\"mem-title\">组长</p>\r\n                <div className=\"mem-cards\">\r\n                    {memLeader}\r\n                </div>\r\n                <p className=\"mem-title\">组员</p>\r\n                <div className=\"mem-cards\">\r\n                    {memMember}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Panel />\r\n                <Header />\r\n                <div className=\"admin-title\">账户管理</div>\r\n                <Tabs defaultActiveKey=\"1\" className=\"mem-container\">\r\n                    <TabPane tab=\"产品组\" key=\"1\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"程序组\" key=\"2\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"前端组\" key=\"3\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"设计组\" key=\"4\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"Android组\" key=\"5\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"iOS组\" key=\"6\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\nimport Panel from '../../public/AdminPanel';\r\nimport Header from './FunctionHeader';\r\nimport userinfo from '../../../test/userinfo';\r\nimport icon from '../../../assets/usericon.png';\r\nimport {\r\n    FormOutlined,\r\n    SaveOutlined\r\n} from '@ant-design/icons';\r\nimport { Row, Col, Input, Form, Button, message, Select } from 'antd';\r\nconst { Option } = Select;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    edit: boolean\r\n}\r\n\r\nclass AccountDetail extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            edit: false\r\n        };\r\n    }\r\n\r\n    getAuthName(authType: number) {\r\n        if (authType === 0 || authType === 1 || authType === 2) {\r\n            switch (authType) {\r\n                case 0:\r\n                    return \"组员\";\r\n                    break;\r\n                case 1:\r\n                    return \"组长\";\r\n                    break;\r\n                case 2:\r\n                    return \"管理员\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleEdit = () => {\r\n        let status = this.state.edit;\r\n        this.setState({\r\n            edit: !status\r\n        })\r\n    }\r\n\r\n    handleReset = () => {\r\n        message.success(`用户 ${userinfo.username} 密码已重置为身份证后六位`)\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n        let status = this.state.edit;\r\n        this.setState({\r\n            edit: !status\r\n        })\r\n        message.error(\"修改失败，请检查网络\")\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Panel />\r\n                <div className=\"admin-title\">账户信息</div>\r\n                <div className=\"accountdetail-card card-shadow\">\r\n                    <div className=\"accountdetail-icon\">\r\n                        <img width={150} height={150} src={icon} alt=\"\" />\r\n                    </div>\r\n                    <Form\r\n                        onFinish={this.onFinish}\r\n                        initialValues={{\r\n                            username: userinfo.username,\r\n                            campus: \"北洋园校区\",\r\n                            name: userinfo.name,\r\n                            team: userinfo.team,\r\n                            email: userinfo.email,\r\n                            auth: userinfo.auth,\r\n                            phone: userinfo.phone,\r\n                            idcard: 987654321234567898\r\n                        }}\r\n                    >\r\n                        <div className=\"tools\">\r\n                            {this.state.edit ?\r\n                                <Button name=\"submit\" htmlType=\"submit\" >\r\n                                    <SaveOutlined style={{ fontSize: \"1.5rem\" }} />\r\n                                </Button> :\r\n                                null\r\n                            }\r\n                            {this.state.edit ? null :\r\n                                <Button name=\"edit\" onClick={this.handleEdit.bind(this)}>\r\n                                    <FormOutlined style={{ fontSize: \"1.5rem\" }} />\r\n                                </Button>\r\n                            }\r\n                        </div>\r\n\r\n                        <Row className=\"accountdetail-content\">\r\n                            <Col span={12}>\r\n                                <span className=\"accountdetail-text1\">账号：</span>\r\n                                <span className=\"accountdetail-text2\">\r\n                                    {this.state.edit ?\r\n                                        <Form.Item name=\"username\">\r\n                                            <Input\r\n                                                placeholder=\"请输入账号\"\r\n                                            />\r\n                                        </Form.Item> : userinfo.username\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <span className=\"accountdetail-text1\">校区：</span>\r\n                                <span className=\"accountdetail-text2\">\r\n                                    {this.state.edit ?\r\n                                        <Form.Item name=\"campus\">\r\n                                            <Input\r\n                                                placeholder=\"请输入校区\"\r\n                                            />\r\n                                        </Form.Item> : \"北洋园校区\"\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <span className=\"accountdetail-text1\">姓名：</span>\r\n                                <span className=\"accountdetail-text2\">\r\n                                    {this.state.edit ?\r\n                                        <Form.Item name=\"name\">\r\n                                            <Input\r\n                                                placeholder=\"请输入姓名\"\r\n                                            />\r\n                                        </Form.Item> : userinfo.name\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <span className=\"accountdetail-text1\">组别：</span>\r\n                                <span className=\"accountdetail-text2\">\r\n                                    {this.state.edit ?\r\n                                        <Form.Item name=\"team\">\r\n                                            <Input\r\n                                                placeholder=\"请输入组别\"\r\n                                            />\r\n                                        </Form.Item> : userinfo.team\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <span className=\"accountdetail-text1\">邮箱：</span>\r\n                                <span className=\"accountdetail-text2\">\r\n                                    {this.state.edit ?\r\n                                        <Form.Item name=\"email\">\r\n                                            <Input\r\n                                                placeholder=\"请输入邮箱\"\r\n                                            />\r\n                                        </Form.Item> : userinfo.email\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <span className=\"accountdetail-text1\">身份：</span>\r\n                                <span className=\"accountdetail-text2\">\r\n                                    {this.state.edit ?\r\n                                        <Form.Item name=\"auth\">\r\n                                            <Select>\r\n                                                <Option value={0}>组员</Option>\r\n                                                <Option value={1}>组长</Option>\r\n                                            </Select>\r\n                                        </Form.Item> : this.getAuthName(userinfo.auth)\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <span className=\"accountdetail-text1\">身份证号：</span>\r\n                                <span className=\"accountdetail-text2\">\r\n                                    {this.state.edit ?\r\n                                        <Form.Item name=\"idcard\">\r\n                                            <Input\r\n                                                placeholder=\"请输入身份证号\"\r\n                                            />\r\n                                        </Form.Item> : 987654321234567898\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <span className=\"accountdetail-text1\">密码：</span>\r\n                                <span className=\"accountdetail-text2\">\r\n                                    <div className=\"reset\" onClick={this.handleReset}>重置密码</div>\r\n                                </span>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <span className=\"accountdetail-text1\">联系电话：</span>\r\n                                <span className=\"accountdetail-text2\">\r\n                                    {this.state.edit ?\r\n                                        <Form.Item name=\"phone\">\r\n                                            <Input\r\n                                                placeholder=\"请输入联系电话\"\r\n                                            />\r\n                                        </Form.Item> : userinfo.phone\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountDetail;","import React, { Component } from \"react\";\r\nimport Panel from '../../public/AdminPanel';\r\nimport { Row, Col, Form, Input, Select, Button, message } from \"antd\";\r\nimport {\r\n    AndroidOutlined, AppleOutlined, ChromeOutlined, CodeOutlined, BulbOutlined, FormatPainterOutlined\r\n} from '@ant-design/icons';\r\nconst { Option } = Select;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    valiId: \"\" | \"success\" | \"error\" | \"warning\" | \"validating\" | undefined,\r\n    valiIdCard: \"\" | \"success\" | \"error\" | \"warning\" | \"validating\" | undefined,\r\n    valiEmail: \"\" | \"success\" | \"error\" | \"warning\" | \"validating\" | undefined,\r\n    valiPhone: \"\" | \"success\" | \"error\" | \"warning\" | \"validating\" | undefined,\r\n}\r\n\r\nclass AddUser extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            valiId: undefined,\r\n            valiIdCard: undefined,\r\n            valiEmail: undefined,\r\n            valiPhone: undefined\r\n        };\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n        message.error(\"添加失败，请检查网络\")\r\n    };\r\n\r\n    handlePhoneChange = (e: any) => {\r\n        const { value } = e.target;\r\n        console.log(value);\r\n        const reg = /^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$/;\r\n        if (reg.test(value)) {\r\n            this.setState({\r\n                valiPhone: \"success\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                valiPhone: \"warning\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEmailChange = (e: any) => {\r\n        const { value } = e.target;\r\n        console.log(value);\r\n        const reg = /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/;\r\n        if (reg.test(value)) {\r\n            this.setState({\r\n                valiEmail: \"success\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                valiEmail: \"warning\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleIdCardChange = (e: any) => {\r\n        const { value } = e.target;\r\n        console.log(value);\r\n        const reg = /^(\\d{6})(\\d{4})(\\d{2})(\\d{2})(\\d{3})([0-9]|X)$/;\r\n        if ((!isNaN(value) && reg.test(value))) {\r\n            this.setState({\r\n                valiIdCard: \"success\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                valiIdCard: \"warning\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleIdChange = (e: any) => {\r\n        const { value } = e.target;\r\n        console.log(value);\r\n        const reg = /[0-9]{10}/;\r\n        if ((!isNaN(value) && reg.test(value))) {\r\n            this.setState({\r\n                valiId: \"success\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                valiId: \"warning\"\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Panel />\r\n                <div className=\"admin-title\">成员管理</div>\r\n                <div className=\"usermanage-add-card card-shadow\">\r\n                    <p className=\"sub-title\">信息录入</p>\r\n                    <Form\r\n                        onFinish={this.onFinish}\r\n                    >\r\n                        <Row className=\"usermanage-add-items\">\r\n                            <Col span={12} className=\"usermanage-add-item\">学号</Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">校区</Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">\r\n                                <Form.Item\r\n                                    name=\"id\"\r\n                                    rules={[{ required: true, message: '学号 不能为空' }]}\r\n                                    hasFeedback\r\n                                    validateStatus={this.state.valiId}\r\n                                    help=\"学号 校验规则已启用\"\r\n                                >\r\n                                    <Input\r\n                                        onChange={this.handleIdChange}\r\n                                        placeholder=\"请输入学号\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">\r\n                                <Form.Item\r\n                                    name=\"campus\"\r\n                                    rules={[{ required: true, message: '校区 不能为空' }]}\r\n                                >\r\n                                    <Select\r\n                                        placeholder=\"请选择校区\"\r\n                                    >\r\n                                        <Option value={0}>北洋园校区</Option>\r\n                                        <Option value={1}>卫津路校区</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">姓名</Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">组别</Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">\r\n                                <Form.Item\r\n                                    name=\"name\"\r\n                                    rules={[{ required: true, message: '姓名 不能为空' }]}\r\n                                >\r\n                                    <Input\r\n                                        placeholder=\"请输入姓名\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">\r\n                                <Form.Item\r\n                                    name=\"team\"\r\n                                    rules={[{ required: true, message: '组别 不能为空' }]}\r\n                                >\r\n                                    <Select\r\n                                        placeholder=\"请选择组别\"\r\n                                    >\r\n                                        <Option value={0}><AndroidOutlined /> Android</Option>\r\n                                        <Option value={1}><AppleOutlined /> iOS</Option>\r\n                                        <Option value={2}><BulbOutlined /> 产品</Option>\r\n                                        <Option value={3}><CodeOutlined /> 程序</Option>\r\n                                        <Option value={4}><ChromeOutlined /> 前端</Option>\r\n                                        <Option value={5}><FormatPainterOutlined /> 设计</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">邮箱</Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">身份</Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">\r\n                                <Form.Item\r\n                                    name=\"email\"\r\n                                    hasFeedback\r\n                                    rules={[{ required: true, message: '邮箱 不能为空' }]}\r\n                                    validateStatus={this.state.valiEmail}\r\n                                    help=\"邮箱 校验规则已启用\"\r\n                                >\r\n                                    <Input\r\n                                        onChange={this.handleEmailChange}\r\n                                        placeholder=\"请输入邮箱\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">\r\n                                <Form.Item\r\n                                    name=\"auth\"\r\n                                    rules={[{ required: true, message: '身份 不能为空' }]}\r\n                                >\r\n                                    <Select\r\n                                        placeholder=\"请选择身份\"\r\n                                    >\r\n                                        <Option value={0}>组员</Option>\r\n                                        <Option value={1}>组长</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">身份证号</Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">联系电话</Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">\r\n                                <Form.Item\r\n                                    name=\"idcard\"\r\n                                    hasFeedback\r\n                                    rules={[{ required: true, message: '身份证号 不能为空' }]}\r\n                                    validateStatus={this.state.valiIdCard}\r\n                                    help=\"身份证号 校验规则已启用\"\r\n                                >\r\n                                    <Input\r\n                                        onChange={this.handleIdCardChange}\r\n                                        placeholder=\"请输入身份证号\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12} className=\"usermanage-add-item\">\r\n                                <Form.Item\r\n                                    name=\"phone\"\r\n                                    hasFeedback\r\n                                    rules={[{ required: true, message: '联系电话 不能为空' }]}\r\n                                    validateStatus={this.state.valiPhone}\r\n                                    help=\"联系电话 校验规则已启用\"\r\n                                >\r\n                                    <Input\r\n                                        onChange={this.handlePhoneChange}\r\n                                        placeholder=\"请输入联系电话\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24} className=\"usermanage-add-item\">\r\n                                <Form.Item >\r\n                                    <Button htmlType=\"submit\">添加</Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddUser;","export default {\r\n    \"data\": [{\r\n        \"type\": \"组长\",\r\n        \"memId\": 2,\r\n        \"name\": \"路人甲\",\r\n        \"campus\": 1,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 3,\r\n        \"name\": \"路人乙\",\r\n        \"campus\": 0,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 4,\r\n        \"name\": \"路人丙\",\r\n        \"campus\": 1,\r\n    },]\r\n}","import React, { Component } from \"react\";\r\nimport Panel from '../../public/AdminPanel';\r\nimport { Tabs, Row, Col, message } from \"antd\";\r\nimport {\r\n    RollbackOutlined\r\n} from '@ant-design/icons';\r\nimport deluser from '../../../test/deleteduser';\r\nconst { TabPane } = Tabs;\r\n\r\ninterface Member {\r\n    type: string,\r\n    memId: number,\r\n    name: string,\r\n    campus: number\r\n}\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass DeletedUser extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    campusSwitch = (campus: number) => {\r\n        if (campus === 0) {\r\n            return \"卫津路\"\r\n        } else if (campus === 1) {\r\n            return \"北洋园\"\r\n        }\r\n    }\r\n\r\n    handleRecovery = (name: string) => {\r\n        message.error(`已删除用户 ${name} 恢复失败，请检查网络`);\r\n    }\r\n\r\n    renderMems() {\r\n        let memLeader: JSX.Element[] = [], memMember: JSX.Element[] = [];\r\n        let data = deluser.data;\r\n        if (data && data.length) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let _item: Member = data[i]\r\n                memMember.push(\r\n                    <Row className=\"account-card card-shadow\" key={_item.memId}>\r\n                        <Col span={4}>{_item.name}</Col>\r\n                        <Col span={16}>{this.campusSwitch(_item.campus) + \"校区\"}</Col>\r\n                        <Col span={4}>\r\n                            <RollbackOutlined onClick={this.handleRecovery.bind(this, _item.name)} className=\"recover-btn\" />\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"mem-content-by-group\">\r\n                <div className=\"mem-cards\">\r\n                    {memMember}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Panel />\r\n                <div className=\"admin-title\">OOPS！</div>\r\n                <Tabs defaultActiveKey=\"1\" className=\"mem-container\">\r\n                    <TabPane tab=\"产品组\" key=\"1\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"程序组\" key=\"2\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"前端组\" key=\"3\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"设计组\" key=\"4\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"Android组\" key=\"5\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"iOS组\" key=\"6\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeletedUser;","import Dashboard from '../components/Dashboard/Dashboard';\r\nimport Profile from '../components/Profile/Profile';\r\nimport Message from '../components/Message/Message';\r\nimport Work from '../components/Work/Work';\r\nimport Members from '../components/Members/Members';\r\nimport MemberDetail from '../components/Members/MemberDetail';\r\nimport WeekReportEdit from '../components/Work/WeekReport/WeekReportEdit';\r\nimport MdGuide from '../components/MdUnit/MdGuide';\r\nimport AdminAuthorityManage from '../components/Admin/AuthManage/AuthorityManage';\r\nimport AdminUserManage from '../components/Admin/UserManage/UserManage';\r\nimport AdminSystemNotice from '../components/Admin/SysNotice/SystemNotice';\r\nimport AdminFunctionManage from '../components/Admin/FuncManage/FunctionManage';\r\nimport Sign from '../components/Work/Meeting/Sign';\r\nimport MeetingHistory from '../components/Work/Meeting/MeetingHistory';\r\nimport Leave from '../components/Work/Meeting/Leave';\r\nimport Meeting from '../components/Work/Meeting/Meeting';\r\nimport WeekReport from '../components/Work/WeekReport/WeekReport';\r\nimport Discuss from '../components/Work/Discuss/Discuss';\r\nimport WeekReportList from '../components/Work/WeekReport/WeekReportList';\r\nimport WorkSpace from '../components/Work/Discuss/WorkSpace';\r\nimport GroupAttending from '../components/Work/Meeting/GroupAttending';\r\nimport NewMeeting from '../components/Work/Meeting/NewMeeting';\r\nimport MessageDetail from '../components/Message/MessageDetail';\r\nimport SystemNoticeHistory from '../components/Admin/SysNotice/SystemNoticeHistory';\r\nimport FuncMeeting from '../components/Admin/FuncManage/Meeting';\r\nimport FuncMeetingDetail from '../components/Admin/FuncManage/MeetingDetail';\r\nimport FuncDiscuss from '../components/Admin/FuncManage/Discuss';\r\nimport FuncDiscussDetail from '../components/Admin/FuncManage/DiscussDetail';\r\nimport FuncAccount from '../components/Admin/FuncManage/Account';\r\nimport FuncAccountDetail from '../components/Admin/FuncManage/AccountDetail';\r\nimport AddUser from '../components/Admin/UserManage/AddUser';\r\nimport DeletedUser from '../components/Admin/UserManage/DeletedUser';\r\n\r\nexport default [{\r\n    label: \"首页\",\r\n    path: '/',\r\n    component: Dashboard,\r\n}, {\r\n    label: \"个人\",\r\n    path: '/Profile',\r\n    component: Profile\r\n}, {\r\n    label: \"消息\",\r\n    path: '/Message',\r\n    component: Message\r\n}, {\r\n    label: \"消息详情\",\r\n    path: '/Message/Detail',\r\n    component: MessageDetail\r\n}, {\r\n    label: \"工作\",\r\n    path: '/Work',\r\n    component: Work,\r\n}, {\r\n    label: \"成员\",\r\n    path: '/Members',\r\n    component: Members,\r\n}, {\r\n    label: \"成员信息\",\r\n    path: '/Members/Detail',\r\n    component: MemberDetail,\r\n},  {\r\n    label: \"周报\",\r\n    path: '/Work/Report',\r\n    component: WeekReport,\r\n}, {\r\n    label: \"周报列表\",\r\n    path: '/Work/ReportList',\r\n    component: WeekReportList,\r\n}, {\r\n    label: \"编辑周报\",\r\n    path: '/Work/EditReport',\r\n    component: WeekReportEdit,\r\n}, {\r\n    label: \"Markdown导引\",\r\n    path: '/Work/MdGuide',\r\n    component: MdGuide,\r\n}, {\r\n    label: \"后台功能管理\",\r\n    path: '/Admin/FunctionManage',\r\n    component: AdminFunctionManage,\r\n}, {\r\n    label: \"后台功能管理(会议管理)\",\r\n    path: '/Admin/FunctionManage/Meeting',\r\n    component: FuncMeeting,\r\n}, {\r\n    label: \"后台功能管理详情(会议管理)\",\r\n    path: '/Admin/FunctionManage/MeetingDetail',\r\n    component: FuncMeetingDetail,\r\n}, {\r\n    label: \"后台功能管理(讨论区管理)\",\r\n    path: '/Admin/FunctionManage/Discuss',\r\n    component: FuncDiscuss,\r\n}, {\r\n    label: \"后台功能管理详情(讨论区管理)\",\r\n    path: '/Admin/FunctionManage/DiscussDetail',\r\n    component: FuncDiscussDetail,\r\n}, {\r\n    label: \"后台功能管理(账户管理)\",\r\n    path: '/Admin/FunctionManage/Account',\r\n    component: FuncAccount,\r\n}, {\r\n    label: \"后台功能管理详情(账户管理)\",\r\n    path: '/Admin/FunctionManage/AccountDetail',\r\n    component: FuncAccountDetail,\r\n}, {\r\n    label: \"后台权限管理\",\r\n    path: '/Admin/AuthorityManage',\r\n    component: AdminAuthorityManage,\r\n}, {\r\n    label: \"后台系统公告\",\r\n    path: '/Admin/SystemNotice',\r\n    component: AdminSystemNotice,\r\n}, {\r\n    label: \"后台系统历史公告\",\r\n    path: '/Admin/SystemNoticeHistory',\r\n    component: SystemNoticeHistory,\r\n}, {\r\n    label: \"后台用户管理\",\r\n    path: '/Admin/UserManage',\r\n    component: AdminUserManage,\r\n}, {\r\n    label: \"后台新增用户\",\r\n    path: '/Admin/UserManage/AddUser',\r\n    component: AddUser,\r\n}, {\r\n    label: \"后台删除用户\",\r\n    path: '/Admin/UserManage/DeletedUser',\r\n    component: DeletedUser,\r\n}, {\r\n    label: \"签到\",\r\n    path: \"/Work/Sign\",\r\n    component: Sign,\r\n}, {\r\n    label: \"请假\",\r\n    path: \"/Work/Leave\",\r\n    component: Leave,\r\n}, {\r\n    label: \"历史会议\",\r\n    path: \"/Work/HistoryMeeting\",\r\n    component: MeetingHistory\r\n}, {\r\n    label: \"发起会议\",\r\n    path: \"/Work/NewMeeting\",\r\n    component: NewMeeting\r\n}, {\r\n    label: \"未完成会议\",\r\n    path: \"/Work/Meeting\",\r\n    component: Meeting\r\n}, {\r\n    label: \"组员出勤情况\",\r\n    path: \"/Work/GroupAttending\",\r\n    component: GroupAttending\r\n}, {\r\n    label: \"讨论区\",\r\n    path: \"/Work/Discuss\",\r\n    component: Discuss\r\n}, {\r\n    label: \"讨论面板\",\r\n    path: \"/Work/WorkSpace\",\r\n    component: WorkSpace\r\n},\r\n]","export default {\r\n    \"data\": [{\r\n        \"from\": \"管理员\",\r\n        \"topic\": \"测试\",\r\n        \"updated_at\": \"2020-05-16 17:24:24\",\r\n        \"id\": 1,\r\n        \"message\": \"开会啦\"\r\n    }, {\r\n        \"from\": \"管理员\",\r\n        \"topic\": \"测试\",\r\n        \"updated_at\": \"2020-05-16 17:24:24\",\r\n        \"id\": 2,\r\n        \"message\": \"会议结束啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦\"\r\n    }]\r\n}","import React, { Component } from 'react';\r\nimport { Drawer } from 'antd';\r\nimport '../../styles/noti.scss';\r\nimport notiData from '../../test/notification';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface Props {\r\n    visible: boolean,\r\n    onClose: any\r\n}\r\n\r\nexport interface State {\r\n}\r\n\r\nclass Message extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    renderNoti = () => {\r\n        const data = notiData.data;\r\n        let list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(\r\n                <div className=\"noti-card\" key={item.id}>\r\n                    <Link to={`/Message/Detail?id=${item.id}`}>\r\n                        <span className=\"noti-title\">{item.topic}\r\n                            <span className=\"noti-from\">{item.from}</span>\r\n                        </span>\r\n                    </Link>\r\n                    <div className=\"noti-content\">\r\n                        <span className=\"noti-text\">{item.message}</span>\r\n                        <span className=\"noti-time\">{item.updated_at}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return list;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    title=\"最新通知\"\r\n                    placement='right'\r\n                    closable={false}\r\n                    onClose={this.props.onClose}\r\n                    visible={this.props.visible}\r\n                >\r\n                    {this.renderNoti()}\r\n                </Drawer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n","import React, { Component } from 'react';\r\nimport { Layout, Badge } from 'antd';\r\nimport Notification from './Notification';\r\nimport { siteTitle } from '../../settings/settings'\r\nimport { Link } from 'react-router-dom';\r\nimport twtlogo from '../../assets/twtlogo_tilt.svg';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    LogoutOutlined,\r\n    BellOutlined,\r\n    HomeOutlined,\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\n\r\nexport interface Props {\r\n    toggle: any,\r\n    visible: boolean,\r\n    collapsed: boolean\r\n}\r\n\r\nexport interface State {\r\n    notiCount: number,\r\n    visible: boolean\r\n}\r\n\r\nclass HeaderComponent extends Component<Props, State>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            notiCount: 0\r\n        }\r\n    }\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const panelCtrl = sessionStorage.getItem(\"admin-panel\");\r\n        return (\r\n            <div className={panelCtrl === \"true\" ? \"panel-admin\" : \"panel-user\"}>\r\n                <div>\r\n                    {panelCtrl === \"true\" ?\r\n                        React.createElement(HomeOutlined, {\r\n                            className: 'panel-admin-home',\r\n                            onClick: () => { window.location.href = \"/at-pro\" },\r\n                        }) : React.createElement(this.props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                            className: 'trigger',\r\n                            onClick: this.props.toggle,\r\n                        })}\r\n                </div>\r\n                {panelCtrl === \"true\" ?\r\n                    <p>\r\n                        <div className=\"logo\" >\r\n                            <img src={twtlogo} height=\"40\" width=\"40\" />\r\n                            {siteTitle()}\r\n                        </div>\r\n                    </p>\r\n                    : null}\r\n                {panelCtrl === \"true\" ? <div style={{ marginRight: \"1rem\" }}>\r\n                    <Link className=\"logout\" to=\"/logout\">\r\n                        <LogoutOutlined />\r\n                    </Link>\r\n                </div>\r\n                    :\r\n                    <div style={{ marginRight: \"1rem\" }}>\r\n                        <a className=\"noti-button\" onClick={this.showDrawer}><BellOutlined /></a>\r\n                        <Link className=\"logout\" to=\"/Profile\">\r\n                            <UserOutlined />\r\n                        </Link>\r\n                        <Link className=\"logout\" to=\"/logout\">\r\n                            <LogoutOutlined />\r\n                        </Link>\r\n                        <Notification visible={this.state.visible} onClose={this.onClose} />\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent","import React, { Component } from 'react';\r\nimport './styles/layout.scss';\r\nimport { Layout, Button, Popover } from 'antd';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  LogoutOutlined,\r\n  BellOutlined\r\n} from '@ant-design/icons';\r\nimport SiderCustom from './components/public/Sider';\r\nimport routes from './routes/routeConfig';\r\nimport './styles/common.scss';\r\nimport HeaderComponent from './components/public/Header';\r\nconst { Header, Content } = Layout;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n  collapsed: boolean,\r\n  visible: boolean\r\n}\r\n\r\nfunction getRoute() {\r\n  const routeList: any = [];\r\n  routes.forEach((rt) => {\r\n    const route = (r: any) => (\r\n      <Route\r\n        key={r.path}\r\n        exact\r\n        path={r.path}\r\n        component={r.component}\r\n      />\r\n    );\r\n    if (rt.component) {\r\n      routeList.push(route(rt));\r\n    }\r\n  });\r\n  return routeList;\r\n}\r\n\r\nclass App extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n      visible: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const panelCtrl = sessionStorage.getItem(\"admin-panel\");\r\n    return (\r\n      <Layout className=\"App\">\r\n        {panelCtrl === \"true\" ? null : <SiderCustom collapsed={this.state.collapsed} />}\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"header-background\" style={{ padding: 0 }}>\r\n            <HeaderComponent collapsed={this.state.collapsed} toggle={this.toggle} visible={this.state.visible} />\r\n          </Header>\r\n          <Content className=\"content-background\">\r\n            <div className=\"widCtrl\">\r\n              {getRoute()}\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport '../styles/404.scss';\r\nimport logo from '../assets/favicon.png';\r\n\r\nclass NoAccess extends Component {\r\n\r\n  numberRender() {\r\n    const numberList: JSX.Element[] = [];\r\n    for (let i = 0; i < 25; i++) {\r\n      numberList.push(<span className=\"particle\">Error</span>)\r\n      numberList.push(<span className=\"particle\">No Auth</span>)\r\n    }\r\n    return numberList\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"container\">\r\n        {this.numberRender()}\r\n        <article className=\"content\">\r\n          <img src={logo} width=\"100\" height=\"100\"></img>\r\n          <h1><strong>NO_AUTH</strong></h1>\r\n          <p>你没有访问该页面的权限</p>\r\n          <p>\r\n            <a href=\"/\"><button>返回首页</button></a>\r\n          </p>\r\n        </article>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoAccess;","import { Result, Button } from 'antd';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\nimport React, { Component } from 'react';\r\nimport fetchApi from '../api/callApi';\r\nimport { getLogout } from '../api/OAuth';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount = () => {\r\n        const {apiPath,request} =getLogout();\r\n        fetchApi(apiPath,request)\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        sessionStorage.clear();\r\n        return (\r\n            <Result\r\n                icon={<CheckCircleOutlined />}\r\n                title=\"你已成功登出\"\r\n                status={\"success\"}\r\n                extra={<Button type=\"primary\" href=\"/at-pro\">返回</Button>}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router';\r\nimport NotFound from './pages/404';\r\nimport Login from './pages/Login';\r\nimport App from './App';\r\nimport NoAuth from './pages/NoAuth';\r\nimport Logout from './pages/Logout';\r\n\r\nconst isLogged = sessionStorage.getItem(\"isLogin\") === \"1\" ? true : false;\r\n\r\nexport default () => (\r\n    <Switch>\r\n        <Route path=\"/404\" component={NotFound} />\r\n        <Route path=\"/noauth\" component={NoAuth} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/\" render={props => {\r\n            return isLogged\r\n                ? <App {...props} />\r\n                : <Redirect to=\"/login\" />\r\n        }} />\r\n    </Switch>\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import { createStore, Store } from 'redux';\r\nimport RouteConfig from './Router';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\n// import { Provider } from \"react-redux\";\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst Root = () => (\r\n  <Router basename=\"/at-pro\">\r\n    <ConfigProvider locale={zhCN}>\r\n      <RouteConfig />\r\n    </ConfigProvider>\r\n  </Router>\r\n)\r\n\r\nReactDOM.render(\r\n  <Root />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/usericon.9faafd9d.png\";"],"sourceRoot":""}