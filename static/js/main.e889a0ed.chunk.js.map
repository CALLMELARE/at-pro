{"version":3,"sources":["assets/favicon.png","assets/usericon.png","assets/twtlogo_tilt_rev.svg","assets/POST-bg.png","assets/twtlogo_tilt_white.svg","assets/PROJECT-bg.png","assets/twtlogo_tilt_grey.svg","serviceWorker.ts","pages/404.tsx","api/OAuth.ts","api/callApi.ts","debug/debug.ts","settings/settings.ts","pages/Login.tsx","components/public/Sider.tsx","components/Dashboard/Dashboard.tsx","test/userinfo.ts","components/Profile/ResetPassword.tsx","components/public/Noti.tsx","components/Profile/Profile.tsx","api/Profile.ts","test/message.ts","components/Message/MessageBox.tsx","components/Message/Message.tsx","components/public/ActivityDonut.tsx","components/Work/Work.tsx","test/activity.ts","test/activityFinished.ts","test/members.ts","components/public/PicturesWall.tsx","components/public/SendMessage.tsx","components/Members/Members.tsx","components/MdUnit/MdEditor.tsx","components/Work/WeekReport/WeekReportEdit.tsx","components/MdUnit/MdExample.ts","components/MdUnit/MdGuide.tsx","components/public/AdminPanel.tsx","components/Admin/AuthManage/AuthorityManage.tsx","components/Admin/UseManage/UserManage.tsx","test/sysnotice.ts","components/Admin/SysNotice/SystemNotice.tsx","components/Admin/FuncManage/FunctionManage.tsx","components/Work/Meeting/Sign.tsx","components/Work/Meeting/MeetingRecord.tsx","components/Work/Meeting/MeetingHistory.tsx","components/Work/Meeting/Leave.tsx","components/Work/Meeting/Meeting.tsx","components/Work/WeekReport/WeekReport.tsx","test/discuss.ts","components/Work/Discuss/Discuss.tsx","test/reportlist.ts","components/Work/WeekReport/WeekReportList.tsx","components/Work/Discuss/WorkSpace.tsx","components/Work/Meeting/GroupAttending.tsx","components/Work/Meeting/NewMeeting.tsx","components/Message/MessageDetail.tsx","test/messagedetail.ts","test/sysnoticehistory.ts","routes/routeConfig.ts","components/Admin/SysNotice/SystemNoticeHistory.tsx","test/notification.ts","components/public/Notification.tsx","components/public/Header.tsx","App.tsx","pages/NoAuth.tsx","pages/Logout.tsx","Router.tsx","index.tsx","assets/twtlogo_tilt.svg"],"names":["module","exports","Boolean","window","location","hostname","match","NotFound","numberList","i","push","className","this","numberRender","src","logo","width","height","href","Component","resetPassword","newpwd1","newpwd2","formdata","FormData","append","apiPath","request","method","mode","headers","body","credentials","API_ROOT","config","ROOT","fetchApi","fullUrl","customRequest","toUpperCase","contentType","auth","Authentication","sessionStorage","getItem","localStorage","fetch","debug","settings","debugSettings","lack","Content","Footer","type","AdminMode","loginBypass","BypassLogin","Login","props","onFinish","values","setItem","setState","loading","username","password","user","psw","getLogin","then","res","json","data","console","log","loginData","message","name","token","error","state","success","title","twtlogo","content","okText","dashed","initialValues","remember","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","orgInShort","htmlType","revtwtlogo","Sider","SiderCustom","visible","pathname","split","theme","trigger","collapsible","collapsed","selectedKeys","menuRender","key","to","HomeOutlined","MessageOutlined","ProjectOutlined","TeamOutlined","Countdown","deadline","Date","now","Dashboard","calcDeadline","ddl","handleDDLClick","e","preventDefault","DDLMouseOver","renderMissionList","list","CalendarOutlined","onClick","bind","value","format","status","percent","showInfo","joinTime","hour","getHours","greeting","panelCtrl","gutter","xs","sm","md","lg","span","AppstoreAddOutlined","style","fontSize","UserSwitchOutlined","PartitionOutlined","NotificationOutlined","MailOutlined","color","org","layout","labelCol","wrapperCol","tailLayout","offset","validateMessages","ResetPwd","formRef","React","createRef","newpw1","newpw2","warning","label","allowClear","Noti","switchPosition","pos","switchIcon","CheckCircleOutlined","InfoCircleOutlined","ExclamationCircleOutlined","CloseCircleOutlined","QuestionCircleOutlined","DeleteOutlined","openNotification","notification","open","description","duration","during","placement","position","icon","btn","Profile","handleImgMouseOver","imgMouseOver","handleImgMouseLeave","handleTextMouseOver","textMouseOver","handleTextMouseLeave","faviconContainer","info","onMouseOver","onMouseLeave","userIcon","textList","studentid","team","getAuthName","email","componentDidMount","authType","time","substr","testUserInfo","MessageBox","handleClickSelect","onselect","renderMesItem","id","from","substring","updated_at","renderMesList","msg","map","item","filter","selected","target","checkedValues","Group","onChange","onFilterChange","defaultValue","Button","danger","onSelectChange","Message","Panel","Global","G2","animate","colors","DataView","DataSet","Html","Guide","count","dv","source","transform","field","dimension","as","cols","formatter","val","Donut","calcAll","result","scale","padding","forceFit","radius","innerRadius","showTitle","itemTpl","html","alignX","alignY","tooltip","lineWidth","stroke","point","actData","finData","TabPane","renderAct","host","renderFin","EditOutlined","CommentOutlined","defaultActiveKey","tab","action","PictureWall","UploadOutlined","maskStyle","backgroundColor","backgroundImage","maskImg","backgroundSize","backgroundRepeat","backgroundPosition","Option","TextArea","SendMessage","onSearch","_","showModal","handleCancel","post","handleOk","modalHeader","text","btncls","onOk","onCancel","footer","rows","autoFocus","Members","memLeader","memMember","memsData","length","_item","memId","renderMems","PureComponent","mdParser","MarkdownIt","highlight","str","lang","hljs","getLanguage","__","MdEditor","defaltValue","renderHTML","render","valueChange","defaltVal","join","WeekReportEdit","renderMemberList","toString","renderTagList","handleEditorChange","SaveOutlined","RocketOutlined","expression","columns","dataIndex","dangerouslySetInnerHTML","__html","MdGuide","dataSource","pagination","hideOnSinglePage","defaultPageSize","AdminPanel","handleOnOpen","alt","AuthorityManage","campusSwitch","campus","isChecked","checked","event","checkedChildren","unCheckedChildren","defaultChecked","UserManage","SystemNotice","hisPostRender","sysnotice","post_time","auther","describe","onRadioChange","FunctionManage","Sign","renderContent","Password","backToSign","signState","MeetingRecord","onFinishFailed","errorInfo","Search","MeetingHistory","renderStatus","fontWeight","display","Leave","handelReasonChange","handelExplainChange","Meeting","WeekReport","bgStyle","Discuss","statusPoint","withText","calcProgress","startTime","endTime","start","end","getTime","Math","ceil","renderItem","discussData","lastEditor","lastEditTime","date","selectWeek","handleMenuClick","WeekReportList","teamFilter","reportlist","finish","weekMenu","overlay","getFullYear","date2","day1","getDay","day2","d","round","getWeek","DownOutlined","picker","header","WorkSpace","isEditing","GroupAttending","NewMeeting","randomSerectKey","pasArr","pasArrLen","floor","random","randomKey","resetSerectKey","dateString","timeString","option","startDateOnChange","startTimeOnChange","defaultOpenValue","moment","disabled","memberOnChange","onSelect","memberOnSelect","MessageDetail","path","component","Work","AdminFunctionManage","AdminAuthorityManage","AdminSystemNotice","sysnoticehistory","AdminUserManage","renderNoti","notiData","topic","closable","onClose","HeaderComponent","showDrawer","notiCount","createElement","MenuUnfoldOutlined","MenuFoldOutlined","toggle","marginRight","LogoutOutlined","BellOutlined","Notification","Header","App","routeList","routes","forEach","rt","r","exact","getRoute","NoAccess","Logout","clear","extra","isLogged","NoAuth","Root","basename","locale","zhCN","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e889a0ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.cb425f4d.png\";","module.exports = __webpack_public_path__ + \"static/media/usericon.9faafd9d.png\";","module.exports = __webpack_public_path__ + \"static/media/twtlogo_tilt_rev.273bfeda.svg\";","module.exports = __webpack_public_path__ + \"static/media/POST-bg.59957022.png\";","module.exports = __webpack_public_path__ + \"static/media/twtlogo_tilt_white.273bfeda.svg\";","module.exports = __webpack_public_path__ + \"static/media/PROJECT-bg.4f96c61d.png\";","module.exports = __webpack_public_path__ + \"static/media/twtlogo_tilt_grey.51acd193.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\nimport '../styles/404.scss';\r\nimport logo from '../assets/favicon.png';\r\n\r\nclass NotFound extends Component {\r\n\r\n  numberRender() {\r\n    const numberList: JSX.Element[] = [];\r\n    for (let i = 0; i < 25; i++) {\r\n      numberList.push(<span className=\"particle\">4</span>)\r\n      numberList.push(<span className=\"particle\">0</span>)\r\n      numberList.push(<span className=\"particle\">4</span>)\r\n    }\r\n    return numberList\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"container\">\r\n        {this.numberRender()}\r\n        <article className=\"content\">\r\n          <img src={logo} width=\"100\" height=\"100\"></img>\r\n          <h1><strong>404</strong></h1>\r\n          <p>你要找的页面走丢了</p>\r\n          <p>\r\n            <a href=\"/\"><button>返回首页</button></a>\r\n          </p>\r\n        </article>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;","const getLogin = (user: string, psw: string) => {\r\n    let formdata = new FormData();\r\n    formdata.append(\"username\", user);\r\n    formdata.append(\"password\", psw);\r\n    return {\r\n        apiPath: `login`,\r\n        request: {\r\n            method: \"POST\",\r\n            mode: 'no-cors',\r\n            headers: {\r\n                \"Authorization\": \"token\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: formdata,\r\n        }\r\n    }\r\n}\r\n\r\nconst getLogout = () => {\r\n    return {\r\n        apiPath: `logout`,\r\n        request: {\r\n            method: \"GET\",\r\n            mode: 'no-cors',\r\n            credentials: 'include'\r\n        }\r\n    }\r\n}\r\n\r\nconst resetPassword = (newpwd1: string, newpwd2: string) => {\r\n    let formdata = new FormData();\r\n    formdata.append(\"newpassword\", newpwd1);\r\n    formdata.append(\"newpasswordagain\", newpwd2);\r\n    return {\r\n        apiPath: `resetpa`,\r\n        request: {\r\n            method: \"POST\",\r\n            mode: 'no-cors',\r\n            headers: {\r\n                \"Authorization\": \"token\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: formdata,\r\n            credentials: 'include'\r\n        }\r\n    }\r\n}\r\n\r\nexport { getLogin, getLogout, resetPassword }","import config from '../site-config.json'\r\n\r\nconst API_ROOT = config.ROOT;\r\n\r\ninterface req {\r\n  headers?: any,\r\n  body?: any,\r\n  method?: string,\r\n}\r\n\r\nconst fetchApi = (apiPath: string, request: req = {}) => {\r\n  const fullUrl = `${API_ROOT}/${apiPath}`;\r\n  const { headers, body, method } = request;\r\n  const customRequest: req = {};\r\n\r\n  if (method) {\r\n    customRequest.method = method.toUpperCase();\r\n  }\r\n  if (body) {\r\n    customRequest.body = body;\r\n  }\r\n  if (headers) {\r\n    const { contentType, auth } = headers;\r\n    customRequest.headers = {};\r\n\r\n    if (contentType) {\r\n      customRequest.headers['Content-Type'] = contentType;\r\n    }\r\n    if (auth) {\r\n      customRequest.headers.Authentication = auth;\r\n    }\r\n    if (sessionStorage.getItem(\"isLogin\") === \"1\") {\r\n      customRequest.headers['token'] = localStorage.getItem(\"token\");\r\n    }\r\n  }\r\n  return fetch(fullUrl, customRequest);\r\n};\r\n\r\nexport default fetchApi;\r\n","import config from '../site-config.json';\r\n\r\nconst debug = config.debug;\r\nconst settings = config.debugSettings\r\n\r\nconst panelCtrl = () => {\r\n    // 用户端/后台布局切换\r\n    if (debug === \"true\") {\r\n        if (settings.AdminMode === \"true\") {\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nconst bypassLogin = () => {\r\n    // 跳过登录界面\r\n    if (debug === \"true\") {\r\n        if (settings.BypassLogin === \"true\") {\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nexport { panelCtrl, bypassLogin }","import config from '../site-config.json';\r\n\r\nconst lack = \"错误：site-config.json中缺少\";\r\nconst lackTip = \"未知\";\r\n\r\nexport const org = () => {\r\n    if (config.org) {\r\n        return config.org\r\n    } else {\r\n        console.log(lack + \"org<string>字段\");\r\n        return lackTip\r\n    }\r\n}\r\n\r\nexport const orgInShort = () => {\r\n    if (config.orgInShort) {\r\n        return config.orgInShort\r\n    } else {\r\n        console.log(lack + \"orgInShort<string>字段\");\r\n        return lackTip\r\n    }\r\n}\r\n\r\nexport const siteTitle = () => {\r\n    if (config.title) {\r\n        return config.title\r\n    } else {\r\n        console.log(lack + \"title<string>字段\");\r\n        return lackTip\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Input, Button, Card, Modal } from 'antd';\r\nimport { Layout, Alert, Divider } from 'antd';\r\nimport twtlogo from '../assets/twtlogo_tilt.svg';\r\nimport revtwtlogo from '../assets/twtlogo_tilt_rev.svg';\r\nimport { UserOutlined, LockOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport '../styles/login.scss';\r\nimport { getLogin } from '../api/OAuth';\r\nimport fetchApi from '../api/callApi';\r\nimport { panelCtrl, bypassLogin } from '../debug/debug';\r\nimport { org, orgInShort } from '../settings/settings';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nconst type = panelCtrl();\r\nconst loginBypass = bypassLogin();\r\n// 是否为超级管理员\r\n\r\ninterface Props {\r\n}\r\n\r\nclass Login extends Component<any, any> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    debug() {\r\n        Modal.success({\r\n            title: <p><img src={twtlogo} height=\"30\" width=\"30\" />At</p>,\r\n            content: '开发者模式已启用',\r\n            okText: \"Ok\",\r\n        });\r\n    }\r\n\r\n    error() {\r\n        Modal.error({\r\n            title: <p><img src={twtlogo} height=\"30\" width=\"30\" />At</p>,\r\n            content: '请检查IPA账号及密码是否正确',\r\n            okText: \"Ok\",\r\n        });\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        // console.log('Received values of form: ', values);\r\n        if (loginBypass === true) {\r\n            this.debug()\r\n            sessionStorage.setItem(\"isLogin\", \"1\");\r\n            sessionStorage.setItem(\"username\", \"开发者\");\r\n            this.setState({ loading: false, })\r\n            if (values.username === \"admin\" && values.password === \"123456\") {\r\n                sessionStorage.setItem(\"admin-panel\", \"true\");\r\n                window.location.href = \"/at-pro\";\r\n            } else if(values.username === \"admin\" && values.password === \"654321\") {\r\n                sessionStorage.setItem(\"admin-panel\", \"false\");\r\n                window.location.href = \"/at-pro\";\r\n            }\r\n        }\r\n        this.setState({ loading: true, });\r\n        const { apiPath, request } = getLogin(values.username, values.password);\r\n        fetchApi(apiPath, request)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                let loginData = data.data;\r\n                if (data.message === \"登录成功\") {\r\n                    sessionStorage.setItem(\"isLogin\", \"1\");\r\n                    sessionStorage.setItem(\"username\", loginData.name);\r\n                    localStorage.setItem(\"token\", loginData.token);\r\n                    sessionStorage.setItem(\"auth\", loginData.auth)\r\n                    this.setState({ loading: false, })\r\n                    if (type) {\r\n                        sessionStorage.setItem(\"admin-panel\", \"true\");\r\n                        window.location.href = \"/at-pro\";\r\n                    } else {\r\n                        sessionStorage.setItem(\"admin-panel\", \"false\");\r\n                        window.location.href = \"/at-pro\";\r\n                    }\r\n                } else {\r\n                    this.error()\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"App\">\r\n                <Content className=\"login-page\">\r\n                    <Card className=\"login-card\">\r\n                        <h2>登录</h2>\r\n                        <Divider dashed className=\"divider-dashed\" />\r\n                        <Form\r\n                            name=\"normal_login\"\r\n                            className=\"login-form\"\r\n                            initialValues={{ remember: true }}\r\n                            onFinish={this.onFinish}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"username\"\r\n                                rules={[{ required: true, message: 'IPA账号不能为空!' }]}\r\n                            >\r\n                                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"IPA账号\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[{ required: true, message: '密码不能为空!' }]}\r\n                            >\r\n                                <Input\r\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"密码\"\r\n                                />\r\n                            </Form.Item>\r\n                            <div className=\"login-buttons\">\r\n                                <div>\r\n                                    <p>使用{orgInShort()}账号登录</p>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">登录</Button>\r\n                                </div>\r\n                                <Button type=\"primary\" className=\"login-with-twt-button\"><img src={revtwtlogo} height=\"43\" width=\"43\" /></Button>\r\n                            </div>\r\n                        </Form>\r\n                    </Card>\r\n\r\n                </Content>\r\n                <Footer>\r\n                    <img src={twtlogo} height=\"50\" width=\"50\" />\r\n                </Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react';\r\nimport config from '../../site-config.json';\r\nimport { Layout, Menu, Drawer, Button } from 'antd';\r\nimport {\r\n    HomeOutlined, UserOutlined, LogoutOutlined, MessageOutlined, TeamOutlined, ProjectOutlined\r\n} from '@ant-design/icons';\r\nimport twtlogo from '../../assets/twtlogo_tilt.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Sider } = Layout;\r\n\r\ninterface Props {\r\n    collapsed: boolean,\r\n}\r\n\r\nclass SiderCustom extends Component<any, any> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    menuRender() {\r\n        let pathname: string = window.location.pathname;\r\n        switch (pathname.split(\"/\")[2]) {\r\n            case \"\":\r\n                return ['1']\r\n                break;\r\n            case \"Message\":\r\n                return ['2']\r\n                break;\r\n            case \"Work\":\r\n                return ['3']\r\n                break;\r\n            case \"Members\":\r\n                return ['4']\r\n                break;\r\n            case \"Profile\":\r\n                return ['5']\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Sider theme=\"light\" trigger={null} collapsible collapsed={this.props.collapsed}>\r\n                <div className=\"logo\" >\r\n                    <img src={twtlogo} height=\"40\" width=\"40\" />\r\n                    {this.props.collapsed ? null : config.title}\r\n                </div>\r\n                <Menu theme=\"light\" mode=\"inline\" selectedKeys={this.menuRender()}>\r\n                    <Menu.Item key=\"1\" title=\"首页\">\r\n                        <Link to=\"/\">\r\n                            <HomeOutlined />\r\n                            {this.props.collapsed ? null : \"首页\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" title=\"消息\">\r\n                        <Link to=\"/Message\">\r\n                            <MessageOutlined />\r\n                            {this.props.collapsed ? null : \"消息\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\" title=\"工作\">\r\n                        <Link to=\"/Work\">\r\n                            <ProjectOutlined />\r\n                            {this.props.collapsed ? null : \"工作\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"4\" title=\"成员\">\r\n                        <Link to=\"/Members\">\r\n                            <TeamOutlined />\r\n                            {this.props.collapsed ? null : \"成员\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"5\" title=\"个人\">\r\n                        <Link to=\"/Profile\" >\r\n                            <UserOutlined />\r\n                            {this.props.collapsed ? null : \"个人\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n\r\n            </Sider >\r\n        )\r\n    }\r\n}\r\n\r\nexport default SiderCustom","import React, { Component } from 'react';\r\nimport { Row, Col, Card, Badge, Progress, Statistic, Button } from 'antd';\r\nimport {\r\n    MailOutlined,\r\n    PartitionOutlined,\r\n    NotificationOutlined,\r\n    UserSwitchOutlined,\r\n    CalendarOutlined,\r\n    UserOutlined,\r\n    AppstoreAddOutlined\r\n} from '@ant-design/icons';\r\nimport '../../styles/dashboard.scss';\r\nimport { org } from '../../settings/settings'\r\nimport Heatmap from './Heatmap';\r\n// import { userName } from '../../actions'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst message = false;\r\nconst { Countdown } = Statistic;\r\nconst deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 30;\r\n\r\ninterface Props {\r\n    collapsed: boolean,\r\n}\r\n\r\nclass Dashboard extends Component<any, any> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            joinTime: 33,\r\n            DDLMouseOver: false\r\n        }\r\n    }\r\n\r\n    greeting() {\r\n        var hour = new Date().getHours()\r\n        var greeting = ''\r\n        if (hour < 6) {\r\n            greeting = '夜深了'\r\n        } else if (hour < 10) {\r\n            greeting = '早上好'\r\n        } else if (hour < 12) {\r\n            greeting = '上午好'\r\n        } else if (hour < 14) {\r\n            greeting = '中午好'\r\n        } else if (hour < 18) {\r\n            greeting = '下午好'\r\n        } else if (hour < 23) {\r\n            greeting = '晚上好'\r\n        } else {\r\n            greeting = '夜深了'\r\n        }\r\n        return greeting\r\n    }\r\n\r\n    calcDeadline = (ddl: Date) => {\r\n\r\n        return Date.now()\r\n    }\r\n\r\n    handleDDLClick = (e: any) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            DDLMouseOver: !this.state.DDLMouseOver\r\n        })\r\n    }\r\n\r\n    renderMissionList = () => {\r\n        let list: JSX.Element[] = [];\r\n        list.push(\r\n            <div className=\"dashboard-mission-card card-shadow\" key={0}>\r\n                <p className=\"dashboard-mission-title\">天外天At系统升级及整合</p>\r\n                <div className=\"dashboard-mission-right\">\r\n                    <div className=\"dashboard-mission-btns\">\r\n                        <Button><UserOutlined /></Button>\r\n                        <Button><CalendarOutlined /></Button>\r\n                    </div>\r\n                    <div className=\"dashboard-mission-progress\" onClick={this.handleDDLClick.bind(this)}>\r\n                        <p>时间进程</p>\r\n                        {this.state.DDLMouseOver ?\r\n                            <Countdown value={deadline} format=\"D 天 H 时 m 分 s 秒\" />\r\n                            :\r\n                            <Progress status=\"active\" percent={50} showInfo={false} />}\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        )\r\n        return list\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const panelCtrl = sessionStorage.getItem(\"admin-panel\");\r\n        return (\r\n            <div>\r\n                {panelCtrl === \"true\" ?\r\n                    <div className=\"admin-home\">\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                        <Col span={6}>\r\n                                <Link to=\"/Admin/FunctionManage\">\r\n                                    <div className=\"admin-home-card card-shadow\">\r\n                                        <AppstoreAddOutlined style={{ fontSize: \"5rem\" }} />\r\n                                        <span>功能管理</span>\r\n                                    </div>\r\n                                </Link>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Link to=\"/Admin/UserManage\">\r\n                                    <div className=\"admin-home-card card-shadow\">\r\n                                        <UserSwitchOutlined style={{ fontSize: \"5rem\" }} />\r\n                                        <span>成员管理</span>\r\n                                    </div>\r\n                                </Link>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Link to=\"/Admin/AuthorityManage\">\r\n                                    <div className=\"admin-home-card card-shadow\">\r\n                                        <PartitionOutlined style={{ fontSize: \"5rem\" }} />\r\n                                        <span>权限管理</span>\r\n                                    </div>\r\n                                </Link>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Link to=\"/Admin/SystemNotice\">\r\n                                    <div className=\"admin-home-card card-shadow\">\r\n                                        <NotificationOutlined style={{ fontSize: \"5rem\" }} />\r\n                                        <span>系统公告</span>\r\n                                    </div>\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </div> :\r\n                    <div>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={12}>\r\n                                <div className=\"dashboard-title\">\r\n                                    {this.greeting() + \"，\" + sessionStorage.getItem(\"username\")}\r\n                                    <a href=\"/\" className=\"dashboard-title-message\">\r\n                                        {message ? <MailOutlined style={{ fontSize: '1.25rem', color: '#00A1E9' }} /> : <MailOutlined style={{ fontSize: '1.25rem', color: '#DDDDDD' }} />}\r\n                                    </a>\r\n                                </div>\r\n                                <Card className=\"card-shadow\">\r\n                                    <p>今天是你加入{org()}的第<span className=\"join-time\">{this.state.joinTime}</span>天</p>\r\n                                    <p><span className=\"dashboard-bold\">账号：</span>testAccount</p>\r\n                                    <p><span className=\"dashboard-bold\">组别：</span>北洋园-随便什么组（成员）</p>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <div className=\"dashboard-title\">周报</div>\r\n                                <Card className=\"card-shadow\">\r\n                                    <p className=\"dashboard-bold\">第{202015}期周报：<span className=\"dashboard-commit-status-not\">未提交</span></p>\r\n                                    <p className=\"dashboard-explain\">起止时间：2020/04/07 ~ 2020/04/13</p>\r\n                                    <p className=\"dashboard-explain\">周报截止日期为周一，在时间范围内可以进行编辑。超过编辑时间的周报不能进行编辑。<a href=\"/Work/EditReport\" className=\"dashboard-to-report\">去编辑周报 >></a></p>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                            <Col span={24}>\r\n                                <div className=\"dashboard-title\">近期任务</div>\r\n                                {this.renderMissionList()}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard","export default {\r\n    \"id\": 1,\r\n    \"username\": \"Dragon Proud Sky\",\r\n    \"password\": \"whosyourdaddy\",\r\n    \"name\": \"龙傲天\",\r\n    \"studentid\": \"3020202387\",\r\n    \"phone\": \"15535956103\",\r\n    \"email\": \"admin@twt.edu.cn\",\r\n    \"team\": \"不知道什么组\",\r\n    \"auth\": 1,\r\n    \"created_at\": \"2020-04-08 20:41:00\",\r\n    \"updated_at\": \"2020-04-08 21:15:55\"\r\n}","import { Form, Input, Button, message, Popconfirm } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport fetchApi from '../../api/callApi';\r\nimport { resetPassword } from '../../api/OAuth';\r\n\r\ninterface formType {\r\n    current: string\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 4, span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n    required: \"此处不能为空\",\r\n};\r\n\r\nclass ResetPwd extends Component<any, any> {\r\n    formRef = React.createRef();\r\n\r\n    onFinish = (values: any) => {\r\n        // console.log(values.newpw1);\r\n        // console.log(values.newpw2);\r\n        if (values.newpw1 === values.newpw2) {\r\n            // 在这里发出修改请求\r\n            message.warning(\"正在保存…\")\r\n            const { apiPath, request } = resetPassword(values.newpw1, values.newpw2);\r\n            fetchApi(apiPath, request)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                })\r\n        } else {\r\n            message.error(\"两次密码输入不一致\")\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"reset-pwd\">\r\n                <Form {...layout} className=\"reset-pwd-form card-shadow\" name=\"control-ref\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n                    <Form.Item name=\"newpw1\" label=\"新密码\" rules={[{ required: true }]}>\r\n                        <Input allowClear />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"newpw2\" label=\"确认密码\" rules={[{ required: true }]}>\r\n                        <Input allowClear />\r\n                    </Form.Item>\r\n                    <p className=\"reset-pwd-tip\">为确保信息安全，请养成良好的密码使用习惯，不得使用弱密码，尽量避免同一密码多处使用。 请设置最少 8 位的密码，建议包含大、小写字母、数字符号中的至少三种</p>\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">修改</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPwd","import React, { Component, ReactNode } from 'react';\r\nimport { Button, notification } from 'antd';\r\nimport {\r\n    CheckCircleOutlined,\r\n    QuestionCircleOutlined,\r\n    CloseCircleOutlined,\r\n    ExclamationCircleOutlined,\r\n    InfoCircleOutlined,\r\n    DeleteOutlined,\r\n    NotificationOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface propType {\r\n    type?: string,\r\n    title: string | ReactNode,\r\n    during?: number,\r\n    content: string | ReactNode,\r\n    position?: string,\r\n    btn: string | ReactNode\r\n}\r\n\r\nclass Noti extends Component<any, any>{\r\n    constructor(props: propType) {\r\n        super(props)\r\n    }\r\n\r\n    switchPosition = (pos: string) => {\r\n        if (pos) {\r\n            switch (pos) {\r\n                case \"TL\":\r\n                    return \"topLeft\";\r\n                    break;\r\n                case \"TR\":\r\n                    return \"topRight\";\r\n                    break;\r\n                case \"BL\":\r\n                    return \"bottomLeft\";\r\n                    break;\r\n                case \"BR\":\r\n                    return \"bottomRight\";\r\n                    break;\r\n            }\r\n        } else {\r\n            return \"topRight\"\r\n        }\r\n    }\r\n\r\n    switchIcon = (type: string) => {\r\n        if (type) {\r\n            switch (type) {\r\n                case \"success\":\r\n                    return <CheckCircleOutlined style={{ color: \"#52c41a\" }} />\r\n                    break;\r\n                case \"info\":\r\n                    return <InfoCircleOutlined style={{ color: \"#1890ff\" }} />\r\n                    break;\r\n                case \"warning\":\r\n                    return <ExclamationCircleOutlined style={{ color: \"#faad14\" }} />\r\n                    break;\r\n                case \"error\":\r\n                    return <CloseCircleOutlined style={{ color: \"#ff4d4f\" }} />\r\n                    break;\r\n                case \"help\":\r\n                    return <QuestionCircleOutlined style={{ color: \"#FF7F00\" }} />\r\n                    break;\r\n                case \"del\":\r\n                    return <DeleteOutlined />\r\n                    break;\r\n                case \"noti\":\r\n                    return <NotificationOutlined />\r\n                    break;\r\n            }\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    openNotification = () => {\r\n        notification.open({\r\n            message: this.props.title,\r\n            description: this.props.content,\r\n            duration: this.props.during,\r\n            placement: this.switchPosition(this.props.position),\r\n            icon: this.switchIcon(this.props.type),\r\n            onClick: () => {\r\n                console.log('Notification Clicked!');\r\n            },\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Button className=\"noti-btn\" onClick={this.openNotification}>\r\n                {this.props.btn}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Noti","import React, { Component } from 'react';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport testUserInfo from '../../test/userinfo';\r\nimport ResetPwd from './ResetPassword';\r\nimport userIcon from '../../assets/usericon.png';\r\nimport fetchApi from '../../api/callApi';\r\nimport { userinfo } from '../../api/Profile';\r\nimport '../../styles/profile.scss';\r\nimport Noti from '../public/Noti';\r\nimport { Button, Input, Form } from 'antd';\r\n\r\ninterface profileType {\r\n    id: number,\r\n    username: string,\r\n    password: string,\r\n    name: string,\r\n    studentid: string,\r\n    phone: string,\r\n    email: string,\r\n    team: string,\r\n    auth: number\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 8 },\r\n};\r\n\r\nclass Profile extends Component<any, any> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            imgMouseOver: false,\r\n            textMouseOver: false\r\n        }\r\n    }\r\n\r\n    getAuthName(authType: number) {\r\n        if (authType === 0 || authType === 1 || authType === 2) {\r\n            switch (authType) {\r\n                case 0:\r\n                    return \"组员\";\r\n                    break;\r\n                case 1:\r\n                    return \"组长\";\r\n                    break;\r\n                case 2:\r\n                    return \"管理员\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDate(time: string) {\r\n        if (time) {\r\n            return time.substr(0, 10);\r\n        }\r\n    }\r\n\r\n    handleImgMouseOver = (e: any) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            imgMouseOver: true\r\n        })\r\n    }\r\n\r\n    handleImgMouseLeave = (e: any) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            imgMouseOver: false\r\n        })\r\n    }\r\n\r\n    handleTextMouseOver = (e: any) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            textMouseOver: true\r\n        })\r\n    }\r\n\r\n    handleTextMouseLeave = (e: any) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            textMouseOver: false\r\n        })\r\n    }\r\n\r\n    faviconContainer = (info: profileType) => {\r\n        return (\r\n            <div className=\"profile-card-left\" onMouseOver={this.handleImgMouseOver.bind(this)} onMouseLeave={this.handleImgMouseLeave.bind(this)}>\r\n                <div className=\"profile-card-img\">\r\n                    <img className=\"user-icon-upper\" src={userIcon} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    textList = (info: profileType) => {\r\n        return (\r\n            this.state.imgMouseOver ?\r\n                <div className=\"profile-card-right\">\r\n                    <span className=\"profile-card-info\">账号：<span>{info.username}</span></span>\r\n                    <span className=\"profile-card-info\">姓名：<span>{info.name + \"  \" + info.studentid}</span></span>\r\n                    <span className=\"profile-card-info\">组别：<span>{info.team + \"  \" + this.getAuthName(info.auth)}</span></span>\r\n                    <span className=\"profile-card-info\">邮箱：<span>{info.email}</span></span>\r\n                </div> :\r\n                <div className=\"profile-card-right-text\" onMouseOver={this.handleTextMouseOver.bind(this)} onMouseLeave={this.handleTextMouseLeave.bind(this)}>\r\n                    {this.state.textMouseOver ?\r\n                        <div>\r\n                            <Form {...layout}>\r\n                                <Form.Item label=\"选择头像\">\r\n                                    <Button>+</Button>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"更改签名\">\r\n                                    <Input></Input>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                        : \"有些人生命里出现一次就够了，遇到是我的幸运。\"}\r\n                </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { apiPath, request } = userinfo();\r\n        fetchApi(apiPath, request)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let userInfo = testUserInfo;\r\n        return (\r\n            <div>\r\n                <div className=\"ant-descriptions-title\">个人信息</div>\r\n                <div className=\"profile-card card-shadow\">\r\n                    {this.faviconContainer(testUserInfo)}\r\n                    {this.textList(testUserInfo)}\r\n                    <div className=\"profile-help\">\r\n                        <Noti\r\n                            title=\"帮助\"\r\n                            type=\"help\"\r\n                            content=\"如果信息有误或者有需改变的信息，请及时联系组长或者站内管理员\"\r\n                            btn={<QuestionCircleOutlined />}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"ant-descriptions-title\">修改密码</div>\r\n                <ResetPwd />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","export const userinfo = () => {\r\n    // 用户基本信息\r\n    return {\r\n        apiPath: `user/myinfo`,\r\n        request: {\r\n            method: \"GET\",\r\n            mode: 'no-cors',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": `${localStorage.token}`,\r\n            },\r\n            credentials: 'include'\r\n        }\r\n    }\r\n}","export default {\r\n    \"data\": [{\r\n        \"from\": \"管理员\",\r\n        \"topic\": \"测试\",\r\n        \"updated_at\": \"2020-05-16 17:24:24\",\r\n        \"id\": 1,\r\n        \"message\": \"开会啦\"\r\n    }, {\r\n        \"from\": \"管理员\",\r\n        \"topic\": \"测试\",\r\n        \"updated_at\": \"2020-05-16 17:24:24\",\r\n        \"id\": 2,\r\n        \"message\": \"会议结束啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦\"\r\n    }]\r\n}","import React, { Component } from \"react\";\r\nimport { Radio, Button, Row, Col, Checkbox, Form, message } from \"antd\";\r\nimport msg from '../../test/message';\r\nimport messages from \"../../test/message\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface item {\r\n    from: string,\r\n    topic: string,\r\n    updated_at: string,\r\n    id: number,\r\n    message: string\r\n}\r\n\r\nexport interface Props {\r\n    title: string,\r\n}\r\n\r\nexport interface State {\r\n    onselect: boolean,\r\n    filter: any,\r\n    selected: []\r\n}\r\n\r\nclass MessageBox extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            onselect: false,\r\n            filter: \"\",\r\n            selected: []\r\n        };\r\n    }\r\n\r\n    onFilterChange(e: any) {\r\n        console.log(`radio checked:${e.target.value}`);\r\n    }\r\n\r\n    onSelectChange(checkedValues: any) {\r\n        console.log('checked = ', checkedValues);\r\n\r\n    }\r\n\r\n    handleClickSelect = (e: any) => {\r\n        e.preventDefault();\r\n        let status = this.state.onselect\r\n        this.setState({\r\n            onselect: !status\r\n        })\r\n        console.log(this.state.onselect)\r\n    }\r\n\r\n    renderMesItem = (status: string, data: item) => {\r\n        return (\r\n            <Link to={`/Message/Detail?id=${data.id}`}>\r\n                <Row className=\"mesbox-item\">\r\n                    <Col span={1}>{status === \"read\" ? null : <div className=\"pot\"></div>}</Col>\r\n                    <Col span={this.state.onselect ? 16 : 17}><span className=\"mesbox-item-from\">{data.from}:</span>{data.message.substring(0, 10)}</Col>\r\n                    <Col span={4}>{data.updated_at}</Col>\r\n                    <Col span={2}>{\"工作室\"}</Col>\r\n                    {this.state.onselect ?\r\n                        <Col span={1}>\r\n                            <Checkbox value={data.id}></Checkbox>\r\n                        </Col>\r\n                        : null}\r\n                </Row>\r\n            </Link>\r\n        )\r\n    }\r\n\r\n    renderMesList = () => {\r\n        let data = msg.data;\r\n        let list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(\r\n                this.renderMesItem(\"notread\", item)\r\n            )\r\n        })\r\n        return list\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        console.log('Received values of form: ', values);\r\n        message.success('删除成功');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mesbox card-shadow\">\r\n                <Form\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <div className=\"mesbox-header\">\r\n                        <span className=\"mesbox-header-title\">{this.props.title}</span>\r\n                        <span className=\"mesbox-header-filter\">\r\n                            <Radio.Group className=\"mesbox-header-filterl\" onChange={this.onFilterChange} defaultValue=\"all\">\r\n                                <Radio.Button value=\"all\">全部</Radio.Button>\r\n                                <Radio.Button value=\"notread\">未读</Radio.Button>\r\n                                <Radio.Button value=\"read\">已读</Radio.Button>\r\n                            </Radio.Group>\r\n                            <Button className=\"mesbox-header-filterr\" onClick={this.handleClickSelect.bind(this)}>{this.state.onselect ? \"退出多选\" : \"多选\"}</Button>\r\n                            {this.state.onselect ? <Button htmlType=\"submit\" danger>删除</Button> : null}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"mesbox-list\">\r\n                        <Form.Item\r\n                            name=\"selected\"\r\n                        >\r\n                            <Checkbox.Group style={{ width: '100%' }} onChange={this.onSelectChange}>\r\n                                {this.renderMesList()}\r\n                            </Checkbox.Group>\r\n                        </Form.Item>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageBox;","import React, { Component } from 'react';\r\nimport { Descriptions, Card, Collapse, Table } from 'antd';\r\nimport MessageBox from './MessageBox';\r\nimport '../../styles/message.scss';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass Message extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"mes-title\">消息中心</p>\r\n                <div className=\"mes-card\">\r\n                    <MessageBox title=\"成员信息\" />\r\n                </div>\r\n                <div className=\"mes-card\">\r\n                    <MessageBox title=\"系统消息\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\";\r\nimport {\r\n    Chart,\r\n    Geom,\r\n    Axis,\r\n    Tooltip,\r\n    Coord,\r\n    Label,\r\n    Legend,\r\n    Guide,\r\n    G2\r\n} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nconst { Global } = G2; // 获取 Global 全局对象\r\nGlobal.animate = false ; // 关闭默认动画\r\nGlobal.colors = [ 'red', 'blue', 'yellow' ]; // 更改默认的颜色\r\n\r\nconst { DataView } = DataSet;\r\nconst { Html } = Guide;\r\nconst data = [\r\n    {\r\n        item: \"工作室大会\",\r\n        count: 40\r\n    },\r\n    {\r\n        item: \"组会\",\r\n        count: 21\r\n    }\r\n];\r\nconst dv = new DataView();\r\ndv.source(data).transform({\r\n    type: \"percent\",\r\n    field: \"count\",\r\n    dimension: \"item\",\r\n    as: \"percent\"\r\n});\r\nconst cols = {\r\n    percent: {\r\n        formatter: (val: any) => {\r\n            val = val * 100 + \"%\";\r\n            return val;\r\n        }\r\n    }\r\n};\r\n\r\nclass Donut extends React.Component {\r\n\r\n    calcAll = (data: any) => {\r\n        let result = 0;\r\n        data.map((item: any) => {\r\n            result += item.count\r\n        })\r\n        return result\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Chart\r\n                    height={250}\r\n                    data={dv}\r\n                    scale={cols}\r\n                    padding={[10, 10, 10, 10]}\r\n                    forceFit\r\n                >\r\n                    <Coord type={\"theta\"} radius={0.75} innerRadius={0.6} />\r\n                    <Axis name=\"percent\" />\r\n                    <Legend\r\n                        position=\"bottom\"\r\n                    />\r\n                    <Tooltip\r\n                        showTitle={false}\r\n                        itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\r\n                    />\r\n                    <Guide>\r\n                        <Html\r\n                            position={[\"50%\", \"50%\"]}\r\n                            html={`<div style=&quot;color:#8c8c8c;font-size:1.16em;text-align: center;width: 10em;&quot;><span style=&quot;color:#262626;font-size:2.5em&quot;>${this.calcAll(data)}</span>次</div>`}\r\n                            alignX=\"middle\"\r\n                            alignY=\"middle\"\r\n                        />\r\n                    </Guide>\r\n                    <Geom\r\n                        type=\"intervalStack\"\r\n                        position=\"percent\"\r\n                        color=\"item\"\r\n                        tooltip={[\r\n                            \"item*percent\",\r\n                            (item, percent) => {\r\n                                percent = percent * 100 + \"%\";\r\n                                return {\r\n                                    name: item,\r\n                                    value: percent\r\n                                };\r\n                            }\r\n                        ]}\r\n                        style={{\r\n                            lineWidth: 1,\r\n                            stroke: \"#fff\"\r\n                        }}\r\n                    >\r\n                        <Label\r\n                            content=\"percent\"\r\n                            formatter={(val, item) => {\r\n                                return item.point.item;\r\n                            }}\r\n                        />\r\n                    </Geom>\r\n                </Chart>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Donut","import React, { Component } from 'react';\r\nimport { EditOutlined, CommentOutlined } from '@ant-design/icons';\r\nimport { Row, Col, Tabs, Table } from 'antd';\r\nimport Donut from '../public/ActivityDonut';\r\nimport '../../styles/work.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport activityData from '../../test/activity';\r\nimport activityFinishedData from '../../test/activityFinished';\r\n\r\nconst actData = activityData.data;\r\nconst finData = activityFinishedData.data;\r\nconst auth = sessionStorage.getItem(\"auth\")\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass Message extends Component<any, any> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    renderAct = () => {\r\n        // 未完成的活动单项\r\n        const data = actData;\r\n        const list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(<Row className=\"work-tab-item\">\r\n                <Col span={10}><Link to={`/Work/Meeting?id=${0}`}>{item.title}</Link></Col>\r\n                <Col span={10}>{item.time}</Col>\r\n                <Col span={4}>{item.host}</Col>\r\n            </Row>)\r\n        })\r\n        return list\r\n    }\r\n\r\n    renderFin = () => {\r\n        // 已完成的活动单项\r\n        const data = finData;\r\n        const list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(<Row className=\"work-tab-item\">\r\n                <Col span={10}><Link to={`/Work/HistoryMeeting?id=${0}`}>{item.title}</Link></Col>\r\n                <Col span={10}>{item.time}</Col>\r\n                <Col span={4}>{item.host}</Col>\r\n            </Row>)\r\n        })\r\n        return list\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">工作区</div>\r\n                <Row className=\"work-space\" gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n                    <Col span={12} >\r\n                        <Link to=\"/Work/Report\">\r\n                            <div className=\"work-space-card card-shadow\">\r\n                                <EditOutlined style={{ fontSize: \"5rem\", color: \"#CFCFCF\" }} />\r\n                                <span>周报</span>\r\n                            </div>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col span={12} >\r\n                        <Link to=\"/Work/Discuss\">\r\n                            <div className=\"work-space-card card-shadow\">\r\n                                <CommentOutlined style={{ fontSize: \"5rem\", color: \"#CFCFCF\" }} />\r\n                                <span>讨论区</span>\r\n                            </div>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"work-title\">会议记录</div>\r\n                <Tabs defaultActiveKey=\"1\" className=\"work-tabs\">\r\n                    <TabPane tab=\"未完成\" key=\"1\" className=\"work-tab\">\r\n                        <Row className=\"work-tab-titles\">\r\n                            <Col className=\"work-tab-title\" span={10}>会议名称</Col>\r\n                            <Col className=\"work-tab-title\" span={10}>会议时间</Col>\r\n                            <Col className=\"work-tab-title\" span={4}>发起人</Col>\r\n                        </Row>\r\n                        <div className=\"work-tab-list\">\r\n                            {this.renderAct()}\r\n                        </div>\r\n                        <p className=\"no-more\">没有更多了鸭 _(:з」∠)_</p>\r\n                    </TabPane>\r\n                    <TabPane tab=\"已完成\" key=\"2\" className=\"work-tab\">\r\n                        <Row className=\"work-tab-titles\">\r\n                            <Col className=\"work-tab-title\" span={10}>会议名称</Col>\r\n                            <Col className=\"work-tab-title\" span={10}>会议时间</Col>\r\n                            <Col className=\"work-tab-title\" span={4}>发起人</Col>\r\n                        </Row>\r\n                        <div className=\"work-tab-list\">\r\n                            {this.renderFin()}\r\n                        </div>\r\n                        <p className=\"no-more\">没有更多了鸭 _(:з」∠)_</p>\r\n                        <p className=\"work-title\">参与程度</p>\r\n                        <Donut />\r\n                    </TabPane>\r\n                </Tabs>\r\n                {auth === \"2\" ?\r\n                    <Link to={`/Work/NewMeeting`} className=\"work-newmeeting card-shadow\">\r\n                        发起会议\r\n                    </Link>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n","export default {\r\n    \"data\": [{\r\n        \"title\": \"天外天2020破冰大会\",\r\n        \"time\": \"2020-07-06 下午2点\",\r\n        \"host\": \"友人A\",\r\n    }, {\r\n        \"title\": \"天外天2021破冰大会\",\r\n        \"time\": \"2021-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2022破冰大会\",\r\n        \"time\": \"2022-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2023破冰大会\",\r\n        \"time\": \"2023-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2024破冰大会\",\r\n        \"time\": \"2024-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }]\r\n}","export default {\r\n    \"data\": [{\r\n        \"title\": \"天外天2020破冰大会\",\r\n        \"time\": \"2020-07-06 下午2点\",\r\n        \"host\": \"友人A\",\r\n    }, {\r\n        \"title\": \"天外天2021破冰大会\",\r\n        \"time\": \"2021-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2022破冰大会\",\r\n        \"time\": \"2022-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2023破冰大会\",\r\n        \"time\": \"2023-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }, {\r\n        \"title\": \"天外天2024破冰大会\",\r\n        \"time\": \"2024-07-06 下午2点\",\r\n        \"host\": \"友人A\"\r\n    }]\r\n}","export default {\r\n    \"data\": [{\r\n        \"type\": \"组长\",\r\n        \"memId\": 2,\r\n        \"name\": \"路人甲\",\r\n        \"campus\": 1,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 3,\r\n        \"name\": \"路人乙\",\r\n        \"campus\": 0,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 4,\r\n        \"name\": \"路人丙\",\r\n        \"campus\": 1,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 5,\r\n        \"name\": \"路人丁\",\r\n        \"campus\": 0,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 6,\r\n        \"name\": \"路人戊\",\r\n        \"campus\": 1,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 7,\r\n        \"name\": \"路人己\",\r\n        \"campus\": 0,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 8,\r\n        \"name\": \"路人庚\",\r\n        \"campus\": 0,\r\n    }, {\r\n        \"type\": \"组员\",\r\n        \"memId\": 9,\r\n        \"name\": \"路人辛\",\r\n        \"campus\": 1,\r\n    }]\r\n}","import { Upload, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Component } from 'react';\r\nimport React from 'react';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nconst props = {\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    className: 'upload-list-inline',\r\n};\r\n\r\nclass PictureWall extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Upload {...props}>\r\n                    <Button><UploadOutlined />上传附件</Button>\r\n                </Upload>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PictureWall;","import React, { Component } from 'react';\r\nimport { Tabs, Tooltip, Modal, Button, Mentions, Input, Form, Select } from 'antd';\r\nimport {\r\n    RocketOutlined,\r\n    MailOutlined,\r\n    CloseOutlined\r\n} from '@ant-design/icons';\r\nimport maskImg from '../../assets/POST-bg.png';\r\nimport '../../styles/message.scss';\r\nimport PictureWall from './PicturesWall';\r\n\r\ninterface Props {\r\n    btncls: string,\r\n    content: JSX.Element | string,\r\n    target?: number[]\r\n}\r\n\r\ninterface State {\r\n    visible: boolean,\r\n    post: boolean,\r\n    prefix: string\r\n}\r\n\r\nconst maskStyle = {\r\n    backgroundColor: \"#f9f9f9\",\r\n    backgroundImage: `url(${maskImg})`,\r\n    backgroundSize: \"90%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\"\r\n}\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass SendMessage extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            post: false,\r\n            visible: false,\r\n            prefix: '@',\r\n        }\r\n    }\r\n\r\n    onChange = (e: any) => {\r\n        console.log(e)\r\n    };\r\n\r\n    onSearch = (_: any, prefix: string) => {\r\n        this.setState({ prefix });\r\n    };\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            post: false,\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({\r\n            post: true,\r\n        })\r\n    };\r\n\r\n    modalHeader = (text: string) => (\r\n        <div>\r\n            <div className=\"send-message-title\">{text}</div>\r\n        </div>\r\n    )\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <Tooltip placement=\"bottom\" title={\"私信\"}>\r\n                    <button onClick={this.showModal} className={this.props.btncls}>{this.props.content}</button>\r\n                </Tooltip>\r\n                <Modal\r\n                    className=\"send-message-modal\"\r\n                    maskStyle={maskStyle}\r\n                    title={this.modalHeader(\"发送私信\")}\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    footer={[\r\n                        null,\r\n                        <Button className=\"send-message-btn\" key=\"submit\" type=\"primary\" onClick={this.handleOk}>发送</Button>,\r\n                    ]}\r\n                >\r\n                    <Form>\r\n                        <Form.Item>\r\n                            <Select mode=\"multiple\" placeholder=\"选择私信接收者\" allowClear={true}>\r\n                                <Option value=\"red\">Red</Option>\r\n                                <Option value=\"green\">Green</Option>\r\n                                <Option value=\"blue\">Blue</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <TextArea rows={12} onChange={this.onChange} autoFocus={false} />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <PictureWall></PictureWall>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </span >\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessage","import React from 'react';\r\nimport { Tabs, Tooltip } from 'antd';\r\nimport {\r\n    UserOutlined,\r\n    MailOutlined\r\n} from '@ant-design/icons';\r\nimport '../../styles/members.scss';\r\nimport memsData from '../../test/members';\r\nimport SendMessage from '../public/SendMessage';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface Member {\r\n    type: string,\r\n    memId: number,\r\n    name: string,\r\n    campus: number\r\n}\r\n\r\nclass Members extends React.PureComponent {\r\n    renderMems() {\r\n        let memLeader: JSX.Element[] = [], memMember: JSX.Element[] = [];\r\n        let data = memsData.data;\r\n        if (data && data.length) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let _item: Member = data[i]\r\n                if (_item.type === \"组长\") {\r\n                    memLeader.push(\r\n                        <div className=\"mem-card card-shadow\" key={_item.memId}>\r\n                            <span>{_item.name}</span>\r\n                            <div>\r\n                                <SendMessage btncls=\"mem-mail-icon\" content={<MailOutlined />} target={[_item.memId]} />\r\n                                <Tooltip placement=\"bottom\" title={\"个人信息\"}>\r\n                                    <span className=\"mem-user-icon\"><UserOutlined /></span>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                } else if (_item.type === \"组员\") {\r\n                    memMember.push(\r\n                        <div className=\"mem-card card-shadow\" key={_item.memId}>\r\n                            <span>{_item.name}</span>\r\n                            <div>\r\n                                <SendMessage btncls=\"mem-mail-icon\" content={<MailOutlined />} />\r\n                                <Tooltip placement=\"bottom\" title={\"个人信息\"}>\r\n                                    <span className=\"mem-user-icon\"><UserOutlined /></span>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"mem-content-by-group\">\r\n                <p className=\"mem-title\">组长</p>\r\n                <div className=\"mem-cards\">\r\n                    {memLeader}\r\n                </div>\r\n                <p className=\"mem-title\">组员</p>\r\n                <div className=\"mem-cards\">\r\n                    {memMember}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"mem-title\">成员概况</span>\r\n                <Tabs defaultActiveKey=\"1\" className=\"mem-container\">\r\n                    <TabPane tab=\"产品组\" key=\"1\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"程序组\" key=\"2\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"前端组\" key=\"3\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"设计组\" key=\"4\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"Android组\" key=\"5\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"iOS组\" key=\"6\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Members\r\n","import React, { Component } from 'react';\r\nimport MarkdownIt from 'markdown-it';\r\nimport Editor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport hljs from 'highlight.js';\r\nimport 'highlight.js/styles/atom-one-light.css';\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */\r\n    {\r\n        highlight: function (str, lang) {\r\n            if (lang && hljs.getLanguage(lang)) {\r\n                try {\r\n                    return hljs.highlight(lang, str).value\r\n                } catch (__) { }\r\n            }\r\n            return '' // use external default escaping\r\n        }\r\n    }\r\n);\r\n\r\nclass MdEditor extends Component<any, any> {\r\n\r\n    render() {\r\n        return (\r\n            <Editor\r\n                value={this.props.defaltValue}\r\n                renderHTML={(text: string) => mdParser.render(text)}\r\n                onChange={this.props.valueChange}\r\n            />)\r\n    }\r\n}\r\n\r\nexport default MdEditor","import React, { Component } from 'react';\r\nimport MdEditor from '../../MdUnit/MdEditor';\r\nimport {\r\n    QuestionCircleOutlined,\r\n    SaveOutlined,\r\n    RocketOutlined\r\n} from '@ant-design/icons';\r\nimport { Button, Form, Mentions } from 'antd';\r\nconst { Option } = Mentions;\r\n\r\ninterface editorType {\r\n    html: any,\r\n    text: string\r\n}\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nvar arr = [\"### 做了什么\", \"### 遇到的问题\", \"### 下周的计划\", \"### 需要的支持\"];\r\nconst defaltVal = arr.join(\"\\n\");\r\n\r\nconst layout = {\r\n    labelCol: { span: 2 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 16 },\r\n};\r\n\r\nclass WeekReportEdit extends Component<Props, State> {\r\n\r\n    handleEditorChange({ html, text }: editorType) {\r\n        console.log(html, text);\r\n    }\r\n\r\n    renderMemberList = () => {\r\n        let list: JSX.Element[] = [];\r\n        for (let i = 1; i < 8; i++) {\r\n            list.push(\r\n                <Option key={i} value={\"友人\" + i.toString()}>\r\n                    友人{i}\r\n                </Option>\r\n            )\r\n        }\r\n        return list;\r\n    }\r\n\r\n    renderTagList = () => {\r\n        let list: JSX.Element[] = [];\r\n        for (let i = 1; i < 8; i++) {\r\n            list.push(\r\n                <Option key={i} value={\"话题\" + i.toString()}>\r\n                    话题{i}\r\n                </Option>\r\n            )\r\n        }\r\n        return list;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"editreport-title\">编辑周报<a href=\"/Work/MdGuide\" className=\"md-rule\" target=\"_blank\"><QuestionCircleOutlined /> 语法指南</a></span>\r\n                <p className=\"editreport-tips\">支持代码语法高亮</p>\r\n                <div className=\"weekreport-md-container\">\r\n                    <MdEditor valueChange={this.handleEditorChange} defaltValue={defaltVal} />\r\n                </div>\r\n\r\n                <Form {...layout} className=\"mention-form\">\r\n                    <Form.Item\r\n                        label=\"@\"\r\n                        name=\"member\"\r\n                    >\r\n                        <Mentions\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"( 输入你想 @ 的伙伴 )\"\r\n                            prefix=\"@\"\r\n                        >\r\n                            {this.renderMemberList()}\r\n                        </Mentions>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"#\"\r\n                        name=\"tag\"\r\n                    >\r\n                        <Mentions\r\n                            style={{ width: '100%' }}\r\n                            placeholder=\"( 输入 # 相关主题 )\"\r\n                            prefix=\"#\"\r\n                        >\r\n                            {this.renderTagList()}\r\n                        </Mentions>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n                <div className=\"editreport-btn-group\">\r\n                    <Button className=\"editreport-btn\"><SaveOutlined />保存</Button>\r\n                    <Button className=\"editreport-btn\"><RocketOutlined />提交</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeekReportEdit;\r\n","export default [\r\n    {\r\n        key: '1',\r\n        name: '加粗',\r\n        lang: '**bold**',\r\n        expression: '**bold**',\r\n    },\r\n    {\r\n        key: '2',\r\n        name: '斜体',\r\n        lang: '*italics*',\r\n        expression: '*italics*',\r\n    },\r\n    {\r\n        key: '3',\r\n        name: '删除线',\r\n        lang: '~~strikethrough~~',\r\n        expression: '~~strikethrough~~',\r\n    },\r\n    {\r\n        key: '4',\r\n        name: '大标题',\r\n        lang: '# Big header',\r\n        expression: '# Big header',\r\n    },\r\n    {\r\n        key: '5',\r\n        name: '中标题',\r\n        lang: '## Medium header',\r\n        expression: '## Medium header',\r\n    },\r\n    {\r\n        key: '6',\r\n        name: '小标题',\r\n        lang: '### Small header',\r\n        expression: '### Small header',\r\n    },\r\n    {\r\n        key: '7',\r\n        name: '更小标题',\r\n        lang: '#### Tiny header',\r\n        expression: '#### Tiny header',\r\n    },\r\n    {\r\n        key: '8',\r\n        name: '无序号列表',\r\n        lang: '* Generic list item',\r\n        expression: '* Generic list item',\r\n    },\r\n    {\r\n        key: '9',\r\n        name: '有序号列表',\r\n        lang: '1. Numbered list item',\r\n        expression: '1. Numbered list item',\r\n    },\r\n    {\r\n        key: '10',\r\n        name: '链接',\r\n        lang: '[TwT](http://www.twt.edu.cn)',\r\n        expression: '[TwT](http://www.twt.edu.cn)',\r\n    },\r\n    {\r\n        key: '11',\r\n        name: '引用',\r\n        lang: '> This is a quote.',\r\n        expression: '> This is a quote.',\r\n    },\r\n    {\r\n        key: '12',\r\n        name: '图片',\r\n        lang: '![](http://www.example.com/image.jpg)',\r\n        expression: '![](http://www.example.com/image.jpg)',\r\n    }\r\n];","import React from 'react';\r\nimport MarkdownIt from 'markdown-it';\r\nimport { Table } from 'antd';\r\nimport hljs from 'highlight.js';\r\nimport data from './MdExample';\r\nimport 'highlight.js/styles/atom-one-light.css';\r\n\r\nconst columns = [\r\n    {\r\n        title: '含义',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: '语法',\r\n        dataIndex: 'lang',\r\n        key: 'lang',\r\n    },\r\n    {\r\n        title: '效果',\r\n        dataIndex: 'expression',\r\n        key: 'expression',\r\n        render: (str: string) => (\r\n            <span dangerouslySetInnerHTML={{ __html: md(str) }}></span>\r\n        )\r\n    },\r\n];\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */\r\n    {\r\n        highlight: function (str, lang) {\r\n            if (lang && hljs.getLanguage(lang)) {\r\n                try {\r\n                    return hljs.highlight(lang, str).value\r\n                } catch (__) { }\r\n            }\r\n            return '' // use external default escaping\r\n        }\r\n    }\r\n);\r\n\r\nfunction md(str: string): string {\r\n    return mdParser.render(str);\r\n}\r\n\r\nclass MdGuide extends React.PureComponent {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"editreport-title\">Markdown 语法指南</span>\r\n                <Table columns={columns} dataSource={data} pagination={{ hideOnSinglePage: true,defaultPageSize:50 }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MdGuide\r\n","import React, { Component } from 'react';\r\nimport { RightCircleOutlined } from '@ant-design/icons';\r\nimport logo from '../../assets/twtlogo_tilt_white.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    MailOutlined,\r\n    PartitionOutlined,\r\n    NotificationOutlined,\r\n    UserSwitchOutlined,\r\n    CalendarOutlined,\r\n    UserOutlined,\r\n    AppstoreAddOutlined\r\n} from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    open: boolean\r\n}\r\n\r\nclass AdminPanel extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    handleOnOpen = (e: any) => {\r\n        e.preventDefault();\r\n        let status = this.state.open;\r\n        this.setState({\r\n            open: !status\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.state.open ? \"admin-panel-trans\" : \"admin-panel\"}>\r\n                <span className=\"admin-panel-icon\" onClick={this.handleOnOpen.bind(this)}>\r\n                    <img src={logo} alt=\"icon\" height={40} width={40} />\r\n                </span>\r\n                <div id=\"admin-panel-menu\">\r\n                    <a href=\"#\"><span className=\"a\">\r\n                        <Link to=\"/Admin/FunctionManage\">\r\n                            <AppstoreAddOutlined />\r\n                        </Link>\r\n                    </span></a>\r\n                    <a href=\"#\"><span className=\"b\">\r\n                        <Link to=\"/Admin/UserManage\">\r\n                            <UserSwitchOutlined />\r\n                        </Link>\r\n                    </span></a>\r\n                    <a href=\"#\"><span className=\"c\">\r\n                        <Link to=\"/Admin/AuthorityManage\">\r\n                            <PartitionOutlined />\r\n                        </Link>\r\n                    </span></a>\r\n                    <a href=\"#\"><span className=\"d\">\r\n                        <Link to=\"/Admin/SystemNotice\">\r\n                            <NotificationOutlined />\r\n                        </Link>\r\n                    </span></a>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminPanel;","import React, { Component } from \"react\";\r\nimport Panel from \"../../public/AdminPanel\"\r\nimport { Tabs, Row, Col, Switch, Form } from \"antd\";\r\nimport memsData from '../../../test/members';\r\nconst { TabPane } = Tabs;\r\n\r\ninterface Member {\r\n    type: string,\r\n    memId: number,\r\n    name: string,\r\n    campus: number\r\n}\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass AuthorityManage extends Component<Props, State>{\r\n\r\n    campusSwitch = (campus: number) => {\r\n        if (campus === 0) {\r\n            return \"卫津路\"\r\n        } else if (campus === 1) {\r\n            return \"北洋园\"\r\n        }\r\n    }\r\n\r\n    isChecked = (auth: string) => {\r\n        if (auth === \"组长\") {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    onChange(checked: any, event: any) {\r\n        console.log(`switch to ${checked}`);\r\n    }\r\n\r\n    renderMems() {\r\n        let memLeader: JSX.Element[] = [], memMember: JSX.Element[] = [];\r\n        let data = memsData.data;\r\n        if (data && data.length) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let _item: Member = data[i]\r\n                memLeader.push(\r\n                    <Row className=\"mem-card card-shadow\" key={_item.memId}>\r\n                        <Col span={4}>{_item.name}</Col>\r\n                        <Col span={16}>{this.campusSwitch(_item.campus) + \"校区\"}</Col>\r\n                        <Col span={4}>\r\n                            <Form.Item name={`switch${_item.memId}`}>\r\n                                <Switch\r\n                                    checkedChildren=\"组长\"\r\n                                    unCheckedChildren=\"组员\"\r\n                                    onClick={this.onChange}\r\n                                    defaultChecked={this.isChecked(_item.type)}\r\n                                />\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"mem-content-by-group\">\r\n                <div className=\"mem-cards\">\r\n                    <Form>\r\n                        {memLeader}\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"auth-manage\">\r\n                <Panel />\r\n                <div className=\"admin-title\">权限管理</div>\r\n                <Tabs defaultActiveKey=\"1\" className=\"mem-container\">\r\n                    <TabPane tab=\"产品组\" key=\"1\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"程序组\" key=\"2\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"前端组\" key=\"3\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"设计组\" key=\"4\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"Android组\" key=\"5\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                    <TabPane tab=\"iOS组\" key=\"6\" className=\"mem-tabs\">\r\n                        {this.renderMems()}\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthorityManage","import React, { Component } from \"react\";\r\n\r\nclass UserManage extends Component<any, any>{\r\n    render() {\r\n        return (\r\n            <div>用户管理</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserManage","export default {\r\n    \"data\": [\r\n        {\r\n            \"id\": 1,\r\n            \"post_time\": \"2020-05-22 17:00\",\r\n            \"auther\": \"超级管理员\",\r\n            \"target\": \"全体成员\",\r\n            \"describe\": \"blablabla\"\r\n        }, {\r\n            \"id\": 2,\r\n            \"post_time\": \"2020-05-04 12:02\",\r\n            \"auther\": \"超级管理员\",\r\n            \"target\": \"全体组长\",\r\n            \"describe\": \"blablabla\"\r\n        }, {\r\n            \"id\": 3,\r\n            \"post_time\": \"2020-04-26 11:52\",\r\n            \"auther\": \"超级管理员\",\r\n            \"target\": \"全体成员\",\r\n            \"describe\": \"blablabla\"\r\n        }\r\n    ]\r\n}","import React, { Component } from \"react\";\r\nimport Panel from '../../public/AdminPanel';\r\nimport '../../../styles/admin.scss';\r\nimport { Row, Col, Form, Input, Radio, Button } from \"antd\";\r\nimport sysnotice from '../../../test/sysnotice';\r\nimport { Link } from \"react-router-dom\";\r\nconst { TextArea } = Input;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    value: number\r\n}\r\n\r\nclass SystemNotice extends Component<Props, State>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 1\r\n        };\r\n    }\r\n    hisPostRender = () => {\r\n        let list: JSX.Element[] = [];\r\n        sysnotice.data.map((item) => {\r\n            list.push(\r\n                <Link to={`/Admin/SystemNoticeHistory?id=${item.id}`}>\r\n                    <Row className=\"his-post-cotents\" key={item.id}>\r\n                        <Col className=\"his-post-cotent\" span={2}>{item.id}</Col>\r\n                        <Col className=\"his-post-cotent\" span={6}>{item.post_time}</Col>\r\n                        <Col className=\"his-post-cotent\" span={4}>{item.auther}</Col>\r\n                        <Col className=\"his-post-cotent\" span={6}>{item.target}</Col>\r\n                        <Col className=\"his-post-cotent\" span={6}>{item.describe}</Col>\r\n                    </Row>\r\n                </Link>\r\n            )\r\n        })\r\n        return list\r\n    }\r\n\r\n    onRadioChange = (e: any) => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"system-notice\">\r\n                <Panel />\r\n                <div className=\"admin-title\">历史发布</div>\r\n                <div className=\"his-post card-shadow\">\r\n                    <Row className=\"his-post-titles\">\r\n                        <Col className=\"his-post-title\" span={2}></Col>\r\n                        <Col className=\"his-post-title\" span={6}>发布时间</Col>\r\n                        <Col className=\"his-post-title\" span={4}>发布人</Col>\r\n                        <Col className=\"his-post-title\" span={6}>发布对象</Col>\r\n                        <Col className=\"his-post-title\" span={6}>主要内容</Col>\r\n                    </Row>\r\n                    <div className=\"his-post-list\">\r\n                        {this.hisPostRender()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"admin-title\">新建公告</div>\r\n                <div className=\"new-post card-shadow\">\r\n                    <Form>\r\n                        <Row>\r\n                            <Col span={16}>\r\n                                <Form.Item name=\"content\">\r\n                                    <TextArea rows={6} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item className=\"switch-target\" name=\"target\">\r\n                                    <Radio.Group onChange={this.onRadioChange} value={this.state.value}>\r\n                                        <Radio value={1}>全体成员</Radio>\r\n                                        <Radio value={2}>全体组长</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                <Form.Item className=\"post\">\r\n                                    <Button htmlType=\"submit\">发布</Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SystemNotice","import React, { Component } from \"react\";\r\n\r\nclass FunctionManage extends Component<any, any>{\r\n    render() {\r\n        return (\r\n            <div>功能管理</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FunctionManage","import React, { Component } from 'react';\r\nimport { Col, Input, Button, Form } from 'antd';\r\nimport { CloseCircleOutlined, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nclass Sign extends Component<any, any> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            signState: \"notSigned\"\r\n        }\r\n    }\r\n    renderContent = (state: string) => {\r\n        switch (state) {\r\n            case \"notSigned\":\r\n                return (<div className=\"sign-card card-shadow\">\r\n                    <Col span={12} offset={6}>\r\n                        <p className=\"sign-card-t1\">休想蒙混过关，快快交出密码</p>\r\n                        <Form>\r\n                            <Input.Password className=\"sign-card-psw\" placeholder=\"在此输入秘钥……\" />\r\n                            <div className=\"sign-card-btns\">\r\n                                <Button className=\"sign-card-btn card-shadow\">确定</Button>\r\n                            </div>\r\n                        </Form>\r\n                        <p className=\"sign-card-t2\">按Enter键结束输入哦</p>\r\n                    </Col>\r\n                </div>)\r\n                break;\r\n            case \"signFailed\":\r\n                return (\r\n                    <Col span={24}>\r\n                        <div className=\"sign-card-failed card-shadow\">\r\n                            <Col span={12} offset={6}>\r\n                                <CloseCircleOutlined className=\"sign-card-icon\" style={{ fontSize: \"7rem\", color: \"#ffffff\" }} />\r\n                                <p>ERROR</p>\r\n                                <p>互联网并非法外之地！请君自重</p>\r\n                                <div onClick={this.backToSign.bind(this)} className=\"sign-card-back\">返回</div>\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                );\r\n                break;\r\n            case \"signSucceed\":\r\n                return (\r\n                    <Col span={24}>\r\n                        <div className=\"sign-card-succeed card-shadow\">\r\n                            <Col span={12} offset={6}>\r\n                                <CheckCircleOutlined className=\"sign-card-icon\" style={{ fontSize: \"7rem\", color: \"#ffffff\" }} />\r\n                                <p>BINGO</p>\r\n                                <p>签到成功</p>\r\n                                <h4>签到时间：2020-05-02 20:32</h4>\r\n                                <div onClick={this.backToSign.bind(this)} className=\"sign-card-back\">返回</div>\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                );\r\n                break;\r\n        }\r\n    }\r\n\r\n    backToSign = () => {\r\n        this.setState({\r\n            signState: \"notSigned\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">签到</div>\r\n                {this.renderContent(this.state.signState)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sign\r\n","import React, { Component } from 'react';\r\nimport { Input, Form, Button } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 16 },\r\n};\r\n\r\nclass MeetingRecord extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"meeting-record\">\r\n                <div className=\"work-title\">会议记录</div>\r\n                <div className=\"hismetting-card card-shadow\">\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"NewMeeting\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"会议记录\"\r\n                            name=\"record\"\r\n                            rules={[{ required: true, message: '会议记录无法为空' }]}\r\n                        >\r\n                            <TextArea rows={6} />\r\n                        </Form.Item>\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MeetingRecord;","import React, { Component } from 'react';\r\nimport { Input, Form } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport MeetingRecord from './MeetingRecord';\r\nconst auth = sessionStorage.getItem(\"auth\");\r\nconst { Search } = Input;\r\n\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    status: number\r\n}\r\n\r\nclass MeetingHistory extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            status: 1\r\n        };\r\n    }\r\n\r\n    renderStatus = (status: number) => {\r\n        switch (status) {\r\n            case 1:\r\n                return <span>\r\n                    <span style={{ color: \"#89C997\", fontWeight: \"bold\" }}>已签到</span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>已请假</span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>未出勤</span>\r\n                </span>\r\n                break;\r\n            case 2:\r\n                return <span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>已签到</span>\r\n                    <span style={{ color: \"#F8B551\", fontWeight: \"bold\" }}>已请假</span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>未出勤</span>\r\n                </span>\r\n                break;\r\n            case 3:\r\n                return <span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>已签到</span>\r\n                    <span style={{ color: \"#DCDCDC\", fontWeight: \"bold\" }}>已请假</span>\r\n                    <span style={{ color: \"#EC6941\", fontWeight: \"bold\" }}>未出勤</span>\r\n                </span>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">历史会议</div>\r\n                <div className=\"hismetting-card card-shadow\">\r\n                    <div className=\"hismetting-search\">\r\n                        <Search\r\n                            style={{ display: \"none\" }}\r\n                            // 感觉没什么用，隐藏了\r\n                            prefix={\"会议名称 ：\"}\r\n                            placeholder=\"input search text\"\r\n                            onSearch={(value: any) => console.log(value)}\r\n                        />\r\n                    </div>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">会议名称：</span>XXX组2020年第N周组会</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">会议时间：</span>2020.05.09 18:30——2020.05.09 19:00</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">会议地点：</span>天外天工作室（北洋园校区）</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">发起人：</span>张某某（3017005243）</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">主持人：</span>张某某（3017005243）</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">主要内容：</span>讨论有关工作室网址迁移的通知及注意事项</p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">出勤比例：</span>39 / 50\r\n                    {auth === \"2\" ?\r\n                            <Link to={`/Work/GroupAttending?id=${0}`} className=\"mygroup\">\r\n                                我组成员情况\r\n                            </Link>\r\n                            : null}\r\n                    </p>\r\n                    <p className=\"hismetting-list\"><span className=\"hismetting-list-title\">您的状态：</span>{this.renderStatus(this.state.status)}</p>\r\n                </div>\r\n                <MeetingRecord />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MeetingHistory;\r\n","import React, { Component } from 'react';\r\nimport { Checkbox, Row, Col, Form, Button } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass Leave extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handelReasonChange(e: any) {\r\n        console.log('checked = ', e);\r\n    }\r\n\r\n    handelExplainChange(e: any) {\r\n        console.log('explain = ', e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">请假</div>\r\n                <div className=\"leave-card card-shadow\">\r\n                    <Form>\r\n                        <p>请假理由</p>\r\n                        <Form.Item>\r\n                            <Checkbox.Group className=\"leave-card-reason\" onChange={this.handelReasonChange}>\r\n                                <Row>\r\n                                    <Col span={6}>\r\n                                        <Checkbox value=\"A\">身体原因</Checkbox>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Checkbox value=\"B\">学业原因</Checkbox>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Checkbox value=\"C\">时间冲突</Checkbox>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Checkbox value=\"D\">其他</Checkbox>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Checkbox.Group>\r\n                        </Form.Item>\r\n                        <p>具体说明</p>\r\n                        <Form.Item>\r\n                            <TextArea className=\"leave-card-explain\" rows={8} onChange={this.handelExplainChange} />\r\n                        </Form.Item>\r\n                        <div className=\"leave-card-btns\">\r\n                            <Link to={`/Work/Meeting?id=${0}`}>\r\n                                <Button className=\"leave-card-back\">返回</Button>\r\n                            </Link>\r\n                            <Button className=\"leave-card-commit\">提交</Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Leave;","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass Meeting extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">待办会议</div>\r\n                <div className=\"meeting-card card-shadow\">\r\n                    <p className=\"meeting-card-title\"> 关于组建室级足球队的大会</p>\r\n                    <p className=\"meeting-card-time\">会议时间：2020-07-08 下午14:20</p>\r\n                    <div className=\"meeting-card-detail\">\r\n                        <p>发起人：于谋华</p>\r\n                        <p>参与人员： 全体工作室成员</p>\r\n                        <p>主要内容： 如会议名所示</p>\r\n                        <p>地点： 天外天工作室</p>\r\n                    </div>\r\n                    <p className=\"meeting-card-desc\">会议要求：无</p>\r\n                    <div className=\"meeting-card-btns\">\r\n                        <Link to={`/Work/Sign?id=${0}`}>\r\n                            <Button className=\"meeting-card-btn-sign card-shadow\">签到</Button>\r\n                        </Link>\r\n                        <Link to={`/Work/Leave?id=${0}`}>\r\n                            <Button className=\"meeting-card-btn-leave card-shadow\">请假</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Meeting;","import React, { Component } from 'react';\r\nimport { Divider, Row, Col, Button } from 'antd';\r\nimport icon from '../../../assets/usericon.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass WeekReport extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">周报</div>\r\n                <div className=\"report-card\">\r\n                    <Row className=\"report-header\">\r\n                        <Col span={4} className=\"report-icon\">\r\n                            <img src={icon} alt=\"Icon\" />\r\n                        </Col>\r\n                        <Col span={10} className=\"report-basic\">\r\n                            <span className=\"report-basic-title\">第20200202期周报</span>\r\n                            <span className=\"report-basic-last\">最近编辑于{4}天前</span>\r\n                        </Col>\r\n                        <Col span={10} className=\"report-btns\">\r\n                            <Row >\r\n                                <Link to={`/Work/EditReport?id=${0}`}>\r\n                                    <Button className=\"report-btn-edit\">去编辑</Button>\r\n                                </Link>\r\n                                <Link to={`/Work/ReportList`}>\r\n                                    <Button className=\"report-btn-other\">随便看看</Button>\r\n                                </Link>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Divider dashed className=\"divider-dashed\" />\r\n                    <div className=\"report-content\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekReport;","export default {\r\n    \"data\": [{\r\n        \"title\": \"天外天at Pro系统运营\",\r\n        \"status\": 1,\r\n        \"team\": \"舍我其谁\",\r\n        \"host\": \"彭某某\",\r\n        \"lastEditor\": \"王某\",\r\n        \"lastEditTime\": \"2020-05-02 17:32\",\r\n        \"startTime\": \"2020-04-08 11:05\",\r\n        \"endTime\": \"2020-05-20 11:05\"\r\n    }, {\r\n        \"title\": \"工作室二十周年庆典筹备\",\r\n        \"status\": 4,\r\n        \"team\": \"\",\r\n        \"host\": \"王某某\",\r\n        \"lastEditor\": \"\",\r\n        \"lastEditTime\": \"\",\r\n        \"startTime\": \"2020-08-05 11:05\",\r\n        \"endTime\": \"2020-08-10 11:05\"\r\n    }, {\r\n        \"title\": \"关于微北洋的百种修复方法\",\r\n        \"status\": 3,\r\n        \"team\": \"一马当先\",\r\n        \"host\": \"李某某\",\r\n        \"lastEditor\": \"李某某\",\r\n        \"lastEditTime\": \"2020-05-01 00:14\",\r\n        \"startTime\": \"2020-04-01 11:05\",\r\n        \"endTime\": \"2020-05-20 11:05\"\r\n    }, {\r\n        \"title\": \"关于新型算法结构的探究\",\r\n        \"status\": 2,\r\n        \"team\": \"迷惑行为\",\r\n        \"host\": \"温某某\",\r\n        \"lastEditor\": \"温某某\",\r\n        \"lastEditTime\": \"2019-02-03 00:00\",\r\n        \"startTime\": \"2020-04-20 11:05\",\r\n        \"endTime\": \"2020-05-20 11:05\"\r\n    }]\r\n}","import React, { Component } from 'react';\r\nimport { Badge, Col, Row, Progress } from 'antd';\r\nimport discussData from '../../../test/discuss';\r\nimport maskImg from '../../../assets/PROJECT-bg.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nconst bgStyle = {\r\n    backgroundImage: `url(${maskImg})`,\r\n    backgroundSize: \"70%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\"\r\n}\r\n\r\nclass Discuss extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    statusPoint = (status: number, withText: boolean) => {\r\n        switch (status) {\r\n            case 1:\r\n                return <Badge status=\"success\" text={withText ? \"进行中\" : null} />\r\n            case 2:\r\n                return <Badge status=\"warning\" text={withText ? \"状态不明\" : null} />\r\n            case 3:\r\n                return <Badge status=\"error\" text={withText ? \"已完结\" : null} />\r\n            case 4:\r\n                return <Badge status=\"default\" text={withText ? \"未开始\" : null} />\r\n\r\n        }\r\n    }\r\n\r\n    calcProgress = (startTime: string, endTime: string) => {\r\n        let start = new Date(startTime);\r\n        let end = new Date(endTime);\r\n        let now = new Date();\r\n        if (now.getTime() - end.getTime() < 0) {\r\n            return Math.ceil((now.getTime() - start.getTime()) / (end.getTime() - start.getTime()) * 100)\r\n        } else {\r\n            return 100\r\n        }\r\n\r\n    }\r\n\r\n    renderItem = () => {\r\n        const data = discussData.data;\r\n        const list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(\r\n                <Col span={12} key={0}>\r\n                    <Link to={`/Work/WorkSpace?id=${0}`}>\r\n                        <div className=\"discuss-item card-shadow\">\r\n                            <div>\r\n                                <span className=\"discuss-item-title\">{this.statusPoint(item.status, false)}{item.title}</span>\r\n                                <div className=\"discuss-item-content\">\r\n                                    <div>\r\n                                        {item.status === 4 ? null : <span className=\"discuss-item-text1\">团队：{item.team}</span>}\r\n                                        <span className=\"discuss-item-text1\">组建人：{item.host}</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        {item.status === 4 ? <span className=\"discuss-item-text2\">项目开始时间：{item.startTime}</span> : null}\r\n                                        {item.status === 4 ? null : <span className=\"discuss-item-text2\">最近编辑者：{item.lastEditor}</span>}\r\n                                        {item.status === 4 ? null : <span className=\"discuss-item-text2\">最近编辑于：{item.lastEditTime}</span>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Progress type=\"dashboard\" percent={this.calcProgress(item.startTime, item.endTime)} />\r\n                        </div>\r\n                    </Link>\r\n                </Col>\r\n            )\r\n        })\r\n        return list;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"discuss\" style={bgStyle}>\r\n                <div className=\"work-title\">工作讨论区</div>\r\n                <p className=\"discuss-badges\">\r\n                    {this.statusPoint(1, true)}\r\n                    {this.statusPoint(2, true)}\r\n                    {this.statusPoint(3, true)}\r\n                    {this.statusPoint(4, true)}\r\n                </p>\r\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }} className=\"discuss-items\">\r\n                    {this.renderItem()}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Discuss;","export default {\r\n    \"data\": [{\r\n        \"id\": 1,\r\n        \"team\": 1,\r\n        \"name\": \"路人甲\",\r\n        \"finish\": 0\r\n    }, {\r\n        \"id\": 2,\r\n        \"team\": 1,\r\n        \"name\": \"路人乙\",\r\n        \"finish\": 1\r\n    }, {\r\n        \"id\": 3,\r\n        \"team\": 2,\r\n        \"name\": \"路人丙\",\r\n        \"finish\": 0\r\n    }, {\r\n        \"id\": 4,\r\n        \"team\": 3,\r\n        \"name\": \"路人丁\",\r\n        \"finish\": 0\r\n    }, {\r\n        \"id\": 5,\r\n        \"team\": 5,\r\n        \"name\": \"路人戊\",\r\n        \"finish\": 0\r\n    }, {\r\n        \"id\": 6,\r\n        \"team\": 4,\r\n        \"name\": \"路人己\",\r\n        \"finish\": 0\r\n    }, {\r\n        \"id\": 7,\r\n        \"team\": 3,\r\n        \"name\": \"路人庚\",\r\n        \"finish\": 0\r\n    }]\r\n}","import React, { Component } from 'react';\r\nimport { Collapse, Dropdown, Button, Menu, DatePicker } from 'antd';\r\nimport { DownOutlined, ClockCircleOutlined } from '@ant-design/icons';\r\nimport reportlist from '../../../test/reportlist';\r\nimport { Link } from 'react-router-dom';\r\nconst { Panel } = Collapse;\r\n\r\nfunction getWeek(date: { getFullYear: () => number; getDay: () => any; getTime: () => number; }) {\r\n    var date2 = new Date(date.getFullYear(), 0, 1);\r\n    var day1 = date.getDay();\r\n    if (day1 == 0) day1 = 7;\r\n    var day2 = date2.getDay();\r\n    if (day2 == 0) day2 = 7;\r\n    const d = Math.round((date.getTime() - date2.getTime() + (day2 - day1) * (24 * 60 * 60 * 1000)) / 86400000);\r\n    return Math.ceil(d / 7) + 1;\r\n}\r\n\r\nfunction getYear(date: Date) {\r\n    return date.getFullYear();\r\n}\r\n\r\n\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nfunction onChange(date: any) {\r\n    let selectWeek = date.format(\"w\")\r\n    console.log(selectWeek);\r\n}\r\n\r\nfunction handleMenuClick(e: any) {\r\n    console.log('click', e);\r\n}\r\n\r\nclass WeekReportList extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    teamFilter = (team: number) => {\r\n        let data = reportlist.data;\r\n        let list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            if (item.team === team) {\r\n                list.push(\r\n                    <Link to={`/`}>\r\n                        <div className=\"reportlist-item\" key={item.id}>\r\n                            <span className=\"reportlist-item-name\">{item.name}</span>\r\n                            <span className=\"reportlist-item-status\">{item.finish ? <span className=\"yes\">已提交</span> : <span className=\"no\">未提交</span>}</span>\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            }\r\n        })\r\n        return list;\r\n    }\r\n\r\n    weekMenu = () => {\r\n        let i = 1;\r\n        let list: JSX.Element[] = [];\r\n        return (\r\n            <Menu onClick={handleMenuClick}>\r\n                <Menu.Item key={`${i}`} >{i}</Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let now = new Date();\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">相关周报</div>\r\n                <div className=\"reportlist-card\">\r\n                    <div className=\"reportlist-select-header\">\r\n                        <Dropdown overlay={this.weekMenu()}>\r\n                            <Button>\r\n                                第{getYear(now)}{getWeek(now)}期周报 <DownOutlined />\r\n                            </Button>\r\n                        </Dropdown>\r\n                        <DatePicker onChange={onChange} picker=\"week\" />\r\n                    </div>\r\n                    <Collapse>\r\n                        <Panel header=\"前端组\" key=\"1\">\r\n                            {this.teamFilter(1)}\r\n                        </Panel>\r\n                        <Panel header=\"程序组\" key=\"2\">\r\n                            {this.teamFilter(2)}\r\n                        </Panel>\r\n                        <Panel header=\"产品组\" key=\"3\">\r\n                            {this.teamFilter(3)}\r\n                        </Panel>\r\n                        <Panel header=\"设计组\" key=\"4\">\r\n                            {this.teamFilter(4)}\r\n                        </Panel>\r\n                        <Panel header=\"移动组\" key=\"5\">\r\n                            {this.teamFilter(5)}\r\n                        </Panel>\r\n                    </Collapse>\r\n                    <Link to=\"/Work/Report\" className=\"reportlist-back\">\r\n                        <Button>返回</Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekReportList;","import React, { Component } from 'react';\r\nimport { Badge, Tabs } from 'antd';\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    isEditing: boolean\r\n}\r\n\r\nclass WorkSpace extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditing: false\r\n        };\r\n    }\r\n\r\n    statusPoint = (status: number, withText: boolean) => {\r\n        switch (status) {\r\n            case 1:\r\n                return <Badge status=\"success\" text={withText ? \"进行中\" : null} />\r\n            case 2:\r\n                return <Badge status=\"warning\" text={withText ? \"状态不明\" : null} />\r\n            case 3:\r\n                return <Badge status=\"error\" text={withText ? \"已完结\" : null} />\r\n            case 4:\r\n                return <Badge status=\"default\" text={withText ? \"未开始\" : null} />\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">工作讨论区</div>\r\n                <p className=\"discuss-badges\">\r\n                    {this.statusPoint(1, true)}\r\n                </p>\r\n                <Tabs defaultActiveKey=\"1\" className=\"workspace-container\">\r\n                    <TabPane tab=\"公共区\" key=\"1\" className=\"workspace-public\">\r\n\r\n                    </TabPane>\r\n                    <TabPane tab=\"我的历史提交\" key=\"2\" className=\"workspace-hiscommit\">\r\n\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorkSpace;","import React, { Component } from 'react';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass GroupAttending extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">组员出勤情况</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupAttending;","import React, { Component } from 'react';\r\nimport { Form, Input, Button, DatePicker, TimePicker } from 'antd';\r\nimport moment from 'moment';\r\nimport { Mentions } from 'antd';\r\nimport maskImg from '../../../assets/twtlogo_tilt_grey.svg';\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Mentions;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    randomKey: string,\r\n    random: boolean\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 12 },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 16 },\r\n};\r\n\r\nconst maskStyle = {\r\n    backgroundImage: `url(${maskImg})`,\r\n    backgroundSize: \"40%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"top right\"\r\n}\r\n\r\nclass NewMeeting extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            randomKey: \"\",\r\n            random: false\r\n        };\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    startDateOnChange(date: any, dateString: any) {\r\n        console.log(date, dateString);\r\n    }\r\n\r\n    startTimeOnChange(time: any, timeString: any) {\r\n        console.log(time, timeString);\r\n    }\r\n\r\n    memberOnChange(value: any) {\r\n        console.log('Change:', value);\r\n    }\r\n\r\n    memberOnSelect(option: any) {\r\n        console.log('select', option);\r\n    }\r\n\r\n    renderMemberList = () => {\r\n        let list: JSX.Element[] = [];\r\n        for (let i = 1; i < 10; i++) {\r\n            list.push(<Option value={`${1}`}>友人{i}</Option>)\r\n        }\r\n        return list;\r\n    }\r\n\r\n    randomSerectKey = () => {\r\n        var pasArr = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n        var password = '';\r\n        var pasArrLen = pasArr.length;\r\n        for (var i = 0; i < 8; i++) {\r\n            var x = Math.floor(Math.random() * pasArrLen);\r\n            password += pasArr[x];\r\n        }\r\n        this.setState({\r\n            randomKey: password,\r\n            random: true\r\n        })\r\n    }\r\n\r\n    resetSerectKey = () => {\r\n        this.setState({\r\n            random: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"work-title\">发起会议</div>\r\n                <div className=\"newmeeting-form\" style={maskStyle}>\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"NewMeeting\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"会议名称\"\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: '请输入会议名称' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议开始日期\"\r\n                            name=\"startdate\"\r\n                            rules={[{ required: true, message: '请输入会议开始日期' }]}\r\n                        >\r\n                            <DatePicker onChange={this.startDateOnChange} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议开始时间\"\r\n                            name=\"starttime\"\r\n                            rules={[{ required: true, message: '请输入会议开始时间' }]}\r\n                        >\r\n                            <TimePicker onChange={this.startTimeOnChange} defaultOpenValue={moment('00:00:00', 'HH:mm:ss')} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议结束日期\"\r\n                            name=\"enddate\"\r\n                            rules={[{ required: true, message: '请输入会议结束日期' }]}\r\n                        >\r\n                            <DatePicker onChange={this.startDateOnChange} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议结束时间\"\r\n                            name=\"endtime\"\r\n                            rules={[{ required: true, message: '请输入会议结束时间' }]}\r\n                        >\r\n                            <TimePicker onChange={this.startTimeOnChange} defaultOpenValue={moment('00:00:00', 'HH:mm:ss')} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议秘钥\"\r\n                            name=\"mettingMember\"\r\n                            rules={[{ required: true, message: '请输入8位会议秘钥' }]}\r\n                        >\r\n                            {this.state.random ?\r\n                                <Input\r\n                                    placeholder=\"8位字符串(区分大小写)\"\r\n                                    value={`${this.state.randomKey}`}\r\n                                    disabled={true}\r\n                                /> :\r\n                                <Input\r\n                                    placeholder=\"8位字符串（区分大小写）\"\r\n                                />}\r\n                            <Button className=\"random-key\" onClick={this.randomSerectKey.bind(this)}>随机生成</Button>\r\n                            <Button className=\"random-key\" onClick={this.resetSerectKey.bind(this)}>重置秘钥</Button>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"添加成员\"\r\n                            name=\"mettingMember\"\r\n                            rules={[{ required: true, message: '请添加与会成员' }]}\r\n                        >\r\n                            <Mentions\r\n                                onChange={this.memberOnChange}\r\n                                onSelect={this.memberOnSelect}\r\n                                placeholder=\"使用 @ 快速选择成员\"\r\n                            >\r\n                                {this.renderMemberList()}\r\n                            </Mentions>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"会议内容\"\r\n                            name=\"content\"\r\n                        >\r\n                            <TextArea rows={4} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">发布</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewMeeting;","import React, { } from 'react';\r\nimport detail from '../../test/messagedetail';\r\nimport { Col, Row } from 'antd';\r\nconst data = detail.data;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nclass MessageDetail extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <p className=\"mes-title\">消息详情</p>\r\n                <div className=\"mes-detail-card\">\r\n                    <Row className=\"mes-detail-header\">\r\n                        <Col offset={4} span={8} className=\"mes-detail-item\">From:<span>{data[0].from}</span></Col>\r\n                        <Col span={8} >{data[0].updated_at}</Col>\r\n                    </Row>\r\n                    <p className=\"mes-detail-item\">内容:<span>{data[0].message}</span></p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageDetail;","export default {\r\n    \"error_code\": 0,\r\n    \"data\": [\r\n        {\r\n            \"from\": \"友人A\",\r\n            \"topic\": \"测试\",\r\n            \"updated_at\": \"2020-05-16 17:24:24\",\r\n            \"message\": \"急急急！这位组员已失联！请速回！工作室的王某某！我找你有事嗷！请你喝奶茶！快回来！你上周组会是不是也没来（阴森）？\",\r\n            \"file\": \"\"\r\n        }\r\n    ],\r\n    \"message\": \"获取成功\"\r\n}","export default {\r\n    \"data\": {\r\n        \"id\": 1,\r\n        \"to\": \"0\",\r\n        \"message\": \"一场由 测试 主持的会议 “ 测试 ” 将于 2020-5-20 21:00:00 在 测试 举行，请准时参加。本会议的验证码为：123\",\r\n        \"created_at\": \"2020-05-17 21:56:11\",\r\n        \"updated_at\": \"2020-05-17 21:56:11\",\r\n        \"status\": \"0\"\r\n    }\r\n}","import Dashboard from '../components/Dashboard/Dashboard';\r\nimport Profile from '../components/Profile/Profile';\r\nimport Message from '../components/Message/Message';\r\nimport Work from '../components/Work/Work';\r\nimport Members from '../components/Members/Members';\r\nimport WeekReportEdit from '../components/Work/WeekReport/WeekReportEdit';\r\nimport MdGuide from '../components/MdUnit/MdGuide';\r\nimport AdminAuthorityManage from '../components/Admin/AuthManage/AuthorityManage';\r\nimport AdminUserManage from '../components/Admin/UseManage/UserManage';\r\nimport AdminSystemNotice from '../components/Admin/SysNotice/SystemNotice';\r\nimport AdminFunctionManage from '../components/Admin/FuncManage/FunctionManage';\r\nimport Sign from '../components/Work/Meeting/Sign';\r\nimport MeetingHistory from '../components/Work/Meeting/MeetingHistory';\r\nimport Leave from '../components/Work/Meeting/Leave';\r\nimport Meeting from '../components/Work/Meeting/Meeting';\r\nimport WeekReport from '../components/Work/WeekReport/WeekReport';\r\nimport Discuss from '../components/Work/Discuss/Discuss';\r\nimport WeekReportList from '../components/Work/WeekReport/WeekReportList';\r\nimport WorkSpace from '../components/Work/Discuss/WorkSpace';\r\nimport GroupAttending from '../components/Work/Meeting/GroupAttending';\r\nimport NewMeeting from '../components/Work/Meeting/NewMeeting';\r\nimport MessageDetail from '../components/Message/MessageDetail';\r\nimport SystemNoticeHistory from '../components/Admin/SysNotice/SystemNoticeHistory';\r\n\r\n\r\nexport default [{\r\n    label: \"首页\",\r\n    path: '/',\r\n    component: Dashboard,\r\n}, {\r\n    label: \"个人\",\r\n    path: '/Profile',\r\n    component: Profile\r\n}, {\r\n    label: \"消息\",\r\n    path: '/Message',\r\n    component: Message\r\n},{\r\n    label: \"消息详情\",\r\n    path: '/Message/Detail',\r\n    component: MessageDetail\r\n}, {\r\n    label: \"工作\",\r\n    path: '/Work',\r\n    component: Work,\r\n}, {\r\n    label: \"成员\",\r\n    path: '/Members',\r\n    component: Members,\r\n}, {\r\n    label: \"周报\",\r\n    path: '/Work/Report',\r\n    component: WeekReport,\r\n}, {\r\n    label: \"周报列表\",\r\n    path: '/Work/ReportList',\r\n    component: WeekReportList,\r\n}, {\r\n    label: \"编辑周报\",\r\n    path: '/Work/EditReport',\r\n    component: WeekReportEdit,\r\n}, {\r\n    label: \"Markdown导引\",\r\n    path: '/Work/MdGuide',\r\n    component: MdGuide,\r\n}, {\r\n    label: \"后台功能管理\",\r\n    path: '/Admin/FunctionManage',\r\n    component: AdminFunctionManage,\r\n},{\r\n    label: \"后台权限管理\",\r\n    path: '/Admin/AuthorityManage',\r\n    component: AdminAuthorityManage,\r\n}, {\r\n    label: \"后台系统公告\",\r\n    path: '/Admin/SystemNotice',\r\n    component: AdminSystemNotice,\r\n},  {\r\n    label: \"后台系统历史公告\",\r\n    path: '/Admin/SystemNoticeHistory',\r\n    component: SystemNoticeHistory,\r\n}, {\r\n    label: \"后台用户管理\",\r\n    path: '/Admin/UserManage',\r\n    component: AdminUserManage,\r\n}, {\r\n    label: \"签到\",\r\n    path: \"/Work/Sign\",\r\n    component: Sign,\r\n}, {\r\n    label: \"请假\",\r\n    path: \"/Work/Leave\",\r\n    component: Leave,\r\n}, {\r\n    label: \"历史会议\",\r\n    path: \"/Work/HistoryMeeting\",\r\n    component: MeetingHistory\r\n}, {\r\n    label: \"发起会议\",\r\n    path: \"/Work/NewMeeting\",\r\n    component: NewMeeting\r\n}, {\r\n    label: \"未完成会议\",\r\n    path: \"/Work/Meeting\",\r\n    component: Meeting\r\n}, {\r\n    label: \"组员出勤情况\",\r\n    path: \"/Work/GroupAttending\",\r\n    component: GroupAttending\r\n}, {\r\n    label: \"讨论区\",\r\n    path: \"/Work/Discuss\",\r\n    component: Discuss\r\n},{\r\n    label: \"讨论面板\",\r\n    path: \"/Work/WorkSpace\",\r\n    component: WorkSpace\r\n},\r\n]","import React, { Component } from 'react';\r\nimport Panel from '../../public/AdminPanel';\r\nimport sysnoticehistory from '../../../test/sysnoticehistory';\r\nimport { Row, Col, Form, Radio, Button } from 'antd';\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n    value: number\r\n}\r\n\r\nclass SystemNoticeHistory extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 1\r\n        };\r\n    }\r\n\r\n\r\n    onRadioChange = (e: any) => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let data = sysnoticehistory.data;\r\n        return (\r\n            <div className=\"system-notice-history\">\r\n                <Panel />\r\n                <div className=\"admin-title\">历史发布</div>\r\n                <div className=\"system-notice-history-card card-shadow\">\r\n                    <Row>\r\n                        <Col span={16}>\r\n                            <p className=\"system-notice-history-content\">\r\n                                {data.message}\r\n                            </p>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Form>\r\n                                <Form.Item className=\"switch-target\" name=\"target\">\r\n                                    <Radio.Group onChange={this.onRadioChange} value={this.state.value}>\r\n                                        <Radio value={1}>全体成员</Radio>\r\n                                        <Radio value={2}>全体组长</Radio>\r\n                                    </Radio.Group>\r\n                                </Form.Item>\r\n                                <Form.Item className=\"post\">\r\n                                    <Button htmlType=\"submit\">发布</Button>\r\n                                    <Button danger>删除</Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SystemNoticeHistory;","export default {\r\n    \"data\": [{\r\n        \"from\": \"管理员\",\r\n        \"topic\": \"测试\",\r\n        \"updated_at\": \"2020-05-16 17:24:24\",\r\n        \"id\": 1,\r\n        \"message\": \"开会啦\"\r\n    }, {\r\n        \"from\": \"管理员\",\r\n        \"topic\": \"测试\",\r\n        \"updated_at\": \"2020-05-16 17:24:24\",\r\n        \"id\": 2,\r\n        \"message\": \"会议结束啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦\"\r\n    }]\r\n}","import React, { Component } from 'react';\r\nimport { Drawer } from 'antd';\r\nimport '../../styles/noti.scss';\r\nimport notiData from '../../test/notification';\r\n\r\nexport interface Props {\r\n    visible: boolean,\r\n    onClose: any\r\n}\r\n\r\nexport interface State {\r\n}\r\n\r\nclass Message extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    renderNoti = () => {\r\n        const data = notiData.data;\r\n        let list: JSX.Element[] = [];\r\n        data.map((item) => {\r\n            list.push(\r\n                <div className=\"noti-card\" key={item.id}>\r\n                    <span className=\"noti-title\">{item.topic}\r\n                        <span className=\"noti-from\">{item.from}</span>\r\n                    </span>\r\n                    <div className=\"noti-content\">\r\n                        <span className=\"noti-text\">{item.message}</span>\r\n                        <span className=\"noti-time\">{item.updated_at}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return list;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    title=\"最新通知\"\r\n                    placement='right'\r\n                    closable={false}\r\n                    onClose={this.props.onClose}\r\n                    visible={this.props.visible}\r\n                >\r\n                    {this.renderNoti()}\r\n                </Drawer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n","import React, { Component } from 'react';\r\nimport { Layout, Badge } from 'antd';\r\nimport Notification from './Notification';\r\nimport { siteTitle } from '../../settings/settings'\r\nimport { Link } from 'react-router-dom';\r\nimport twtlogo from '../../assets/twtlogo_tilt.svg';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    LogoutOutlined,\r\n    BellOutlined,\r\n    HomeOutlined,\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\n\r\nexport interface Props {\r\n    toggle: any,\r\n    visible: boolean,\r\n    collapsed: boolean\r\n}\r\n\r\nexport interface State {\r\n    notiCount: number,\r\n    visible: boolean\r\n}\r\n\r\nclass HeaderComponent extends Component<Props, State>{\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            notiCount: 0\r\n        }\r\n    }\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const panelCtrl = sessionStorage.getItem(\"admin-panel\");\r\n        return (\r\n            <div className={panelCtrl === \"true\" ? \"panel-admin\" : \"panel-user\"}>\r\n                <div>\r\n                    {panelCtrl === \"true\" ?\r\n                        React.createElement(HomeOutlined, {\r\n                            className: 'panel-admin-home',\r\n                            onClick: () => { window.location.href = \"/\" },\r\n                        }) : React.createElement(this.props.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                            className: 'trigger',\r\n                            onClick: this.props.toggle,\r\n                        })}\r\n                </div>\r\n                {panelCtrl === \"true\" ?\r\n                    <p>\r\n                        <div className=\"logo\" >\r\n                            <img src={twtlogo} height=\"40\" width=\"40\" />\r\n                            {siteTitle()}\r\n                        </div>\r\n                    </p>\r\n                    : null}\r\n                {panelCtrl === \"true\" ? <div style={{ marginRight: \"1rem\" }}>\r\n                    <Link className=\"logout\" to=\"/logout\">\r\n                        <LogoutOutlined />\r\n                    </Link>\r\n                </div>\r\n                    :\r\n                    <div style={{ marginRight: \"1rem\" }}>\r\n                        <a className=\"noti-button\" onClick={this.showDrawer}><BellOutlined /></a>\r\n                        <Link className=\"logout\" to=\"/Profile\">\r\n                            <UserOutlined />\r\n                        </Link>\r\n                        <Link className=\"logout\" to=\"/logout\">\r\n                            <LogoutOutlined />\r\n                        </Link>\r\n                        <Notification visible={this.state.visible} onClose={this.onClose} />\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent","import React, { Component } from 'react';\r\nimport './styles/layout.scss';\r\nimport { Layout, Button, Popover } from 'antd';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  LogoutOutlined,\r\n  BellOutlined\r\n} from '@ant-design/icons';\r\nimport SiderCustom from './components/public/Sider';\r\nimport routes from './routes/routeConfig';\r\nimport './styles/common.scss';\r\nimport HeaderComponent from './components/public/Header';\r\nconst { Header, Content } = Layout;\r\n\r\nexport interface Props {\r\n\r\n}\r\n\r\nexport interface State {\r\n  collapsed: boolean,\r\n  visible: boolean\r\n}\r\n\r\nfunction getRoute() {\r\n  const routeList: any = [];\r\n  routes.forEach((rt) => {\r\n    const route = (r: any) => (\r\n      <Route\r\n        key={r.path}\r\n        exact\r\n        path={r.path}\r\n        component={r.component}\r\n      />\r\n    );\r\n    if (rt.component) {\r\n      routeList.push(route(rt));\r\n    }\r\n  });\r\n  return routeList;\r\n}\r\n\r\nclass App extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n      visible: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const panelCtrl = sessionStorage.getItem(\"admin-panel\");\r\n    return (\r\n      <Layout className=\"App\">\r\n        {panelCtrl === \"true\" ? null : <SiderCustom collapsed={this.state.collapsed} />}\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"header-background\" style={{ padding: 0 }}>\r\n            <HeaderComponent collapsed={this.state.collapsed} toggle={this.toggle} visible={this.state.visible} />\r\n          </Header>\r\n          <Content className=\"content-background\">\r\n            <div className=\"widCtrl\">\r\n              {getRoute()}\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport '../styles/404.scss';\r\nimport logo from '../assets/favicon.png';\r\n\r\nclass NoAccess extends Component {\r\n\r\n  numberRender() {\r\n    const numberList: JSX.Element[] = [];\r\n    for (let i = 0; i < 25; i++) {\r\n      numberList.push(<span className=\"particle\">Error</span>)\r\n      numberList.push(<span className=\"particle\">No Auth</span>)\r\n    }\r\n    return numberList\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"container\">\r\n        {this.numberRender()}\r\n        <article className=\"content\">\r\n          <img src={logo} width=\"100\" height=\"100\"></img>\r\n          <h1><strong>NO_AUTH</strong></h1>\r\n          <p>你没有访问该页面的权限</p>\r\n          <p>\r\n            <a href=\"/\"><button>返回首页</button></a>\r\n          </p>\r\n        </article>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoAccess;","import { Result, Button } from 'antd';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\nimport React, { Component } from 'react';\r\nimport fetchApi from '../api/callApi';\r\nimport { getLogout } from '../api/OAuth';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount = () => {\r\n        const {apiPath,request} =getLogout();\r\n        fetchApi(apiPath,request)\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        sessionStorage.clear();\r\n        return (\r\n            <Result\r\n                icon={<CheckCircleOutlined />}\r\n                title=\"你已成功登出\"\r\n                status={\"success\"}\r\n                extra={<Button type=\"primary\" href=\"/at-pro\">返回</Button>}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router';\r\nimport NotFound from './pages/404';\r\nimport Login from './pages/Login';\r\nimport App from './App';\r\nimport NoAuth from './pages/NoAuth';\r\nimport Logout from './pages/Logout';\r\n\r\nconst isLogged = sessionStorage.getItem(\"isLogin\") === \"1\" ? true : false;\r\n\r\nexport default () => (\r\n    <Switch>\r\n        <Route path=\"/404\" component={NotFound} />\r\n        <Route path=\"/noauth\" component={NoAuth} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/\" render={props => {\r\n            return isLogged\r\n                ? <App {...props} />\r\n                : <Redirect to=\"/login\" />\r\n        }} />\r\n    </Switch>\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import { createStore, Store } from 'redux';\r\nimport RouteConfig from './Router';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\n// import { Provider } from \"react-redux\";\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst Root = () => (\r\n  <Router basename=\"/at-pro\">\r\n    <ConfigProvider locale={zhCN}>\r\n      <RouteConfig />\r\n    </ConfigProvider>\r\n  </Router>\r\n)\r\n\r\nReactDOM.render(\r\n  <Root />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/twtlogo_tilt.9f1eb11e.svg\";"],"sourceRoot":""}